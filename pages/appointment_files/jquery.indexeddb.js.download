(function(){"use strict";var Event,getAll,IDBIndex,IDBObjectStore,IDBRequest;IDBObjectStore=window.IDBObjectStore||window.webkitIDBObjectStore||window.mozIDBObjectStore||window.msIDBObjectStore;IDBIndex=window.IDBIndex||window.webkitIDBIndex||window.mozIDBIndex||window.msIDBIndex;if(typeof IDBObjectStore.prototype.getAll!=="undefined"&&typeof IDBIndex.prototype.getAll!=="undefined"){return}IDBRequest=function(){this.onsuccess=null;this.readyState="pending"};Event=function(type,debug){return{"type":type,debug:debug,bubbles:false,cancelable:false,eventPhase:0,timeStamp:new Date}};getAll=function(key){var request,result;key=typeof key!=="undefined"?key:null;request=new IDBRequest;result=[];this.openCursor(key).onsuccess=function(event){var cursor,e,target;cursor=event.target.result;if(cursor){result.push(cursor.value);cursor["continue"]()}else{if(typeof request.onsuccess==="function"){e=new Event("success");e.target={readyState:"done",result:result};request.onsuccess(e)}}};return request};if(typeof IDBObjectStore.prototype.getAll==="undefined"){IDBObjectStore.prototype.getAll=getAll}if(typeof IDBIndex.prototype.getAll==="undefined"){IDBIndex.prototype.getAll=getAll}})();(function($,undefined){'use strict';var indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;var IDBKeyRange=window.IDBKeyRange||window.webkitIDBKeyRange;var IDBCursor=window.IDBCursor||window.webkitIDBCursor||{};if(typeof IDBCursor.PREV==="undefined"){IDBCursor.PREV="prev"}if(typeof IDBCursor.NEXT==="undefined"){IDBCursor.NEXT="next"}var IDBTransaction=window.IDBTransaction||window.webkitIDBTransaction;function getDefaultTransaction(mode){var result=null;switch(mode){case 0:case 1:case"readwrite":case"readonly":result=mode;break;default:result=IDBTransaction.READ_WRITE||"readwrite"}return result}String.prototype.replaceAll=function(search,replacement){var target=this;return target.split(search).join(replacement)};function validateQueryAndGenerateExpression(sqlTypeQuery){if(!sqlTypeQuery&&sqlTypeQuery.length<=0){return null}if(sqlTypeQuery.search(new RegExp(" like ","i"))<=0){sqlTypeQuery=sqlTypeQuery.replaceAll(" || "," || resolveData[i].").replaceAll(" && "," && resolveData[i].");sqlTypeQuery=sqlTypeQuery.replaceAll(" or "," || resolveData[i].").replaceAll(" and "," && resolveData[i].");sqlTypeQuery="resolveData[i]."+sqlTypeQuery}else{var splitArray=[" or "," and "];var splitArray_JoinWith=[" || "," && "];var likeData=null;var splitData=null;var singleExpression=false;for(var j=splitArray.length-1;j>=0;j--){splitData=sqlTypeQuery.split(splitArray[j]);if(splitData.length>1||singleExpression){for(var i=0;i<splitData.length;i++){if(splitData[i].search(new RegExp(" like ","i"))>0){likeData=splitData[i].split(" like ")[1];likeData=likeData.substring(1,likeData.length-1);likeData=likeData.replaceAll("\\","\\\\").replaceAll("/","\\/").replaceAll("*","\\*").replaceAll(".","\\.").replaceAll("%",".*").replaceAll("(","\\(").replaceAll(")","\\)").replaceAll("[","\\[").replaceAll("$","\\$").replaceAll("^","\\^").replaceAll("+","\\+").replaceAll("|","\\|").replaceAll("?","\\?");likeData="/^"+likeData+"$/i";splitData[i]="resolveData[i]."+splitData[i].split(" like ")[0]+".match("+likeData+")"}else{splitData[i]="resolveData[i]."+splitData[i]}}}else{singleExpression=true}sqlTypeQuery=splitData.join(splitArray_JoinWith[j])}}return sqlTypeQuery}function closeConnection(db){db.onversionchange=null;db.close()}$.extend({"indexedDB":function(dbName,config){if(config){if(typeof config==="number")config={"version":config};var version=config.version;if(config.schema&&!version){var max=-1;for(var key in config.schema){max=max>key?max:key}version=config.version||max}}var wrap={"request":function(req,args){return $.Deferred(function(dfd){try{var idbRequest=typeof req==="function"?req(args):req;idbRequest.onsuccess=function(e){dfd.resolveWith(idbRequest,[idbRequest.result,e])};idbRequest.onerror=function(e){dfd.rejectWith(idbRequest,[idbRequest.error,e])};if(typeof idbRequest.onblocked!=="undefined"&&idbRequest.onblocked===null){idbRequest.onblocked=function(e){var res;try{res=idbRequest.result}catch(e){res=null}if("done"==idbRequest.readyState){dfd.notifyWith(idbRequest,[res,e])}}}if(typeof idbRequest.onupgradeneeded!=="undefined"&&idbRequest.onupgradeneeded===null){idbRequest.onupgradeneeded=function(e){dfd.notifyWith(idbRequest,[idbRequest.result,e])}}}catch(e){e.name="exception";dfd.rejectWith(idbRequest,["exception",e])}})},"transaction":function(idbTransaction){return{"objectStore":function(storeName){try{return wrap.objectStore(idbTransaction.objectStore(storeName))}catch(e){idbTransaction.readyState!==idbTransaction.DONE&&idbTransaction.abort();return wrap.objectStore(null)}},"createObjectStore":function(storeName,storeParams){try{return wrap.objectStore(idbTransaction.db.createObjectStore(storeName,storeParams))}catch(e){idbTransaction.readyState!==idbTransaction.DONE&&idbTransaction.abort()}},"deleteObjectStore":function(storeName){try{idbTransaction.db.deleteObjectStore(storeName)}catch(e){idbTransaction.readyState!==idbTransaction.DONE&&idbTransaction.abort()}},"abort":function(){idbTransaction.abort()},"checkExist":function(storeName){try{return idbTransaction.db.objectStoreNames.contains(storeName)}catch(e){idbTransaction.readyState!==idbTransaction.DONE&&idbTransaction.abort()}}}},"objectStore":function(idbObjectStore){var result={};var crudOps=["add","put","get","delete","clear","count"];for(var i=0;i<crudOps.length;i++){result[crudOps[i]]=function(op){return function(){return wrap.request(function(args){return idbObjectStore[op].apply(idbObjectStore,args)},arguments)}}(crudOps[i])}result.each=function(callback,range,direction){return wrap.cursor(function(){if(direction){return idbObjectStore.openCursor(wrap.range(range),direction)}else{return idbObjectStore.openCursor(wrap.range(range))}},callback)};result.index=function(name){return wrap.index(function(){return idbObjectStore.index(name)})};result.createIndex=function(prop,options,indexName){if(arguments.length===2&&typeof options==="string"){indexName=arguments[1];options=null}if(!indexName){indexName=prop}return wrap.index(function(){return idbObjectStore.createIndex(indexName,prop,options)})};result.deleteIndex=function(indexName){return idbObjectStore.deleteIndex(indexName)};return result},"range":function(r){if(Array.isArray(r)){if(r.length===1){return IDBKeyRange.only(r[0])}else{return IDBKeyRange.bound(r[0],r[1],typeof r[2]==='undefined'?false:r[2],typeof r[3]==='undefined'?false:r[3])}}else if(typeof r==="undefined"){return null}else{return r}},"cursor":function(idbCursor,callback){return $.Deferred(function(dfd){try{var cursorReq=typeof idbCursor==="function"?idbCursor():idbCursor;cursorReq.onsuccess=function(e){if(!cursorReq.result){dfd.resolveWith(cursorReq,[null,e]);return}var elem={"delete":function(){return wrap.request(function(){return cursorReq.result["delete"]()})},"update":function(data){return wrap.request(function(){return cursorReq.result["update"](data)})},"next":function(key){this.data=key},"key":cursorReq.result.key,"value":cursorReq.result.value};dfd.notifyWith(cursorReq,[elem,e]);var result=callback.apply(cursorReq,[elem]);try{if(result===false){dfd.resolveWith(cursorReq,[null,e])}else if(typeof result==="number"){cursorReq.result["advance"].apply(cursorReq.result,[result])}else{if(elem.data)cursorReq.result["continue"].apply(cursorReq.result,[elem.data]);else cursorReq.result["continue"]()}}catch(e){dfd.rejectWith(cursorReq,[cursorReq.result,e])}};cursorReq.onerror=function(e){dfd.rejectWith(cursorReq,[cursorReq.result,e])}}catch(e){e.type="exception";dfd.rejectWith(cursorReq,[null,e])}})},"index":function(index){try{var idbIndex=typeof index==="function"?index():index}catch(e){idbIndex=null}return{"each":function(callback,range,direction){return wrap.cursor(function(){if(direction){return idbIndex.openCursor(wrap.range(range),direction)}else{return idbIndex.openCursor(wrap.range(range))}},callback)},"eachKey":function(callback,range,direction){return wrap.cursor(function(){if(direction){return idbIndex.openKeyCursor(wrap.range(range),direction)}else{return idbIndex.openKeyCursor(wrap.range(range))}},callback)},"get":function(key){if(typeof idbIndex.get==="function"){return wrap.request(idbIndex.get(key))}else{return idbIndex.openCursor(wrap.range(key))}},"count":function(){if(typeof idbIndex.count==="function"){return wrap.request(idbIndex.count())}else{throw"Count not implemented for cursors"}},"getKey":function(key){if(typeof idbIndex.getKey==="function"){return wrap.request(idbIndex.getKey(key))}else{return idbIndex.openKeyCursor(wrap.range(key))}}}}};var dbPromise=wrap.request(function(){return version?indexedDB.open(dbName,parseInt(version)):indexedDB.open(dbName)});dbPromise.done(function(db,e){db.onversionchange=function(){if(!(config&&config.onversionchange&&config.onversionchange()!==false)){closeConnection(db)}}}).fail(function(error,e){}).progress(function(db,e){if(e&&e.type==="upgradeneeded"){if(config&&config.schema){for(var i=e.oldVersion+1;i<=e.newVersion;i++){typeof config.schema[i]==="function"&&config.schema[i].call(this,wrap.transaction(this.transaction))}}if(config&&typeof config.upgrade==="function"){config.upgrade.call(this,wrap.transaction(this.transaction))}}});function closeDBConnection(){dbPromise.done(function(db,e){closeConnection(db)})}return $.extend(dbPromise,{"cmp":function(key1,key2){return indexedDB.cmp(key1,key2)},"deleteDatabase":function(){return $.Deferred(function(dfd){dbPromise.done(function(db,e){closeConnection(db);wrap.request(function(){return indexedDB.deleteDatabase(dbName)}).done(function(result,e){dfd.resolveWith(this,[result,e])}).fail(function(error,e){dfd.rejectWith(this,[error,e])}).progress(function(db,e){dfd.notifyWith(this,[db,e])})}).fail(function(error,e){dfd.rejectWith(this,[error,e])}).progress(function(db,e){dfd.notifyWith(this,[db,e])})})},"transaction":function(storeNames,mode){!Array.isArray(storeNames)&&(storeNames=[storeNames]);mode=getDefaultTransaction(mode);return $.Deferred(function(dfd){dbPromise.done(function(db,e){var idbTransaction;try{idbTransaction=db.transaction(storeNames,mode);idbTransaction.onabort=idbTransaction.onerror=function(e){dfd.rejectWith(idbTransaction,[e])};idbTransaction.oncomplete=function(e){dfd.resolveWith(idbTransaction,[e])}}catch(e){e.type="exception";dfd.rejectWith(this,[e]);return}try{dfd.notifyWith(idbTransaction,[wrap.transaction(idbTransaction)])}catch(e){e.type="exception";dfd.rejectWith(this,[e])}}).fail(function(err,e){dfd.rejectWith(this,[e,err])}).progress(function(res,e){})})},"objectStore":function(storeName,mode){var me=this,result={};function op(callback){return $.Deferred(function(dfd){function onTransactionProgress(trans,callback){try{callback(trans.objectStore(storeName)).done(function(result,e){dfd.resolveWith(this,[result,e])}).fail(function(err,e){dfd.rejectWith(this,[err,e])})}catch(e){e.name="exception";dfd.rejectWith(trans,[e,e])}}me.transaction(storeName,getDefaultTransaction(mode)).done(function(){}).fail(function(err,e){if(err.code===err.NOT_FOUND_ERR&&(mode===true||typeof mode==="object")){var db=this.result;closeConnection(db);dbPromise=wrap.request(function(){return indexedDB.open(dbName,(parseInt(db.version,10)||1)+1)});dbPromise.done(function(db,e){db.onversionchange=function(){if(!(config&&config.onversionchange&&config.onversionchange()!==false)){closeConnection(db)}};me.transaction(storeName,getDefaultTransaction(mode)).done(function(){}).fail(function(err,e){dfd.rejectWith(this,[err,e])}).progress(function(trans,e){onTransactionProgress(trans,callback)})}).fail(function(err,e){dfd.rejectWith(this,[err,e])}).progress(function(db,e){if(e.type==="upgradeneeded"){try{db.createObjectStore(storeName,mode===true?{"autoIncrement":true}:mode)}catch(ex){dfd.rejectWith(this,[ex,e])}}})}else{dfd.rejectWith(this,[err,e])}}).progress(function(trans){onTransactionProgress(trans,callback)})})}function crudOp(opName,args){return op(function(wrappedObjectStore){return $.Deferred(function(dfd){wrappedObjectStore[opName].apply(wrappedObjectStore,args).done(function(d,e){closeDBConnection();dfd.resolveWith(this,[d,e])}).fail(function(err){dfd.reject(err)})})})}function indexOp(opName,indexName,args){return op(function(wrappedObjectStore){var index=wrappedObjectStore.index(indexName);return $.Deferred(function(dfd){index[opName].apply(index[opName],args).done(function(d,e){closeDBConnection();dfd.resolveWith(this,[d,e])}).fail(function(err){dfd.reject(err)})})})}var crud=["add","delete","get","put","clear","count","each"];for(var i=0;i<crud.length;i++){result[crud[i]]=function(op){return function(){return crudOp(op,arguments)}}(crud[i])}result.index=function(indexName){return{"each":function(callback,range,direction){return indexOp("each",indexName,[callback,range,direction])},"eachKey":function(callback,range,direction){return indexOp("eachKey",indexName,[callback,range,direction])},"get":function(key){return indexOp("get",indexName,[key])},"count":function(){return indexOp("count",indexName,[])},"getKey":function(key){return indexOp("getKey",indexName,[key])}}};return result},"isExist":function(storeNames,mode){!Array.isArray(storeNames)&&(storeNames=[storeNames]);mode=getDefaultTransaction(mode);return $.Deferred(function(dfd){dbPromise.done(function(db,e){var idbTransaction;try{if(db.objectStoreNames.contains(storeNames)){dfd.resolve(true)}else{dfd.resolve(false)}closeConnection(db)}catch(e){e.type="exception";dfd.rejectWith(this,[e]);return}try{dfd.notifyWith(idbTransaction,[wrap.transaction(idbTransaction)])}catch(e){e.type="exception";dfd.rejectWith(this,[e])}}).fail(function(err,e){dfd.rejectWith(this,[e,err])}).progress(function(res,e){})})},"getAllRecords":function(storeNames,mode){!Array.isArray(storeNames)&&(storeNames=[storeNames]);mode=getDefaultTransaction(mode);return $.Deferred(function(dfd){dbPromise.done(function(db,e){var idbTransaction;var resolveData=null;try{idbTransaction=db.transaction(storeNames,mode);idbTransaction.objectStore(storeNames).getAll().onsuccess=function(e){resolveData=e.target.result;dfd.resolve(resolveData)};idbTransaction.onabort=idbTransaction.onerror=function(e){dfd.rejectWith(idbTransaction,[e])};idbTransaction.oncomplete=function(e){dfd.resolve(resolveData)}}catch(e){e.type="exception";dfd.rejectWith(this,[e]);return}try{dfd.notifyWith(idbTransaction,[wrap.transaction(idbTransaction)])}catch(e){e.type="exception";dfd.rejectWith(this,[e])}}).fail(function(err,e){dfd.rejectWith(this,[e,err])}).progress(function(res,e){})})},"getLimitRecords":function(storeNames,pageNo,noOfResult,mode){!Array.isArray(storeNames)&&(storeNames=[storeNames]);mode=getDefaultTransaction(mode);return $.Deferred(function(dfd){dbPromise.done(function(db,e){var idbTransaction;var resolveData=null;try{idbTransaction=db.transaction(storeNames,mode);idbTransaction.objectStore(storeNames).getAll().onsuccess=function(e){resolveData=e.target.result;if(resolveData){var lowerRange=(pageNo-1)*noOfResult;var upperRange=lowerRange+noOfResult;var totalLimit=Math.ceil(resolveData.length/noOfResult);if(pageNo<=0||pageNo>totalLimit){dfd.reject("Array IndexOutOfBound")}else{resolveData=resolveData.slice(lowerRange,upperRange);dfd.resolve(resolveData)}closeConnection(db)}};idbTransaction.onabort=idbTransaction.onerror=function(e){dfd.rejectWith(idbTransaction,[e])};idbTransaction.oncomplete=function(e){dfd.resolve(resolveData);closeConnection(db)}}catch(e){e.type="exception";dfd.rejectWith(this,[e]);return}try{dfd.notifyWith(idbTransaction,[wrap.transaction(idbTransaction)])}catch(e){e.type="exception";dfd.rejectWith(this,[e])}}).fail(function(err,e){dfd.rejectWith(this,[e,err])}).progress(function(res,e){})})},"filterRecords":function(storeNames,query,pageNo,noOfResult,mode){!Array.isArray(storeNames)&&(storeNames=[storeNames]);mode=getDefaultTransaction(mode);return $.Deferred(function(dfd){dbPromise.done(function(db,e){var idbTransaction;var resolveData=null;try{idbTransaction=db.transaction(storeNames,mode);idbTransaction.objectStore(storeNames).getAll().onsuccess=function(e){resolveData=e.target.result;try{query=validateQueryAndGenerateExpression(query)}catch(e){dfd.reject("Query Syntax error");return}var responseArray=[];if(resolveData&&resolveData.length>0){if(query){if(pageNo&&noOfResult){var lowerRange=(pageNo-1)*noOfResult;var upperRange=lowerRange+noOfResult;var totalLimit=Math.ceil(resolveData.length/noOfResult);var counter=0;if(pageNo<=0||pageNo>totalLimit){dfd.reject("Array IndexOutOfBound")}else{for(var i=0;i<resolveData.length;i++){if(eval(query)){if(counter>=lowerRange&&counter<upperRange){responseArray.push(resolveData[i])}counter++;if(counter==upperRange){break}}}}}else{for(var i=0;i<resolveData.length;i++){if(eval(query)){responseArray.push(resolveData[i])}}}}else if(pageNo&&noOfResult){var lowerRange=(pageNo-1)*noOfResult;var upperRange=lowerRange+noOfResult;var totalLimit=Math.ceil(resolveData.length/noOfResult);responseArray=resolveData.slice(lowerRange,upperRange)}else{responseArray=resolveData}resolveData=responseArray;dfd.resolve(responseArray)}else{dfd.resolve(responseArray)}};idbTransaction.onabort=idbTransaction.onerror=function(e){dfd.rejectWith(idbTransaction,[e])};idbTransaction.oncomplete=function(e){dfd.resolve(resolveData)}}catch(e){e.type="exception";dfd.rejectWith(this,[e]);return}try{dfd.notifyWith(idbTransaction,[wrap.transaction(idbTransaction)])}catch(e){e.type="exception";dfd.rejectWith(this,[e])}}).fail(function(err,e){dfd.rejectWith(this,[e,err])}).progress(function(res,e){})})},"getVersion":function(){return $.Deferred(function(dfd){dbPromise.done(function(db,e){var idbTransaction;try{if(db.version){dfd.resolve(db.version)}else{dfd.resolve(1)}}catch(e){e.type="exception";dfd.rejectWith(this,[e]);return}try{dfd.notifyWith(idbTransaction,[wrap.transaction(idbTransaction)])}catch(e){e.type="exception";dfd.rejectWith(this,[e])}}).fail(function(err,e){dfd.rejectWith(this,[e,err])}).progress(function(res,e){})})},"filterExistingRecords":function(resolveData,query,pageNo,noOfResult,mode){var responseArray=[];try{if(!resolveData||resolveData.length<=0){return responseArray}query=validateQueryAndGenerateExpression(query)}catch(e){return responseArray;console.log("Query Syntax error")}if(query){var validPageRange=pageNo&&noOfResult;if(validPageRange){var lowerRange=(pageNo-1)*noOfResult;var upperRange=lowerRange+noOfResult;var totalLimit=Math.ceil(resolveData.length/noOfResult);var counter=0;if(pageNo<=0||pageNo>totalLimit){console.log("Invalid page range")}else{for(var i=0;i<resolveData.length;i++){if(eval(query)){if(counter>=lowerRange&&counter<upperRange){responseArray.push(resolveData[i])}counter++;if(counter==upperRange){break}}}}}else{for(var i=0;i<resolveData.length;i++){if(eval(query)){responseArray.push(resolveData[i])}}}}else if(validPageRange){var lowerRange=(pageNo-1)*noOfResult;var upperRange=lowerRange+noOfResult;var totalLimit=Math.ceil(resolveData.length/noOfResult);responseArray=resolveData.slice(lowerRange,upperRange)}else{responseArray=resolveData}return responseArray}})}});$.indexedDB.IDBCursor=IDBCursor;$.indexedDB.IDBTransaction=IDBTransaction;$.idb=$.indexedDB})(jQuery);