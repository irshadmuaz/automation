(function(){var imported=document.createElement('script');imported.src='/mobiledoc/jsp/webemr/js/jsFunctions.js';var head=document.head||document.getElementsByTagName("head")[0];head.appendChild(imported)})();var empiFunsFileLoadedWebEmr=true;var strUnamePwd=null;var strMasterURL=null;var bEhxSSOEnabled=null;var nPrimaryServiceLocationId=null;var nLoggedInUid=null;var thisPracticeCode=null;var bIsConsentToViewEnabled=null;var bIsConsentToDiscloseEnabled=null;var mapEmrItemKeys={};var mapEhxItemKeys={};var bSkipConsentAndAutoOptin=false;var bCheckPatientMatching=false;var strEcwMPI='';var alertIcon="<i class='icon icon-altmsg mr10'></i>";const EHX_RCP_MedStatus={TAKING:"T",NOT_TAKING:"N",UNKNOWN:"U"};function getPtEmpiIconColor(pid){var iconColor='';$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/getEmpiIconColor.jsp",data:{pid:pid},"async":false,cache:false,success:function(response){iconColor=ehxDataTrimString(response);return false},error:function(xhr,ajaxOptions,thrownError){return false}});return iconColor}function getPtEcwMPI(pid){var ecwmpid='';$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/getPtEcwMPIFromPid.jsp",data:{patientId:pid},"async":false,cache:false,success:function(response){ecwmpid=ehxDataTrimString(response);return false},error:function(xhr,ajaxOptions,thrownError){return false}});return ecwmpid}function isPatientConsentReceived(pid){var bPatientConsentReceived=false;$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/isPatientConsentReceived.jsp",data:{PatientId:pid},"async":false,cache:false,success:function(response){bPatientConsentReceived=ehxDataTrimString(response);if(bPatientConsentReceived==true||bPatientConsentReceived=="true"){bPatientConsentReceived=true}else{bPatientConsentReceived=false}return false},error:function(xhr,ajaxOptions,thrownError){return false}});return bPatientConsentReceived}function hasPermission(permissionKey){var permission=false;$.ajax({type:"POST",url:"/mobiledoc/jsp/catalog/xml/security/getPermission.jsp","async":false,cache:false,data:{permission:permissionKey},success:function(response){permission=ehxDataTrimString(response);if(permission==true||permission=="true"){permission=true}else{permission=false}return false}});return permission}function getSSOToken(bUserAccReq){var strSSOTOken="";if(null==bUserAccReq||bUserAccReq==undefined){bUserAccReq='false'}$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/practice/getEhxSSOToken.jsp",data:{userAcc:bUserAccReq},"async":false,cache:false,success:function(response){strSSOTOken=ehxDataTrimString(response);return false}});return strSSOTOken}function getMasterURL(defaultFacId){if(strMasterURL==null){$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/getMasterProtocolHost.jsp",data:{defaultFacId:defaultFacId},"async":false,cache:false,success:function(response){strMasterURL=ehxDataTrimString(response);return false}})}return strMasterURL}function isSSOEnabled(){if(bEhxSSOEnabled==null){$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/practice/getEhxItemKeyValue.jsp",data:{itemkeyName:'EhxSSOEnabled'},"async":false,success:function(response){bEhxSSOEnabled=ehxDataTrimString(response);return false}})}return bEhxSSOEnabled}function getPrimaryServiceLocationId(){if(nPrimaryServiceLocationId==null){$.ajax({type:"POST",url:"/mobiledoc/jsp/catalog/xml/getProviderData.jsp","async":false,success:function(response){if(response){nPrimaryServiceLocationId=$(response).find("PrimaryServiceLocation").text()}return false}})}return nPrimaryServiceLocationId}function ehxCommonFuncsIsSuccessXmlResult(xml){var bResult=false;xml=$.parseXML(xml);if(xml){if($(xml).find("status").text().toLowerCase()=="success"){bResult=true}}return bResult}function ehxCommonFuncs_failedStatusMsgXmlResult(xml){var returnMsg="";xml=$.parseXML(xml);if(xml){if($(xml).find("status").text().toLowerCase()=="failed"){var errorMsg=$(xml).find("errormsg").text();if(errorMsg){returnMsg=errorMsg}}}return returnMsg}function getThisPracticeCode(){if(thisPracticeCode==null){$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/practice/getThisPracticeCode.jsp","async":false,cache:false,success:function(response){thisPracticeCode=ehxDataTrimString(response);return false}})}return thisPracticeCode}function getEhxItemKeyValue(itemKey){var itemValue=mapEhxItemKeys[itemKey];if(itemValue==null){$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/practice/getEhxItemKeyValue.jsp",data:{itemkeyName:itemKey},"async":false,cache:false,success:function(keyValue){keyValue=ehxDataTrimString(keyValue);var temp=keyValue;if(temp.toLowerCase()=="yes"){keyValue=true}else if(temp.toLowerCase()=="no"){keyValue=false}mapEhxItemKeys[itemKey]=keyValue;itemValue=keyValue;return false}})}return itemValue}function getEmrItemKeyValue(itemKey){var itemKeyOri=itemKey;itemKey=itemKey.toLowerCase();var itemValue=mapEmrItemKeys[itemKey];if(itemValue==null||itemValue===undefined){$.ajax({type:"POST",url:"/mobiledoc/jsp/catalog/xml/getItemKeyValue.jsp",data:{KeyName:itemKey},dataType:"xml","async":false,cache:false,success:function(keyValue){keyValue=$(keyValue).find("KeyValue").text();keyValue=ehxDataTrimString(keyValue);var temp=keyValue;if(temp.toLowerCase()=="yes"){keyValue=true}else if(temp.toLowerCase()=="no"){keyValue=false}mapEmrItemKeys[itemKey]=keyValue;itemValue=keyValue;return false}})}if(ehxDataTrimString(itemValue).toLowerCase()==='unknown'){var cacheVal=getItemKeyValue(itemKeyOri);var localCacheValue=ehxDataTrimString(cacheVal);if(localCacheValue&&localCacheValue.toLowerCase()==='yes'){itemValue=true}else if(localCacheValue&&localCacheValue.toLowerCase()==='no'){itemValue=false}else if(localCacheValue){itemValue=localCacheValue}}return itemValue}function isEMPIEnabled(context,patientId){$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/practice/getIsEMPIEnabled.jsp",data:{itemkeyName:'EhxSSOEnabled',context:context,patientId:patientId},"async":true,success:function(response){isEMPIEnabled=ehxDataTrimString(response);return false}});return isEMPIEnabled}function getBTGReasonFromLocal(pid,nDoctorId){var strReason='';$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/getBTGReasonFromLocal.jsp",data:{patientId:pid,nDoctorId:nDoctorId},"async":false,cache:false,success:function(response){strReason=ehxDataTrimString(response);return false},error:function(xhr,ajaxOptions,thrownError){return false}});return strReason}function getHasPracticesForDisclose(strIconColor,strEcwMPI){var nHasPracticesForDisclose='';$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/getHasPracticesForDisclose.jsp",data:{strIconColor:strIconColor,strEcwMPI:strEcwMPI},"async":false,cache:false,success:function(response){nHasPracticesForDisclose=ehxDataTrimString(response);return false},error:function(xhr,ajaxOptions,thrownError){return false}});return nHasPracticesForDisclose}function ptHasNewDataOnEhx(patientId,userId){$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/practice/ptHasNewDataOnEhx.jsp",data:{patientId:patientId,userId:userId},"async":false,success:function(response){ptHasNewDataOnEhx=ehxDataTrimString(response);return false}});return ptHasNewDataOnEhx}function fetchEhxPtDataFrmServer(patientId,userId,caller){var responseData="";$.ajax({type:"POST",url:"/mobiledoc/jsp/webemr/empi/serviceEhxDataCalls.jsp",data:{action:"showehxptdataonpn",calledBy:caller,patientId:patientId,userId:userId},"async":false,success:function(response){responseData=ehxDataTrimString(response);return false}});return responseData}function fetchCachedEhxPtData(patientId,userId,key,caller){var ptEhxData="";var cachedPid="";var keyVal="";try{if(isSupportsLocalStorage()){if(!containsKey("ehxPtData")){var ptObject=makeEhxPtDataObj(patientId,userId,"cacheCallFrm"+caller);put("ehxPtData",ptObject);if(null!=key&&key=="all"){return JSON.parse(ptObject).ehxData}else{keyVal=JSON.parse(ptObject).ehxData[key];return keyVal}}else{var ptObject=JSON.parse(get("ehxPtData"));cachedPid=ptObject.uid;if(null!=cachedPid&&cachedPid===patientId){if(null!=key&&key=="all"){return ptObject.ehxData}else{keyVal=ptObject.ehxData[key];return keyVal}}else{var ptObject=makeEhxPtDataObj(patientId,userId,"cacheCallFrm"+caller);put("ehxPtData",ptObject);if(null!=key&&key=="all"){return JSON.parse(ptObject).ehxData}else{keyVal=JSON.parse(ptObject).ehxData[key];return keyVal}}}}else{ptEhxData=JSON.parse(fetchEhxPtDataFrmServer(patientId,userId,"serverCallFrm"+caller));return ptEhxData}}catch(err){console.log(err)}}function makeEhxPtDataObj(patientId,userId,caller){var ptObj="";try{var ptEhxData=JSON.parse(fetchEhxPtDataFrmServer(patientId,userId,caller));var ptObject=new Object;ptObject.uid=patientId;ptObject.ehxData=ptEhxData;ptObj=JSON.stringify(ptObject)}catch(err){console.log(err)}return ptObj}function getPromiseForPtEhxData(patientId,userId,key,caller){var ptEhxData="";var cachedPid="";var keyVal="";var deferred;try{deferred=$.Deferred();if(isSupportsLocalStorage()){if(!containsKey("ehxPtData")){var promisePtDataObj=promiseMakeEhxPtDataObj(patientId,userId,"cacheCallFrm"+caller);promisePtDataObj.then(function(result){var ptObject=result;put("ehxPtData",ptObject);if(null!=key&&key=="all"){deferred.resolve(JSON.parse(ptObject).ehxData)}else{keyVal=JSON.parse(ptObject).ehxData[key];deferred.resolve(keyVal)}},function(errorMsg){console.log("getPromiseForPtEhxData promise req while getting data from cache, rejected from "+caller)})}else{var ptObject=JSON.parse(get("ehxPtData"));cachedPid=ptObject.uid;if(null!=cachedPid&&cachedPid===patientId){if(null!=key&&key=="all"){deferred.resolve(ptObject.ehxData)}else{keyVal=ptObject.ehxData[key];deferred.resolve(keyVal)}}else{var promisePtDataObj=promiseMakeEhxPtDataObj(patientId,userId,"cacheCallFrm"+caller);promisePtDataObj.then(function(result){var ptObject=result;put("ehxPtData",ptObject);if(null!=key&&key=="all"){deferred.resolve(JSON.parse(ptObject).ehxData)}else{keyVal=JSON.parse(ptObject).ehxData[key];deferred.resolve(keyVal)}},function(errorMsg){console.log("getPromiseForPtEhxData promise req while getting data from server, rejected from "+caller)})}}}else{var promise=getPromiseForPtEhxDataFrmServer(patientId,userId,"serverCallFrm"+caller);promise.then(function(result){ptEhxData=JSON.parse(result)},function(errorMsg){console.log("getPromiseForPtEhxData promise req while getting data from server and local store is not available, rejected from "+caller)});return ptEhxData}}catch(err){console.log(err)}return deferred.promise()}function resetPromiseForPtEhxData(){if(isSupportsLocalStorage()){remove("ehxPtData")}}function promiseMakeEhxPtDataObj(patientId,userId,caller){var ptObj="";var deferred=$.Deferred();try{var ptEhxData="";var promise=getPromiseForPtEhxDataFrmServer(patientId,userId,caller);promise.then(function(result){ptEhxData=JSON.parse(result);var ptObject=new Object;ptObject.uid=patientId;ptObject.ehxData=ptEhxData;ptObj=JSON.stringify(ptObject);deferred.resolve(ptObj)},function(errorMsg){deferred.reject(response);console.log("promiseMakeEhxPtDataObj promise req while getting data from server, rejected from "+caller)})}catch(err){console.log(err)}return deferred.promise()}function getPromiseForPtEhxDataFrmServer(patientId,userId,caller){var deferred=$.Deferred();$.ajax({method:"POST",url:makeURL('/mobiledoc/jsp/webemr/empi/serviceEhxDataCalls.jsp'),data:{action:"showehxptdataonpn",calledBy:caller,patientId:patientId,userId:userId}}).success(function(response){if(response){deferred.resolve(response)}else{deferred.reject(response);console.log("getPromiseForPtEhxDataFrmServer promise req while getting data from server, rejected from "+caller)}});return deferred.promise()}function showEhxTab(patientId,context){var deferred=$.Deferred();$.ajax({method:"POST",url:makeURL('/mobiledoc/jsp/empi/practice/getShowEhxTab.jsp'),data:{itemkeyName:'EhxSSOEnabled',context:context,patientId:patientId}}).success(function(response){if(response&&ehxDataTrimString(response)==='true'){deferred.resolve(true)}else{deferred.resolve(false)}});return deferred.promise()}function ehxCommonFuncsRefreshProgressNote(encounterId,patientId,tabAction,moduleId,loaderId,contentDivId){$('#'+moduleId).modal('hide');$('#'+loaderId).attr('style','display:none !important');if($('#ehxErrorDiv').attr('class')&&$('#ehxErrorDiv').attr('class').indexOf('hide')>-1){$('#'+contentDivId).attr('style','display:block !important')}var pnScope=angular.element(document.getElementById('pnController')).scope();try{var dataUrl=makeURL('/mobiledoc/jsp/catalog/xml/getSummaryView.jsp?encounterId='+encounterId+'&style=Bulleted&ViewType=OrdersTab&redirect=1&projectE=true&showpnheader='+getUserProfile("showpnheader")+'&L=1');$.ajax({"async":true,url:dataUrl,type:"POST",success:function(response){pnScope.pn_content=response;if(moduleId=='clickThroughModal'){pnScope.$apply()}else if(pnScope.$$phase!='$apply'&&pnScope.$$phase!='$digest'){pnScope.$apply()}},error:function(request,textStatus,errorThrown){BootstrapDialog.alert("Error occurred while getting progress notes data.\n"+textStatus+" : "+request.responseText,"eClinicalWorks")}})}catch(e){BootstrapDialog.alert("Error occurred while refreshing dashboard"+"\n"+e,"eClinicalWorks")}}function openPtLv(patientId,TrUserId,encounterId,context,divId){var myDocumentURL="/mobiledoc/jsp/webemr/empi/viewPtEhxData.jsp?patientId="+patientId+"&uid="+TrUserId+"&encId="+encounterId+"&context="+context+"&mainDivId="+divId;var url=makeURL(myDocumentURL);return url}function ehxCommonFuncsgenerateLockXML(pId,trUserId){var xw=new XMLWriter;startSoapPacket(xw);xw.writeStartElement('PatientData');addElement(xw,'pid',pId,'xsi:type','xsd:string');addElement(xw,'facIdForMultiMasters',trUserId,'xsi:type','xsd:string');xw.writeEndElement();endSoapPacket(xw);return xw.flush()}function ehxCommonFuncsGetPromiseForAjax(url,postData){var deferred=$.Deferred();try{$.ajax({method:"POST",url:makeURL(url),data:postData}).success(function(response){if(response){deferred.resolve(response)}else{deferred.reject(response);console.log("ehxCommonFuncsGetPromiseForAjax () promise req while getting data from server, rejected for "+url)}})}catch(err){deferred.reject(response);console.log("ehxCommonFuncsGetPromiseForAjax () promise req while getting data from server, rejected for "+url);console.log(err)}return deferred.promise()}function ehxCommonFuncsExportCCRToEhx(pid){var dataExport='';var result='';var url='/mobiledoc/jsp/empi/ExCCRFromPractice.jsp';dataExport={FormData:ehxCommonFuncsgenerateLockXML(pid,0)};try{var promise=ehxCommonFuncsGetPromiseForAjax(url,dataExport);promise.then(function(response){var x2js=new X2JS;var jsonData=x2js.xml_str2json(ehxDataTrimString(response));result=returnDataArray(jsonData.Envelope.Body["return"].message);showMessage(result)},function(errorMsg){showMessage("Error connecting EHX server, Please try again later.")})}catch(err){console.log(err)}}function voidEHSUponUnLockPN(pid,trUserId,encId,calledFrom){var VoidData='';var exportUnlockData='';var result='';var voidUrl='/mobiledoc/jsp/empi/voidCCRFromPCP.jsp';var exportLogUrl='/mobiledoc/jsp/empi/setExportLogUnlockFlag.jsp';try{var promiseEhxData=getPromiseForPtEhxData(pid,trUserId,'ptEcwMPI',calledFrom);promiseEhxData.then(function(result){if(result.length>0){var strPracticeCode=getItemKeyValue("AutoUpgradeKey",strPracticeCode);VoidData={encId:encId,pid:pid,voidPracticeCode:strPracticeCode,ecwmpi:result};ehxCommonFuncsGetPromiseForAjax(voidUrl,VoidData);exportUnlockData={encId:encId,pid:pid,unlocked:1,facIdForMultiMaster:ehxCommonFuncsGetDefaultUserFacility()};ehxCommonFuncsGetPromiseForAjax(exportLogUrl,exportUnlockData)}})}catch(err){console.log(err)}}function ehxCommonFuncsGetDefaultUserFacility(trUserId){var nFacilityId=0;var provider=getRenderProviderInfo(trUserId);if(provider){nFacilityId=provider.PrimaryServiceLocation}if(nFacilityId<=0){var strValue=getUserProfile("FacilityId");if(strValue){nFacilityId=strValue}}if(nFacilityId<=0){var strValue=uiDefaults.Facility;if(strValue){nFacilityId=strValue}}if(nFacilityId<=0){var strValue=getPrimaryFacilityId();if(strValue){nFacilityId=strValue}}return nFacilityId}function exportLabsToEhx(pid){var dataExport='';dataExport={ptid:pid,facIdForMultiMasters:0};var url='/mobiledoc/jsp/empi/ExLabsFromPractice.jsp';try{var promise=ehxCommonFuncsGetPromiseForAjax(url,dataExport);promise.then(function(response){var x2js=new X2JS;var jsonData=x2js.xml_str2json(ehxDataTrimString(response));result=returnDataArray(jsonData.Envelope.Body["return"].message);showMessage(result)},function(errorMsg){showMessage("Error connecting EHX server, Please try again later.")})}catch(err){console.log(err)}}function exportDocsToEhx(pid,userId){var dataExport='';dataExport={ptid:pid,TrUserId:userId};var url='/mobiledoc/jsp/empi/ExDocsFromPractice.jsp';try{var promise=ehxCommonFuncsGetPromiseForAjax(url,dataExport);promise.then(function(response){var x2js=new X2JS;var jsonData=x2js.xml_str2json(ehxDataTrimString(response));result=returnDataArray(jsonData.Envelope.Body["return"].message);showMessage(result)},function(errorMsg){showMessage("Error connecting EHX server, Please try again later.")})}catch(err){console.log(err)}}var showEHXConfirm=function(message,callback,title,btnOKLbl){if(angular.isUndefined(title)||ehxDataTrimString(title).length===0){title="eClinicalWorks"}if(angular.isUndefined(btnOKLbl)||ehxDataTrimString(btnOKLbl).length===0){btnOKLbl="OK"}var dialogCnfrm=new BootstrapDialog({title:title,message:message,closable:false,data:{'callback':callback},buttons:[{label:btnOKLbl,cssClass:'btn-lgrey btn-xs',action:function(dialog){typeof dialog.getData('callback')==='function'&&dialog.getData('callback')(true);dialog.close()}}]});dialogCnfrm.open()};function savePatientConsentToLocal(pid){var url="/mobiledoc/jsp/empi/consent/SavePatientConsentToLocal.jsp";var data={pid:pid};try{setTimeout(function(){var promise=ehxCommonFuncsGetPromiseForAjax(url,data);promise.then(function(response){},function(errorMsg){console.log(errorMsg)})},1e3)}catch(err){console.log(err)}}function saveLinkedPt(strXmlDoc,linktype,strContext){var deferred=$.Deferred();$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/saveLinkedPt.jsp",data:{TrUserId:global.TrUserId,FormData:strXmlDoc,linktype:linktype,context:strContext},cache:false,success:function(respSaveLinkedPt){respSaveLinkedPt=ehxDataTrimString(respSaveLinkedPt);if(ehxCommonFuncsIsSuccessXmlResult(respSaveLinkedPt)===true){deferred.resolve("Patient Linked successfully.")}else{let errorMsg=ehxCommonFuncs_failedStatusMsgXmlResult(respSaveLinkedPt);if(errorMsg){deferred.reject(errorMsg)}else{deferred.reject("An error occurred while saving patient consent status.")}}},error:function(xhr,ajaxOptions,thrownError){deferred.reject("An error occurred while saving patient consent status.")}});return deferred.promise()}function linkPtDemoDataWebE(pid,ecwmpiEhx){var deferred=$.Deferred();var facId="0";if(getItemKeyValue("EnterpriseDirectory")==true){facId=getPrimaryServiceLocationId()}var strXmlDoc="";strXmlDoc=ehxCommonFuncs_CreateXml();strXmlDoc+=ehxCommonFuncs_CreateXmlBody();strXmlDoc+="<m:NOOP xmlns:m='NOOP'>";strXmlDoc+=ehxCommonFuncsCreateXmlNode('patient','string','',true);strXmlDoc+=ehxCommonFuncsCreateXmlNode('pid','string',pid,false);strXmlDoc+=ehxCommonFuncsCreateXmlNode('EcwMPI','string',ecwmpiEhx,false);strXmlDoc+=ehxCommonFuncs_CreateXmlClosingNode('patient');strXmlDoc+="</m:NOOP>";strXmlDoc+=ehxCommonFuncsCreateXmlCloseBody();strXmlDoc+=ehxCommonFuncs_CreateCloseXml();$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/setPtEcwMpiId.jsp",data:{TrUserId:global.TrUserId,facId:facId,FormData:strXmlDoc,pid:pid},cache:false,success:function(respPtEcwId){respPtEcwId=ehxDataTrimString(respPtEcwId);if(ehxCommonFuncsIsSuccessXmlResult(respPtEcwId)==false){deferred.reject("An error occurred while saving patient consent status.")}else{$.ajax({type:"POST",url:"/mobiledoc/jsp/catalog/xml/getPatientInfo.jsp",data:{TrUserId:global.TrUserId,ecwappprocessid:0,patientId:pid,sessionDID:0},cache:false,success:function(respGetPatientInfo){respGetPatientInfo=ehxDataTrimString(respGetPatientInfo);if(respGetPatientInfo!=null){var finalUrl="/mobiledoc/jsp/empi/xml/getPatientConsentStatus.jsp?TrUserId="+global.TrUserId+"&sessionDID= 0&loginUserId="+global.TrUserId+"&ecwmpi="+ecwmpiEhx;var subData={masterUrl:finalUrl};var subUrl="/mobiledoc/jsp/empi/master/executeUrlToMaster.jsp";var promisePatientConsent=ehxCommonFuncsGetPromiseForAjax(subUrl,subData);promisePatientConsent.then(function(respPatientConsent){respPatientConsent=ehxDataTrimString(respPatientConsent);var x2js=new X2JS;var jsonobj=x2js.xml_str2json(respPatientConsent);var userJSON=jsonobj.Envelope.Body['return'].User;var strXmlSaveEmpiOptInData="";strXmlSaveEmpiOptInData=ehxCommonFuncs_CreateXml();strXmlSaveEmpiOptInData+=ehxCommonFuncs_CreateXmlBody();strXmlSaveEmpiOptInData+="<m:NOOP xmlns:m='NOOP'>";strXmlSaveEmpiOptInData+="<PtOptInData xsi:type='xsd:string'>";strXmlSaveEmpiOptInData+=ehxCommonFuncsCreateXmlNode('PtId','string',pid,false);strXmlSaveEmpiOptInData+=ehxCommonFuncsCreateXmlNode('EnableEmpi','string',userJSON.EnableEmpi,false);strXmlSaveEmpiOptInData+=ehxCommonFuncsCreateXmlNode('EcwMPI','string',userJSON.ecwmpi,false);strXmlSaveEmpiOptInData+=ehxCommonFuncsCreateXmlNode('ReceivedConsent','string',userJSON.ReceivedConsent,false);strXmlSaveEmpiOptInData+=ehxCommonFuncsCreateXmlNode('DateSigned','string',userJSON.DateSigned,false);strXmlSaveEmpiOptInData+=ehxCommonFuncsCreateXmlNode('eCROptInOption','string',userJSON.eCROptInOption,false);strXmlSaveEmpiOptInData+=ehxCommonFuncsCreateXmlNode('OptinPracticeCode','string',userJSON.OptinPracticeCode,false);strXmlSaveEmpiOptInData+=ehxCommonFuncsCreateXmlNode('OptinFacilityName','string',escapeXml(userJSON.OptinFacilityName),false);strXmlSaveEmpiOptInData+=ehxCommonFuncsCreateXmlNode('OptinFacilityId','string',userJSON.OptinFacilityId,false);strXmlSaveEmpiOptInData+="</PtOptInData>";strXmlSaveEmpiOptInData+="</m:NOOP>";strXmlSaveEmpiOptInData+=ehxCommonFuncsCreateXmlCloseBody();strXmlSaveEmpiOptInData+=ehxCommonFuncs_CreateCloseXml();$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/SaveEmpiOptInData.jsp",data:{TrUserId:global.TrUserId,ecwappprocessid:0,FormData:strXmlSaveEmpiOptInData,sessionDID:0,isEscapeXmlData:true},cache:false,success:function(respSaveEmpiOptInData){respSaveEmpiOptInData=ehxDataTrimString(respSaveEmpiOptInData);if(ehxCommonFuncsIsSuccessXmlResult(respSaveEmpiOptInData)==true){$.ajax({url:"/mobiledoc/jsp/empi/updateEmpiptdataLog.jsp",data:{TrUserId:global.TrUserId,ecwappprocessid:0,ecwmpi:ecwmpiEhx,sessionDID:0},cache:false,success:function(respUpdateEmpiptdataLog){$.ajax({url:"/mobiledoc/jsp/empi/consent/updateLinkedPractices.jsp",data:{TrUserId:global.TrUserId,ecwappprocessid:0,ecwmpi:ecwmpiEhx,sessionDID:0,pid:pid,apptFacId:'0'},cache:false,success:function(respUpdateLinkedPractices){deferred.resolve("Patient Linked successfully.")},error:function(xhr,ajaxOptions,thrownError){deferred.reject("An error occurred while Updating Linked practices.")}})},error:function(xhr,ajaxOptions,thrownError){deferred.reject("An error occurred while Updating EmpiptdataLog.")}})}else{deferred.reject("An error occurred in saving Empi Opt-In Data.")}},error:function(xhr,ajaxOptions,thrownError){deferred.reject("An error occurred while getting patient Info.")}})},function(errorMsg){deferred.reject("Error connecting EHX server, while getting Patient Consent")})}},error:function(xhr,ajaxOptions,thrownError){deferred.reject("An error occurred while getting patient Info.")}})}},error:function(xhr,ajaxOptions,thrownError){deferred.reject("An error occurred while saving patient consent status.")}});return deferred.promise()}function getEhxServerNotAvailableMsg(){var msgHtml=' \x3c!-- Notification Starts --\x3e<div class="col-sm-12 nopadding ScribAltmsgs visible white-bg"><div class="ScribeAltmsg center-block fnt13"><i class="icon icon-Scribnote mr5"></i>EHX Server not available at this time, please try after some time </div><div class="spacer5"></div></div>\x3c!-- Notification Ends --\x3e';return msgHtml}showToastMessage=function(alertMessage,timeOut){document.getElementById("dataSavedAlt").innerHTML=alertIcon+alertMessage;$("#dataSavedAlt").show();setTimeout(function(){$('#dataSavedAlt').fadeOut('slow')},timeOut)};function ehxCommonFuncs_CreateXml(){return"<S:Envelope xmlns:S='http://schemas.xmlsoap.org/soap/envelope/' xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/' S:encodingStyle='http://schemas.xmlsoap.org/soap/encoding/' xmlns:xsd='http://www.w3.org/1999/XMLSchema' xmlns:xsi='http://www.w3.org/1999/XMLSchema-instance'>\n"}function ehxCommonFuncs_CreateCloseXml(){return"\n</S:Envelope>"}function ehxCommonFuncs_CreateXmlBody(){return"<S:Body>"}function ehxCommonFuncsCreateXmlCloseBody(){return"</S:Body>\n"}function ehxCommonFuncsCreateXmlNode(nodeName,nodeType,nodeValue,isOptional){if(isOptional)return"<"+nodeName+" xsi:type='xsd:"+nodeType+"'>\n";else return"<"+nodeName+" xsi:type='xsd:"+nodeType+"'>"+nodeValue+"</"+nodeName+">\n"}function ehxCommonFuncs_CreateXmlClosingNode(nodeName){return"\n</"+nodeName+">"}function getEhxLabContent(strJson,tblId){var strLabContent="";var strTblBody="";var strAttrContent="";$('#'+tblId).html('');for(var i in strJson){strLabContent='<tr><td><a href="#" class="add_blue collapsed" data-toggle="collapse" data-target="#divEhx_'+i+'"></a></td>';strAttrContent='<tr><td colspan="6" class="noborder"> <div class="add_pat collapse" id="divEhx_'+i+'">  <table class="table single_tab inner_table nomartop">';strAttrContent+='<tr><th width="25%">Name</th><th width="25%">Value</th><th>Referance Range</th></tr>';var value=strJson[i].AttributeArray;for(j in value){strAttrContent+='<tr>';strAttrContent+='<td >'+value[j].AttrName+'</td>';strAttrContent+='<td >'+value[j].AttrResult;if(value[j].Unit!=''){strAttrContent+='<span class="ehxvalue_sty">'+value[j].Unit+'</span>'}strAttrContent+='</td>';strAttrContent+='<td >'+value[j].RefRange+'</td>';strAttrContent+='</tr>'}strAttrContent+='</table></div></td></tr>';strLabContent+='<td>'+strJson[i].LabName+'</td>';strLabContent+='<td>'+strJson[i].OptinFacilityName+'</td>';strLabContent+='<td>'+strJson[i].providername+'</td>';strLabContent+='<td>'+strJson[i].EncounterDate+'</td>';strLabContent+='<td>'+strJson[i].CollectionDate+'</td>';strLabContent+='</tr>';strLabContent+=strAttrContent;strAttrContent='';strTblBody+=strLabContent}$('#'+tblId).html(strTblBody)}function getEhxAllergiesContent(strJson,tblId){var strAllergieContent="";var strTblBody="";var strAttrContent="";$('#'+tblId).html('');for(var i in strJson){strAllergieContent='<tr>';strAllergieContent+='<td>'+strJson[i].allergieName+'</td>';strAllergieContent+='<td>'+strJson[i].crdatetime+'</td>';strAllergieContent+='<td>'+strJson[i].reaction+'</td>';strAllergieContent+='<td>'+strJson[i].codeValue+'</td>';strAllergieContent+='</tr>';strTblBody+=strAllergieContent}$('#'+tblId).html(strTblBody)}function getEhxLabsDetails(patientId,ptEcwmpi,labName,loinCode){var strJson='';var fetchFromURL="/mobiledoc/jsp/empi/master/executeUrlToMaster.jsp";var url="/mobiledoc/jsp/empi/xml/getListOfSimilarRecordsFromEMR.jsp?sRequestFor=getSimillerLabs&patientId="+patientId+"&ptEcwmpi="+ptEcwmpi+"&labName="+labName+"&loinCode="+loinCode;var strUnamePwd="";var d=new Date;var strSSOTOken='';strSSOTOken=getSSOToken();if(strSSOTOken==null||strSSOTOken==""||strSSOTOken.length==0){alert("Error while generation SSO Token for Ehx")}else{url=url+"&ehxSSO=yes&ssoStamp="+strSSOTOken}url=url+"&unamepwd="+strUnamePwd;var dataParam="masterUrl="+encodeURIComponent(url);return ehxCommonFuncsGetPromiseForAjaxJson(fetchFromURL,dataParam)}function getEhxAllergiesDetails(patientId,ptEcwmpi,allergieName,NDCCode){var strJson='';var fetchFromURL="/mobiledoc/jsp/empi/master/executeUrlToMaster.jsp";var url="/mobiledoc/jsp/empi/xml/getListOfSimilarRecordsFromEMR.jsp?sRequestFor=getSimillerAllergie&patientId="+patientId+"&ptEcwmpi="+ptEcwmpi+"&allergieName="+allergieName+"&NDCCode="+NDCCode;var strUnamePwd="";var d=new Date;var strSSOTOken='';strSSOTOken=getSSOToken();if(strSSOTOken==null||strSSOTOken==""||strSSOTOken.length==0){alert("Error while generation SSO Token for Ehx")}else{url=url+"&ehxSSO=yes&ssoStamp="+strSSOTOken}url=url+"&unamepwd="+strUnamePwd;var dataParam="masterUrl="+encodeURIComponent(url);return ehxCommonFuncsGetPromiseForAjaxJson(fetchFromURL,dataParam)}function ehxCommonFuncsGetPromiseForAjaxJson(url,postData){var deferred=$.Deferred();try{$.ajax({method:"POST",url:makeURL(url),data:postData}).success(function(response){if(response){deferred.resolve(response)}else{deferred.reject(response);console.log("ehxCommonFuncsGetPromiseForAjax () promise req while getting data from server, rejected for "+url)}})}catch(err){deferred.reject(response);console.log("ehxCommonFuncsGetPromiseForAjax () promise req while getting data from server, rejected for "+url);console.log(err)}return deferred.promise()}function pingEhxServer(){var returnVal='';$.ajax({url:"/mobiledoc/jsp/webemr/empi/serviceEHXCall.jsp",type:'GET',data:"action=checkEhxConnection","async":false,success:function(response){if(response!=null){returnVal=response}else{returnVal='Error occured in response'}},error:function(xhr){console.log("Error: "+xhr.status);returnVal='Error :'+xhr.status}});return returnVal}function isPatientTeen(pid){var returnVal='';$.ajax({url:"/mobiledoc/jsp/empi/isPatientTeen.jsp",type:'GET',data:"pid="+pid,"async":false,success:function(response){if(response!=null){returnVal=response}else{returnVal='Error occured in response'}},error:function(xhr){console.log("Error: "+xhr.status);returnVal='Error :'+xhr.status}});return returnVal}function getEmpiPhyIdFromEmrIdFunc(nLoginUserId){var returnVal='';$.ajax({url:"/mobiledoc/jsp/empi/getEmpiPhyIdFromEmrId.jsp",type:'GET',"async":false,success:function(response){if(response!=null){returnVal=response}else{returnVal='Error occured in response'}},error:function(xhr){console.log("Error: "+xhr.status);returnVal='Error :'+xhr.status}});return returnVal}function getActiveUseronEhx(userId){var dataUser='';var jsonUser='';jsonUser={TrUserId:userId};var promise;var url='/mobiledoc/jsp/webemr/empi/getUserActiveonEhx.jsp';try{var promise=ehxCommonFuncsGetPromiseForAjax(url,jsonUser)}catch(err){console.log(err);dataUser='false'}return promise}function ehxCommonFuncsGetItemConsentLevel(strCategory,strTrimmedItem){var result='2';var url='/mobiledoc/jsp/empi/getItemConsentLevel.jsp';dataConsent={category:strCategory,item:strTrimmedItem};var deferred=$.Deferred();try{$.ajax({method:"POST",url:makeURL(url),data:dataConsent}).success(function(response){deferred.resolve(response)})}catch(err){deferred.reject(response);console.log("ehxCommonFuncsGetPromiseForAjax () promise req while getting data from server, rejected for "+url);console.log(err)}return deferred.promise()}function hitExternalRegistries(patientId,trUserId){var deferred=$.Deferred();$.ajax({url:"/mobiledoc/jsp/dashboard/serviceExternalRepositories.jsp",data:{"action":"getExternalRegistoriesSearch","patientId":patientId,"trUserId":trUserId,"ms":(new Date).getTime()},type:'POST',success:function(response){if(response){deferred.resolve(response)}else{deferred.reject('Error getting response')}},error:function(request,textStatus,errorThrown){deferred.reject(errorThrown);throw request}});return deferred.promise()}function checkExternalRegistriesResponse(striHubToken,patientId,trUserId){var deferred=$.Deferred();$.ajax({url:"/mobiledoc/jsp/dashboard/serviceExternalRepositories.jsp",data:{"action":"CheckExternalResponse","patientId":patientId,"trUserId":trUserId,"striHubToken":striHubToken,"ms":(new Date).getTime()},type:'POST',success:function(response){response=ehxDataTrimString(response);if(null!==response||undefined!==response){deferred.resolve(response)}else{deferred.reject('Error getting response')}},error:function(request,textStatus,errorThrown){deferred.reject(errorThrown)}});return deferred.promise()}function hitExternalRegistries(patientId,trUserId){var deferred=$.Deferred();$.ajax({url:"/mobiledoc/jsp/dashboard/serviceExternalRepositories.jsp",data:{"action":"getExternalRegistoriesSearch","patientId":patientId,"trUserId":trUserId,"ms":(new Date).getTime()},type:'POST',success:function(response){if(response){deferred.resolve(response)}else{deferred.reject('Error getting response')}},error:function(request,textStatus,errorThrown){deferred.reject(errorThrown);throw request}});return deferred.promise()}function addExtRegAccessLogs(iHubPid,patientId,trUserId){var deferred=$.Deferred();$.ajax({url:"/mobiledoc/jsp/dashboard/serviceExternalRepositories.jsp",data:{"action":"addExtRegAccessLogs","patientId":patientId,"trUserId":trUserId,"iHubPid":iHubPid,"ms":(new Date).getTime()},type:'POST',success:function(response){response=ehxDataTrimString(response);if(null!==response||undefined!==response){deferred.resolve(response)}else{deferred.reject('Error getting response')}},error:function(request,textStatus,errorThrown){deferred.reject(errorThrown)}});return deferred.promise()}function getExternalRegistriesCustomName(){var deferred=$.Deferred();$.ajax({url:"/mobiledoc/jsp/dashboard/serviceExternalRepositories.jsp",data:{"action":"getExternalRegistriesCustomName","ms":(new Date).getTime()},type:'POST',success:function(response){response=ehxDataTrimString(response);if(null!==response||undefined!==response){deferred.resolve(response)}else{deferred.reject('Error getting response')}},error:function(request,textStatus,errorThrown){deferred.reject(errorThrown)}});return deferred.promise()}function ehxCommonFuncs_convertDateFormat(dateString){var d=new Date(dateString);var year=d.getFullYear();var month=d.getUTCMonth()>8?d.getUTCMonth()+1:'0'+(d.getUTCMonth()+1);var date=d.getUTCDate()>9?d.getUTCDate():'0'+d.getUTCDate();var displayDate=year+'-'+month+'-'+date+" ";return displayDate}function parseRPPophealthJSON(response){var rpPophealthJSON=JSON.parse(response);for(var i in rpPophealthJSON){if(i!='striHubToken'){rpPophealthJSON[i]=JSON.parse(rpPophealthJSON[i]);if(rpPophealthJSON[i].hasOwnProperty('strResponse')){rpPophealthJSON[i].strResponse=JSON.parse(rpPophealthJSON[i].strResponse);if(rpPophealthJSON[i].strResponse.hasOwnProperty('message')){rpPophealthJSON[i].hasRegistriesErrorMessage=true;rpPophealthJSON[i].strRegistriesErrorMessage=rpPophealthJSON[i].strResponse.message}}else{rpPophealthJSON[i].hasRegistriesErrorMessage=true;rpPophealthJSON[i].strRegistriesErrorMessage='Error occured fetching Registries'}if(rpPophealthJSON[i].hasOwnProperty('strHCCEntity')){rpPophealthJSON[i].strHCCEntity=JSON.parse(rpPophealthJSON[i].strHCCEntity);if(rpPophealthJSON[i].strHCCEntity.hasOwnProperty('message')){rpPophealthJSON[i].hasHCCErrorMessage=true;rpPophealthJSON[i].strHCCErrorMessage=rpPophealthJSON[i].strHCCEntity.message}}if(rpPophealthJSON[i].hasOwnProperty('strDemographics')){rpPophealthJSON[i].strDemographics=JSON.parse(rpPophealthJSON[i].strDemographics)}if(rpPophealthJSON[i].hasOwnProperty('strRAFEntity')){rpPophealthJSON[i].strRAFEntity=JSON.parse(rpPophealthJSON[i].strRAFEntity);if(rpPophealthJSON[i].strRAFEntity.hasOwnProperty('message')){rpPophealthJSON[i].hasRAFErrorMessage=true;rpPophealthJSON[i].strRAFErrorMessage=rpPophealthJSON[i].strRAFEntity.message}}}else{delete rpPophealthJSON[i]}}return rpPophealthJSON}function getAge(dateString){var today=new Date;var birthDate=new Date(dateString);var age=today.getFullYear()-birthDate.getFullYear();var m=today.getUTCMonth()-birthDate.getUTCMonth();if(m<0||m===0&&today.getDate()<birthDate.getDate()){age--}return age}function getPatientDemographics(patientId,trUserId){var deferred=$.Deferred();$.ajax({url:"/mobiledoc/jsp/dashboard/serviceExternalRepositories.jsp",data:{"action":"getPtDemographics","patientId":patientId,"trUserId":trUserId,"ms":(new Date).getTime()},type:'POST',success:function(response){response=ehxDataTrimString(response);if(null!==response||undefined!==response){deferred.resolve(response)}else{deferred.reject('Error getting response')}},error:function(request,textStatus,errorThrown){deferred.reject(errorThrown)}});return deferred.promise()}function isValidJson(str){try{JSON.parse(str)}catch(e){return false}return true}function getEMRBenefitCoverageDetails(){var deferred=$.Deferred();$.ajax({url:"/mobiledoc/jsp/dashboard/serviceExternalRepositories.jsp",data:{"action":"getEMRBenefitCoverageDetails","ms":(new Date).getTime()},type:'POST',success:function(response){response=ehxDataTrimString(response);if(null!==response||undefined!==response){deferred.resolve(response)}else{deferred.reject('Error getting response')}},error:function(request,textStatus,errorThrown){deferred.reject(errorThrown)}});return deferred.promise()}var benefitCoveragePayorName='';var isShowBenefitCoveragePayorMessage=false;function isValidBenefitCoverage(benefitCoverageEMR,benefitCoverageRegistries){var returnVal=false;isShowBenefitCoveragePayorMessage=false;benefitCoveragePayorName='';for(var i in benefitCoverageRegistries){benCoverage=benefitCoverageRegistries[i];for(var j in benCoverage.plan_ids){var planid=benCoverage.plan_ids[j];if('all'===benefitCoverageEMR.benefitCoveragePlanIdValue.toLowerCase()&&undefined!==planid.value&&null!==planid.value){if(isBenefitCoverageInsuranceCached(planid.value)){if(benefitCoveragePayorName.indexOf(benCoverage.plan_name)<0){if(undefined===benCoverage.end_date||null===benCoverage.end_date||'null'===benCoverage.end_date){var benefitCoverageInsuranceListForHI=JSON.parse(sessionStorage.getItem("benefitCoverageInsuranceListForHI"));for(var idx in benefitCoverageInsuranceListForHI){if(benefitCoverageInsuranceListForHI[idx].Payercode===planid.value){benefitCoveragePayorName=benefitCoveragePayorName+benefitCoverageInsuranceListForHI[idx].PayerDisplayname+","}}returnVal=true;if(undefined!==planid.type&&benefitCoverageEMR.benefitCoveragePlanIdType===planid.type&&planid.value==='HPMA'){isShowBenefitCoveragePayorMessage=true}}else{var endDate=new Date(benCoverage.end_date);var today=new Date;if(endDate>today){var benefitCoverageInsuranceListForHI=JSON.parse(sessionStorage.getItem("benefitCoverageInsuranceListForHI"));for(var idx in benefitCoverageInsuranceListForHI){if(benefitCoverageInsuranceListForHI[idx].Payercode===planid.value){benefitCoveragePayorName=benefitCoveragePayorName+benefitCoverageInsuranceListForHI[idx].PayerDisplayname+","}}returnVal=true;if(undefined!==planid.type&&benefitCoverageEMR.benefitCoveragePlanIdType===planid.type&&planid.value==='HPMA'){isShowBenefitCoveragePayorMessage=true}}}}}}else if(undefined!==planid.value&&benefitCoverageEMR.benefitCoveragePlanIdValue===planid.value){if(undefined===benCoverage.end_date||null===benCoverage.end_date||'null'===benCoverage.end_date){benefitCoveragePayorName=benCoverage.plan_name;returnVal=true;if(undefined!==planid.type&&benefitCoverageEMR.benefitCoveragePlanIdType===planid.type){isShowBenefitCoveragePayorMessage=true}}else{var endDate=new Date(benCoverage.end_date);var today=new Date;if(endDate>today){benefitCoveragePayorName=benCoverage.plan_name;returnVal=true;if(undefined!==planid.type&&benefitCoverageEMR.benefitCoveragePlanIdType===planid.type){isShowBenefitCoveragePayorMessage=true}}}}}}if(returnVal&&benefitCoveragePayorName.length>1&&'all'===benefitCoverageEMR.benefitCoveragePlanIdValue.toLowerCase()){benefitCoveragePayorName=benefitCoveragePayorName.substring(0,benefitCoveragePayorName.length-1)}return returnVal}function getACGRiskScoreForPatient(patientId,trUserId){var deferred=$.Deferred();$.ajax({url:"/mobiledoc/jsp/dashboard/serviceExternalRepositories.jsp",data:{"action":"getACGRiskScoreForPatient","patientId":patientId,"trUserId":trUserId,"ms":(new Date).getTime()},type:'POST',success:function(response){response=ehxDataTrimString(response);if(null!==response||undefined!==response){deferred.resolve(response)}else{deferred.reject('Error getting response')}},error:function(request,textStatus,errorThrown){deferred.reject(errorThrown)}});return deferred.promise()}function getGAPSInCare(patientId){var deferred=$.Deferred();$.ajax({url:"/mobiledoc/jsp/dashboard/serviceExternalRepositories.jsp",data:{"action":"getGAPSInCare","patientId":patientId,"ms":(new Date).getTime()},type:'POST',success:function(response){response=ehxDataTrimString(response);if(null!==response||undefined!==response){deferred.resolve(response)}else{deferred.reject('Error getting GAPS in care response')}},error:function(request,textStatus,errorThrown){deferred.reject("Error in GAPS in care response : "+errorThrown)}});return deferred.promise()}function _isContains(json,key,value){var isContains=false;for(var i in json){if(json[i][key].toUpperCase()===value.toUpperCase()){isContains=true;break}}return isContains}function cacheBenefitCoverageInsuranceListForHI(){var deferred=$.Deferred();if('sessionStorage'in window&&window['sessionStorage']!==null){if(sessionStorage.getItem("benefitCoverageInsuranceListForHI")===null){$.ajax({url:"/mobiledoc/jsp/dashboard/serviceExternalRepositories.jsp",data:{"action":"getBenefitCoverageInsurance","ms":(new Date).getTime()},type:'POST',"async":false,success:function(response){response=ehxDataTrimString(response);sessionStorage.setItem("benefitCoverageInsuranceListForHI",response);deferred.resolve("success")},error:function(request,textStatus,errorThrown){deferred.reject("error : "+errorThrown)}})}else{deferred.resolve("success")}}else{deferred.reject("Error caching benefit coverage insurance list.")}return deferred.promise()}function isBenefitCoverageInsuranceCached(planCode){var returnValue=false;if(undefined!==planCode||''!==planCode){var benefitCoverageInsuranceListForHI=JSON.parse(sessionStorage.getItem("benefitCoverageInsuranceListForHI"));for(var idx in benefitCoverageInsuranceListForHI){if(benefitCoverageInsuranceListForHI[idx].Payercode===planCode){returnValue=true}}}return returnValue}function ehxCommonFuncs_set_NA_IfHasDefaultDate(dateTime){if(ehxCommonFuncs_IsDefaultDate(dateTime)){return"N/A"}else{return convertDateFormat(dateTime)}}function convertDateFormat(date){if(null!==date&&date!==undefined&&date.indexOf('-')>1){var datearray=date.split("-");if(null!==datearray&&undefined!==datearray&&datearray.length===3){var newdate=datearray[1]+'-'+datearray[2]+'-'+datearray[0];return newdate}else{return date}}else{return date}}function ehxCommonFuncs_IsDefaultDate(dateTime){if(dateTime=="00/00/0000"||dateTime=="00/00/0000 00:00:00"||dateTime=="00/00/0000 00:00:00.0"||dateTime=="0000-00-00"||dateTime=="0000-00-00 00:00:00"||dateTime=="0000-00-00 00:00:00.0"||dateTime=="0001-01-01"||dateTime=="0001-01-01 00:00:00"||dateTime=="0001-01-01 00:00:00.0"||dateTime=="1900-01-01"||dateTime=="1900-01-01 00:00:00"||dateTime=="1900-01-01 00:00:00.0"||dateTime=="01/01/1900"||dateTime=="01/01/1900 00:00:00"||dateTime=="01/01/1900 00:00:00.0"||dateTime=="1901-01-01"||dateTime=="1901-01-01 00:00:00"||dateTime=="1901-01-01 00:00:00.0"||dateTime=="01/01/1901"||dateTime=="01/01/1901 00:00:00"||dateTime=="01/01/1901 00:00:00.0"||dateTime=="01/01/0001"||dateTime=="01/01/0001 00:00:00"||dateTime=="01/01/0001 00:00:00.0"||dateTime=="01 Jan, 0001"||dateTime=="01 Jan, 1900"||dateTime=="01 Jan, 1901"){return true}else{return false}}function isAllergenPicklistEnabled(){var serverurl='/mobiledoc/jsp/webemr/rightpanel/serviceEhxRightPane.jsp';var param={action:'isAllergenPicklistEnabled'};var jsonRpData=urlPost(serverurl,param);if(undefined!==jsonRpData&&''!==jsonRpData.trim()&&'true'===ehxDataTrimString(jsonRpData)){return true}else{return false}}function getUnamePwd(){if(!strUnamePwd){$.ajax({type:"POST",url:"/mobiledoc/jsp/empi/getUNamePwd.jsp","async":false,cache:false,success:function(response){strUnamePwd=ehxDataTrimString(response);return false}})}return strUnamePwd}function addInputElemIntoForm(formEle,iputName,inputValue){if(formEle&&iputName){var vInput=document.createElement("INPUT");vInput.setAttribute("type","hidden");vInput.setAttribute("name",iputName);vInput.setAttribute("value",inputValue);formEle.appendChild(vInput)}}function encodeHtmlContent(value){return $('<div/>').text(value).html()}function ehxDataTrimString(data){return String.prototype.trim.call(data===null||data===undefined?"":data)}