var adjustMultiselectPosition=function(id){var structDataRowSelector="#structDataRow";var structDataConfRowSelector="#structDataConfRow";var structDataTrigRowSelector="#structDataConfTrig";var topThreshold=295;var maxHeight=90;if(id){structDataRowSelector=structDataRowSelector+""+id;structDataConfRowSelector=structDataConfRowSelector+""+id;structDataTrigRowSelector=structDataTrigRowSelector+""+id}else{structDataTrigRowSelector=structDataTrigRowSelector}var cellElement=$(structDataRowSelector);var confElement=$(structDataConfRowSelector);var trigElement=$(structDataTrigRowSelector);if(trigElement&&trigElement.offset()){$(".ms-drop").css({'left':trigElement.offset().left});$(".ms-drop").css({'top':trigElement.offset().top});$(".ms-drop").width(trigElement.width())}if(confElement&&confElement.offset()){$(".ms-drop").css({'left':confElement.offset().left});$(".ms-drop").css({'top':confElement.offset().top});$(".ms-drop").width(confElement.width())}else if(cellElement&&cellElement.offset()){$(".ms-drop").css({'left':cellElement.offset().left});$(".ms-drop").css({'top':cellElement.offset().top});$(".ms-drop").width(cellElement.width());try{if(document.getElementById("ptAddInfoController")||document.getElementById("BhHistoryController")){var rowElement=$("#tr"+id);$(".ms-drop").css({'left':rowElement.offset().left});$(".ms-drop").css({'top':cellElement.offset().top+30});$(".ms-drop").width(rowElement.width())}topThreshold=cellElement.offset().top+topThreshold;if($(window).height()<topThreshold){$(".singleMultipleSelectUid").css({'max-height':maxHeight})}}catch(err){}}};var stopTimer=null;angular.module('ecw.dir.structuredmultiselect',[]).directive('structuredmultipleselect',function(){return{restrict:'A',scope:{multipleselectId:'=multipleselectId',fieldobj:'=fieldobj',datatabletype:'=datatabletype'},link:function(scope,element,attrs,ngModelCtrl){attrs.$set('id',"selectCombo"+scope.multipleselectId);var container="body";if(attrs.ngModel==='selectedStructItem.defaultValueArray'){container="#structDiv"}else if(attrs.ngModel==='field.selectedOption'){container=".web_structuredata_"+scope.datatabletype}element.multipleSelect({filter:true,maxHeight:235,minimumCountSelected:15,container:container,onOpen:function(){adjustMultiselectPosition(scope.multipleselectId)}});var lengthWatcher=scope.$watch(function(){return element[0].length},function(){element.multipleSelect('refresh')});var refreshWatcher=scope.$watch('multipleselectId',function(){element.multipleSelect('refresh')});scope.$on('$destroy',function(){refreshWatcher();lengthWatcher();element.multipleSelect('destroy')})}}});angular.module('ecw.dir.structuredsingleselect',[]).directive('structuredsingleselect',function($timeout){return{restrict:'A',scope:{singleselectId:'=singleselectId',fieldobj:'=fieldobj',datatabletype:'=datatabletype'},link:function(scope,element,attrs,ngModelCtrl){var fieldId;if(scope.singleselectId){fieldId=scope.singleselectId}else{fieldId=(new Date).getTime()}attrs.$set('name',fieldId);attrs.$set('id',"selectCombo"+fieldId);var container=".web_structuredata_"+scope.datatabletype;element.multipleSelect({maxHeight:235,filter:true,single:true,container:container,onOpen:function(){adjustMultiselectPosition(scope.singleselectId);$timeout(function(){try{var structDataRowSelector="#structDataRow";if(scope.singleselectId){structDataRowSelector=structDataRowSelector+""+scope.singleselectId}var cellElement=$(structDataRowSelector);cellTopPos=cellElement.offset().top+40;var selectedVals=element.multipleSelect("getSelects");var value="string:"+(new Date).getFullYear();if(selectedVals&&selectedVals.length>0){value=selectedVals[0]}var topPos=$('.singleMultipleSelectUid').last().find("input[value='"+value+"']").offset().top-cellTopPos;$('.singleMultipleSelectUid').scrollTop(topPos)}catch(err){}})}});var refreshWatcher=scope.$watch(function(){return element[0].length},function(){element.multipleSelect('refresh')});scope.$on('$destroy',function(){refreshWatcher();element.multipleSelect('destroy')})}}});angular.module('ecw.dir.structNumberonly',[]).directive('isStructNumber',function(){return{require:'ngModel',link:function(scope,element,attrs,ngModel){var functionWatcher=scope.$watch(function(){return ngModel.$modelValue},function(newValue,oldValue){var arr=String(newValue).split("");if(arr.length===0)return;if(arr.length===1&&(arr[0]=='-'||arr[0]==='.'))return;if(arr.length===2&&newValue==='-.')return;if(isNaN(newValue)){ngModel.$setViewValue(oldValue);ngModel.$render()}});scope.$on('$destroy',function(){functionWatcher()})}}});angular.module('ecw.dir.structuredata',['ecw.dir.structuredmultiselect','ecw.dir.scrollpane','ecw.dir.maskdateinput','ecw.dir.structNumberonly','ecw.dir.structuredsingleselect','ecw.spellchecker','oc.lazyLoad','ecw.datatruncUtilityModule','ecw.dir.spellCheckText']).directive('structuredata',function($http,$interval,$timeout,$ocLazyLoad,$modal,$rootScope,dataTruncUtilityService){return{restrict:'AE',replace:'true',template:'<div id="web_structuredata_dir" class="web_structuredata_{{datatabletype}}" ng-include="structuredUrl"></div>',scope:{structuredataoptions:'=notesoptions',customCancel:'&onCustomcancel',customSave:'&onCustomsave',customnavigation:'&onCustomnavigation',customNext:'&onCustomnext',customPrevious:'&onCustomprevious',openStructuredForm:'&openStructuredForm',openStructuredGrid:'&openStructuredGrid',isEffectiveDateEnabled:'=isEffectiveDateEnabled',showmultipletime:'=showmultipletime',patientIdentifierData:'=?patientIdentifierData',isSocialHxChanged:'=?socialHxChanged'},link:function(scope){firstTimeLoad=true;var structOptions={};function getCachedStructOptions(detailId){var deferred=$.Deferred();if(structOptions.hasOwnProperty(detailId)){deferred.resolve(structOptions[detailId])}else{var url='/mobiledoc/jsp/webemr/model/getStructOptions.jsp?ids='+detailId;if(scope.isStatusFlagEnable()){url+='&data=yes&module='+scope.getModuleName()+'&catId='+scope.catId+'&itemId='+scope.itemId+'&encId='+scope.encounterId}$http.get(url).then(function(response){structOptions[detailId]=response.data;deferred.resolve(response.data)},function(response){return deferred.reject(response)})}return deferred.promise()}scope.isStatusFlagEnable=function(){var isStatusEnable=false;if(scope.datatabletype){switch(scope.datatabletype.toLowerCase()){case"structhpi":case"structexam":case"structphysicalexam":case"structsocialhistory":case"structobhistory":case"structgynhistory":case"structpreventive":isStatusEnable=true;break}}return isStatusEnable};scope.getModuleName=function(){var sectionName="";if(scope.datatabletype){switch(scope.datatabletype.toLowerCase()){case"structhpi":sectionName="hpi";break;case"structexam":sectionName="examination";break;case"structphysicalexam":sectionName="physical examination";break;case"structsocialhistory":sectionName="social history";break;case"structobhistory":sectionName="ob history";break;case"structgynhistory":sectionName="gyn history";break;case"structpreventive":sectionName="preventive medicine";break}}return sectionName};scope.hideStructSelectPopup=function(){hideSelectPopup()};scope.getStructOptions=function(fieldObj,callBack){if(fieldObj.type=='boolean'){var booleans=[];booleans.push({"name":"Yes ","detailId":"Yes"});booleans.push({"name":"No ","detailId":"No"});fieldObj.valueSource=booleans;scope.addItemToValueSource(fieldObj,fieldObj.value,fieldObj.value)}else if(fieldObj.type=='yearPicker'){var years=[];var currentYear=(new Date).getFullYear();for(var i=currentYear-160;i<currentYear;i++){years.push({"name":""+i+" ","detailId":""+i})}for(i=currentYear;i<currentYear+100;i++){years.push({"name":""+i+" ","detailId":""+i})}fieldObj.valueSource=years}else if(fieldObj.type=='select'||fieldObj.type=='multiselect'){getCachedStructOptions(fieldObj.detailId).then(function(response){$timeout(function(){var structOptionObj=response;fieldObj.valueSource=structOptionObj.structoptions[fieldObj.detailId];fieldObj.valueSource=validateNameValue(fieldObj.valueSource);var valuIdArray=stringToArray(fieldObj.valueId,'multiselect');var valueArray=stringToArray(fieldObj.value,'multiselect');for(var vIndex in valuIdArray){scope.addItemToValueSource(fieldObj,valuIdArray[vIndex],valueArray[vIndex])}if(typeof callBack==="function"){callBack(fieldObj)}})})}};var validateNameValue=function(valuesArr){var objValuesArr=valuesArr;try{if(!valuesArr.length){return[]}for(var i=0;i<valuesArr.length;i++){valuesArr[i].name=valuesArr[i].name.replaceAll("< ","<").replaceAll("<","< ")}}catch(err){valuesArr=objValuesArr}return valuesArr};scope.dropDownClicked=function(field,openDropDown){scope.getStructOptions(field);if(openDropDown){$timeout(function(){$("#selectCombo"+field.detailId).multipleSelect('refresh');$("#selectCombo"+field.detailId).multipleSelect("focus");$(document.activeElement).trigger('click')},0)}else{$timeout(function(){$("#selectCombo"+field.detailId).multipleSelect('refresh')},0)}};var structItems;scope.showBoolean=true;scope.showYearPicker=true;scope.showSingleSelect=true;scope.enableMultiselectTrigger=getItemKeyValue("EnableMultiselectForStruct").toLowerCase()=='yes';scope.labelLimit="40";scope.datatabletype=scope.structuredataoptions.datatabletype;scope.encounterId=scope.structuredataoptions.encounterId;scope.itemId=scope.structuredataoptions.itemId;scope.catId=scope.structuredataoptions.catId;scope.defaultId=scope.structuredataoptions.defaultId;var patientId=scope.patientIdentifierData?scope.patientIdentifierData.id:0;if(scope.structuredataoptions.dataNotRequired&&scope.structuredataoptions.dataNotRequired=='yes'){scope.dataNotRequired=true}else{scope.dataNotRequired=false}scope.theme="bluetheme";if(scope.structuredataoptions.theme){scope.theme=scope.structuredataoptions.theme}scope.PmtPlanId=scope.structuredataoptions.PmtPlanId!=undefined?scope.structuredataoptions.PmtPlanId:0;scope.structData=scope.structuredataoptions.structdata;scope.prevEncId=scope.structuredataoptions.encList!==undefined&&scope.structuredataoptions.encList!==null&&scope.structuredataoptions.encList.length!==0?scope.structuredataoptions.encList[0].prevEncId:0;scope.showCopyOver=scope.datatabletype=="structdental";scope.wnd={id:'0',name:''};scope.structuredataoptions.selectedWound={id:1,name:'Wound 1'};scope.currentlySelectedEye=scope.structuredataoptions.currentlySelectedEye||'';if($("#isIncludeStructDataInRefTx").val()==='no'&&scope.$parent.referralType==="Outgoing"){scope.isDispInfoIconForStructData=true}scope.totalWoundChange=function(){scope.woundList=[];if(scope.structuredataoptions.totalWounds)scope.structuredataoptions.totalWounds=parseInt(scope.structuredataoptions.totalWounds);if(scope.structuredataoptions.woundList){for(var i=0;i<scope.structuredataoptions.woundList.length;i++){var woundObj=scope.structuredataoptions.woundList[i];scope.woundList.push({id:woundObj.woundno,name:woundObj.woundname})}scope.wound=scope.woundList[0];scope.structuredataoptions.selectedWound=scope.wound}else scope.structuredataoptions.selectedWound={id:1,name:'Wound 1'}};scope.openEditPopup=function($event,obj){scope.wnd=obj;var _that=$event.currentTarget;$('.addwound-poup').show().animate({},100,function(){$(this).position({of:_that,my:'right top+30',at:'right top',collision:"flipfit"})})};scope.openaddpopup=function(){scope.wnd={id:'0',name:''}};scope.addWound=function(){var validateField=dataTruncUtilityService.getTextFieldWidthsFromTable("web_procedurewoundname","add_wound",'bluetheme');if(!validateField){return}for(var i=0;i<scope.woundList.length;i++){if(scope.wnd.name==scope.woundList[i].name&&scope.wnd.id!=scope.woundList[i].id){alert("Wound with the same name already exists.");return false}}var url='/mobiledoc/jsp/webemr/progressnotes/common3/addEditWound.jsp?woundName='+scope.wnd.name+'&woundId='+scope.wnd.id+'&encId='+scope.encounterId+'&itemId='+scope.itemId+"&catId="+scope.catId+"&action=add"+"&woundCount="+scope.woundList.length;var response=urlGet(makeURL(url));if(scope.wnd.id<=0)scope.woundList.push({id:response,name:scope.wnd.name});scope.wnd={id:'0',name:''}};scope.deleteWound=function(obj){var url='/mobiledoc/jsp/webemr/progressnotes/common3/addEditWound.jsp?woundId='+obj.id+'&encId='+scope.encounterId+'&itemId='+scope.itemId+"&catId="+scope.catId+"&action=delete"+"&woundCount="+scope.woundList.length;var response=urlGet(makeURL(url));var index=scope.woundList.indexOf(obj);scope.woundList.splice(index,1)};if(scope.showmultipletime=="true")scope.totalWoundChange();scope.config={isCorrectionalFeatureEnable:getItemKeyValue("EnableCorrectionalFeatures").toLowerCase()=='yes',isPuertoRico:"YES"==getItemKeyValue("Corrections_Puerto_Rico").toUpperCase()};var effectiveDateTimeTimeout;if(scope.isEffectiveDateEnabled){var formatTime="YES"==getItemKeyValue("isMilitaryTimeSchedule").toUpperCase()?"HH:mm":"hh:mm TT";var currentDT=moment();if(!scope.structuredataoptions.effectiveTime){if(formatTime=="HH:mm"){scope.structuredataoptions.effectiveTime=currentDT.format('MM/DD/YYYY HH:mm')}else{scope.structuredataoptions.effectiveTime=currentDT.format('MM/DD/YYYY HH:mm A')}}var minDate=scope.structuredataoptions.admissiondate;effectiveDateTimeTimeout=$timeout(function(){$('#effectiveDateTime').datetimepicker({timeFormat:formatTime,maxDate:new Date,minDate:minDate});$('.effective-date-time-calender').click(function(){$(this).parent().parent().find('#effectiveDateTime').datetimepicker("show")})},1500)}if(scope.structuredataoptions.labelLimit){scope.labelLimit=scope.structuredataoptions.labelLimit}var structuredDataView=getUserProfile("structureddataview");if(scope.datatabletype=="structdental"){scope.permissionToEditDentalHistory=scope.structuredataoptions.permissionToEditDentalHistory;scope.gridDesign=true}else if(structuredDataView){if(structuredDataView==='0'){scope.gridDesign=true}else{scope.gridDesign=false}}else{scope.gridDesign=true}scope.readOnlyView=false;if(scope.structuredataoptions.readOnlyView){scope.readOnlyView=scope.structuredataoptions.readOnlyView}scope.structuredUrl="";if(scope.datatabletype){if(scope.datatabletype=="structdental"){scope.structuredUrl='/mobiledoc/jsp/webemr/templates/structureddata-grid-dental-tpl.html'}else if(scope.gridDesign||scope.datatabletype=="derm_structprocedures"){scope.structuredUrl='/mobiledoc/jsp/webemr/templates/structureddata-grid-tpl.html'}else{scope.structuredUrl='/mobiledoc/jsp/webemr/templates/structuredata-tpl.html'}}scope.stHeight="390";if(scope.structuredataoptions.stHeight){scope.stHeight=scope.structuredataoptions.stHeight}scope.stInnerHeight=parseInt(scope.stHeight)-40;scope.shownotescolumn=true;if(scope.encounterId&&scope.encounterId=="0"){scope.shownotescolumn=false}if(scope.datatabletype=='derm_structprocedures'){scope.shownotescolumn=true}scope.optionsIds=[];scope.isGridVisible=true;scope.selectedFieldId="";scope.isFormVisible=false;scope.prepareMonthSource=function(){scope.months.push({"detailId":"01","name":"01"});scope.months.push({"detailId":"02","name":"02"});scope.months.push({"detailId":"03","name":"03"});scope.months.push({"detailId":"04","name":"04"});scope.months.push({"detailId":"05","name":"05"});scope.months.push({"detailId":"06","name":"06"});scope.months.push({"detailId":"07","name":"07"});scope.months.push({"detailId":"08","name":"08"});scope.months.push({"detailId":"09","name":"09"});scope.months.push({"detailId":"10","name":"10"});scope.months.push({"detailId":"11","name":"11"});scope.months.push({"detailId":"12","name":"12"})};scope.prepareBooleanSource=function(){scope.booleans.push({"name":"Yes ","detailId":"Yes"});scope.booleans.push({"name":"No ","detailId":"No"})};scope.prepareYearSource=function(){var currentYear=(new Date).getFullYear();for(var i=currentYear-160;i<currentYear;i++){scope.years.push({"name":""+i+" ","detailId":""+i})}for(i=currentYear;i<currentYear+100;i++){scope.years.push({"name":""+i+" ","detailId":""+i})}};scope.years=[];scope.months=[];scope.booleans=[];scope.prepareYearSource();scope.prepareMonthSource();scope.prepareBooleanSource();scope.expandedNodeIds=[];scope.initTreeTable=true;getStructureData(scope,scope.encounterId,scope.catId,scope.itemId,scope.datatabletype,scope.defaultId,$http,$interval,scope.PmtPlanId,scope.structuredataoptions.selectedWound.id,scope.dataNotRequired);scope.passFieldData=function(){scope.structuredataoptions.structuredItemsArray=scope.structuredEntities.fields;scope.structuredataoptions.structurednotes="";for(var keyIndex in scope.structuredEntities.fields){prepareStructuredNotes(scope,scope.structuredEntities.fields[keyIndex].label,scope.structuredEntities.fields[keyIndex].value,scope.structuredEntities.fields[keyIndex].notes)}};scope.persistStructureData=function(reLoadStructuredData){scope.broadcastStructChange();scope.passFieldData();if(scope.lastAccessField){var trigger=parseInputTriggerFlag(scope.lastAccessField);updateAllStructuredChilds(scope.lastAccessField.detailId,scope.structuredEntities.fields,trigger);if(reLoadStructuredData){stopTimer=setTimeout(function(){$("#structuredDataTable").treetable("destroy");$(".indenter").remove();$("#structuredDataTable").treetable({expandable:true,onNodeCollapse:function rowCollapsed(){var i=scope.expandedNodeIds.indexOf(this.id);if(i!==-1){scope.expandedNodeIds.splice(i,1)}},onNodeExpand:function rowExpanded(){if(scope.expandedNodeIds.indexOf(this.id)===-1){scope.expandedNodeIds.push(this.id)}}});for(expandedNodeId in scope.expandedNodeIds){try{$("#structuredDataTable").treetable('expandNode',scope.expandedNodeIds[expandedNodeId])}catch(e){}}if(scope.lastAccessField.visible){$("#structuredDataTable").treetable('expandNode',scope.lastAccessField.detailId)}},0)}}};scope.broadcastStructChange=function(){if(scope.datatabletype=="structDemographics"||scope.datatabletype=="structReferralOutgoing"||scope.datatabletype=="structReferralIncoming"||scope.datatabletype==="structactions"||scope.datatabletype==="structDisposition"||scope.datatabletype==="structFollowup"||scope.datatabletype==="structDischargeInternalNotes"||scope.datatabletype==="structDischargeFinalPlan"){$timeout(function(){if(scope.isFieldDataModified(scope.structuredEntities.fields)){$rootScope.$broadcast('structuredDataChanged',{'data':scope.structuredEntities.fields})}},100)}};scope.isFieldDataModified=function(fieldsArray){for(var i in fieldsArray){var initialFieldData=initialFieldDataMap[fieldsArray[i].detailId];if(initialFieldData.value!=fieldsArray[i].value||initialFieldData.notes!=fieldsArray[i].notes){return true}}return false};scope.scrollToStructuredRow=function(){try{if(!scope.gridDesign){var element=$('#structuredDataGrid');var api=element.data('jsp');api.scrollTo(parseInt(scope.xposition),parseInt(scope.yposition))}}catch(err){}};scope.persistBooleanData=function(booleanValue,field){if(booleanValue&&field){field.value=booleanValue}scope.lastAccessField=field;scope.persistStructureData(true)};scope.persistGridBooleanData=function(field){for(var keyIndex in field.valueSource){if(field.selectedOption.indexOf(field.valueSource[keyIndex].detailId)>=0){field.value=field.valueSource[keyIndex].name.trim()}}scope.lastAccessField=field;scope.persistStructureData(true)};scope.persistComboData=function(selectedOption,field){if(field.valueSource){field.value="";field.valueId="";for(var keyIndex in field.valueSource){if(selectedOption===field.valueSource[keyIndex].detailId){field.value=field.valueSource[keyIndex].name;field.valueId=field.valueSource[keyIndex].detailId}}}scope.lastAccessField=field;scope.persistStructureData(true)};scope.persistGridYearPicker=function(field){scope.broadcastStructChange();for(var keyIndex in field.valueSource){if(field.selectedOption.indexOf(field.valueSource[keyIndex].detailId)>=0){field.value=field.valueSource[keyIndex].name.trim()}}};scope.persistMultiComboStructureData=function(field){if(field.valueSource){field.value="";field.valueId="";for(var keyIndex in field.valueSource){if(field.selectedOption.indexOf(field.valueSource[keyIndex].detailId)>=0){if(field.value===""){field.value=field.valueSource[keyIndex].name;field.valueId=field.valueSource[keyIndex].detailId}else{field.value=field.value+", "+field.valueSource[keyIndex].name;field.valueId=field.valueId+","+field.valueSource[keyIndex].detailId}}}}scope.lastAccessField=field;scope.persistStructureData(true)};scope.persistMultiSelectData=function(option,optionId,field){if(field.value===""){field.value=option;field.valueId=optionId}else{if(field.valueId.indexOf(optionId)!=-1){try{var valCommaLength=(field.value.match(/,/g)||[]).length;var idCommaLength=(field.valueId.match(/,/g)||[]).length;field.valueId=removeValue(field.valueId,optionId,",");if(valCommaLength!==idCommaLength){if(field.value.indexOf(option+',')!=-1){field.value=field.value.replace(option+',','')}else{field.value=field.value.replace(','+option,'')}}else{field.value=removeValue(field.value,option,",")}}catch(err){field.valueId=removeValue(field.valueId,optionId,",");field.value=removeValue(field.value,option,",")}}else{field.value=field.value+","+option;field.valueId=field.valueId+","+optionId}}scope.lastAccessField=field;scope.persistStructureData(true)};scope.persistYearPicker=function(selectedOption,field){field.value=selectedOption};scope.resetFieldValue=function(field){field.value="";field.valueId="";scope.persistStructureData(true)};scope.resetNotes=function(field){field.notes="";scope.persistStructureData(true)};var validateStructDataFields=function(){var screenName='web_'+scope.datatabletype;var screenId='structuredDataGrid';if(scope.isFormVisible){screenId='structuredata_wizard_div'}return dataTruncUtilityService.getTextFieldWidthsFromTable(screenName,screenId,scope.theme)};scope.saveStructureData=function(okclick,selWound){if(!validateStructDataFields()){return}if(okclick)scope.structuredataoptions.donotcloseStructScreen=false;if(scope.mandatoryCheck()){scope.persistStructureData(false);scope.passFieldData();let xmlData;if(!scope.defaultId){scope.defaultId="0"}xmlData=createStructureDataXML(scope.structuredEntities.fields,scope.currentlySelectedEye,scope.defaultId);scope.structuredataoptions.structuredxml=xmlData;var aPromise;if(scope.datatabletype=="structInfirmary"){var jsonData=createStructureDataJSON(scope.structuredEntities.fields);if(jsonData.ansData.length>0){aPromise=postStructureDataInJson(jsonData,scope.encounterId,scope.catId,scope.itemId,scope.datatabletype,$http,scope.structuredataoptions.itemName,scope.structuredataoptions.patientId,scope.structuredataoptions.admissionId,scope.structuredataoptions.isChartTab,scope.structuredataoptions.isCopy,scope.structuredataoptions.effectiveTime)}else{ecwAlert("All Questions can't be blank");return false}$('#structureddata-grid-tplBtn26').attr('disabled','true')}else{if(scope.structuredataoptions.lockObj){if(!isLockMine2(scope.structuredataoptions.lockObj)){scope.customSave();return}}aPromise=postStructureData(xmlData,scope.encounterId,scope.catId,scope.itemId,scope.datatabletype,$http,'',scope.structuredataoptions.selectedWound.id,scope.structuredataoptions.currentlySelectedEye,scope.isSocialHxChanged)}aPromise.then(function(object){if(object.status===499){return}if(scope.showmultipletime=="true"){scope.structuredataoptions.totalWounds=scope.woundList.length;scope.structuredataoptions.woundList=scope.woundList}scope.customSave();var isLacerationEnabled=getItemKeyValue("IsLacerationEnabled").toLowerCase()==='yes';var lacerationId=getItemKeyValue("Laceration Repair",true);if(isLacerationEnabled&&lacerationId>0&&lacerationId===scope.structuredataoptions.catId){if(scope.structuredataoptions.cptcode!="-1"){if(scope.structuredataoptions.cptcode){ecwConfirm("CPT Code is already calculated. Are you sure you want to overwrite it?","CPT Code",function(){var url="/mobiledoc/jsp/webemr/progressnotes/common3/updateEncounterCPT.jsp?encounterId="+scope.encounterId+"&catId="+scope.catId+"&itemId="+scope.itemId+"&woundid="+scope.structuredataoptions.selectedWound.id+"&woundname="+scope.structuredataoptions.selectedWound.name;url=makeURL(url);var aPromise=$http.get(url).then(function(response){},function(response){var data=response.data,status=response.status,header=response.header,config=response.config;throw"Internal Error occured while clearing all Defaults , Please try after some time"})})}else{var url="/mobiledoc/jsp/webemr/progressnotes/common3/updateEncounterCPT.jsp?encounterId="+scope.encounterId+"&catId="+scope.catId+"&itemId="+scope.itemId+"&woundid="+scope.structuredataoptions.selectedWound.id+"&woundname="+scope.structuredataoptions.selectedWound.name;url=makeURL(url);var aPromise=$http.get(url).then(function(response){},function(response){var data=response.data,status=response.status,header=response.header,config=response.config;throw"Internal Error occured while clearing all Defaults , Please try after some time"})}}if(selWound){scope.structuredataoptions.selectedWound=selWound;getStructureData(scope,scope.encounterId,scope.catId,scope.itemId,scope.datatabletype,scope.defaultId,$http,$interval,scope.PmtPlanId,scope.structuredataoptions.selectedWound.id,scope.dataNotRequired)}}if(scope.datatabletype==="structInfirmary"){$('#structureddata-grid-tplBtn26').removeAttr('disabled')}},function errorCallback(error){alert(error);if(scope.datatabletype==="structInfirmary"){$('#structureddata-grid-tplBtn26').removeAttr('disabled')}})}else{scope.wound=selWound}};scope.mandatoryCheck=function(){return validateStructData(scope.structuredEntities.fields)};scope.selectAndclear=function(field,event){if(event){event.preventDefault();event.stopPropagation()}field.value="";field.valueId="";scope.persistStructuredDataByType(field,"");scope.broadcastStructChange();if(scope.datatabletype=='structDemographics'){$("#ptAddInfoController .ms-drop.bottom").remove()}else{$('.ms-drop.bottom').remove()}};scope.selectAndclearNotes=function(field,event){scope.broadcastStructChange();if(event){event.preventDefault();event.stopPropagation()}field.notes=""};var isNotEmpty=function(value){return value&&value.length>0};var isAnyStructureFieldDocumented=function(fromClear){let index;if(fromClear){index=scope.structuredEntities.fields.findIndex(function(field){return isNotEmpty(field.value)||isNotEmpty(field.notes)})}else{index=scope.structuredEntities.fields.findIndex(function(field){return isNotEmpty(field.value)})}return index>-1};var isCheckedStructureFieldDocumented=function(fromClear){let index;if(fromClear){index=scope.structuredEntities.fields.findIndex(function(field){return field.checked&&(isNotEmpty(field.value)||isNotEmpty(field.notes))})}else{index=scope.structuredEntities.fields.findIndex(function(field){return field.checked&&isNotEmpty(field.value)})}return index>-1};var isAnyStructureFieldSelected=function(){return scope.structuredEntities.fields.findIndex(function(field){return field.checked})>-1};scope.clear=function(){if(!isAnyStructureFieldSelected()){ecwAlert('Please select atleast one record to clear values');return}if(isCheckedStructureFieldDocumented(true)){ecwConfirm("Are you sure you want to clear the data ?","Clear",scope.clearHandler)}};scope.clearHandler=function(){scope.broadcastStructChange();for(var keyIndex in scope.structuredEntities.fields){if(scope.structuredEntities.fields[keyIndex].checked){scope.structuredEntities.fields[keyIndex].value="";scope.structuredEntities.fields[keyIndex].valueId="";scope.structuredEntities.fields[keyIndex].notes="";scope.persistStructuredDataByType(scope.structuredEntities.fields[keyIndex],"");scope.structuredEntities.fields[keyIndex].checked=false}}scope.$apply()};scope.clearAll=function(){if(isAnyStructureFieldDocumented(true)){ecwConfirm("Are you sure you want to clear all the data ?","Clear All",scope.clearAllHandler)}else{scope.clearAllHandler()}};scope.clearAllHandler=function(){$rootScope.$broadcast('structuredDataChanged',{'data':scope.structuredEntities.fields});for(var keyIndex in scope.structuredEntities.fields){if(scope.structuredEntities.fields[keyIndex].type==="boolean"||scope.structuredEntities.fields[keyIndex].type==="select"||scope.structuredEntities.fields[keyIndex].type==="multiselect"||scope.structuredEntities.fields[keyIndex].type==="yearPicker"){scope.structuredEntities.fields[keyIndex].selectedOption=[];try{$('[name="'+scope.structuredEntities.fields[keyIndex].detailId+'"]').multipleSelect('refresh');hideSelectPopup()}catch(err){ecwAlert("An error occurred during clear All."+err)}}}for(var keyIndex in scope.structuredEntities.fields){scope.structuredEntities.fields[keyIndex].value="";scope.structuredEntities.fields[keyIndex].valueId="";scope.structuredEntities.fields[keyIndex].notes="";scope.persistStructuredDataByType(scope.structuredEntities.fields[keyIndex],"");scope.structuredEntities.fields[keyIndex].checked=false}scope.$apply()};scope.findChecked=function(){scope.visibleOnlyParentQuestion();var found=false;for(var keyIndex in scope.structuredEntities.fields){if(scope.structuredEntities.fields[keyIndex].visible&&!scope.structuredEntities.fields[keyIndex].defdone){scope.setVisibleAdjacentChild(scope.structuredEntities.fields[keyIndex]);scope.structuredEntities.fields[keyIndex].checked=true;scope.structuredEntities.fields[keyIndex].defdone=true;found=true}}return found};scope.visibleOnlyParentQuestion=function(){for(var keyIndex in scope.structuredEntities.fields){if(scope.structuredEntities.fields[keyIndex].storedParentId!=="0"){scope.structuredEntities.fields[keyIndex].visible=false}}};scope.findCheckedForDefault=function(){var found=false;for(var keyIndex in scope.structuredEntities.fields){if(scope.structuredEntities.fields[keyIndex].checked&&!scope.structuredEntities.fields[keyIndex].defdone){scope.setVisibleAdjacentChild(scope.structuredEntities.fields[keyIndex]);scope.structuredEntities.fields[keyIndex].defdone=true;found=true}}return found};scope.setVisibleAdjacentChild=function(structuredEntitiesField){var structDetailId=structuredEntitiesField.detailId;var defaultValueId=structuredEntitiesField.defaultValueId;if(structuredEntitiesField.type==="boolean"){if(structuredEntitiesField.defaultValue==="Yes"){defaultValueId="1"}else if(structuredEntitiesField.defaultValue==="No"){defaultValueId="0"}}if(defaultValueId){var defaultValueIds=defaultValueId.toString().split(",");for(var keyIndex in scope.structuredEntities.fields){if(defaultValueIds.includes(scope.structuredEntities.fields[keyIndex].triggerFlag)&&structDetailId===scope.structuredEntities.fields[keyIndex].storedParentId){scope.structuredEntities.fields[keyIndex].visible=true;scope.structuredEntities.fields[keyIndex].checked=true}}}};scope.deafultAll=function(isFromRecursion){var found=scope.findChecked();scope.setdef(found,isFromRecursion)};scope.setdef=function(found,isFromRecursion){if(found){scope.validateDefaultForAll(isFromRecursion);hideSelectPopup();scope.deafultAll(true)}else{for(var keyIndex in scope.structuredEntities.fields){scope.structuredEntities.fields[keyIndex].defdone=false}}};scope.markFieldChecked=function(field){if(field.checked){field.checked=false}else{field.checked=true}};scope.applyDefaultHandler=function(){if(scope.findCheckedForDefault()){scope.defaultHandler()}};scope.deafult=function(){if(!isAnyStructureFieldSelected()){ecwAlert('Please select atleast one record to apply default configuration');return}if(isCheckedStructureFieldDocumented()){ecwConfirm("Are you sure you want to overwrite the changes?","Set Default",scope.applyDefaultHandler)}else{scope.applyDefaultHandler()}};scope.validateDefaultForAll=function(isFromRecursion){if(!isFromRecursion){if(!isAnyStructureFieldSelected()){ecwAlert('Please select atleast one record to apply default configuration');return}if(isAnyStructureFieldDocumented()){ecwConfirm("Are you sure you want to overwrite the changes?","Set Default",scope.defaultHandler);return}}scope.defaultHandler()};scope.defaultHandler=function(){scope.broadcastStructChange();for(var keyIndex in scope.structuredEntities.fields){if(scope.structuredEntities.fields[keyIndex].checked){scope.structuredEntities.fields[keyIndex].value=scope.structuredEntities.fields[keyIndex].defaultValue;scope.structuredEntities.fields[keyIndex].valueId=scope.structuredEntities.fields[keyIndex].defaultValueId;scope.persistStructuredDataByType(scope.structuredEntities.fields[keyIndex],"default");scope.structuredEntities.fields[keyIndex].checked=false;scope.structuredEntities.fields[keyIndex].defdone=false}}scope.$apply();hideSelectPopup()};var showBooleanTimeout,showSingleSelectTimeout,activateMultiSelectTimeout;scope.persistStructuredDataByType=function(field,valueSource){scope.broadcastStructChange();if(field.type==='boolean'){if(scope.gridDesign){scope.showBoolean=false;field.selectedOption=[];if(valueSource==="default"){field.selectedOption.push(field.defaultValue)}else if(valueSource==="template"){field.selectedOption.push(field.templateValue);field.valueId="";field.value=field.templateValue}scope.persistGridBooleanData(field);showBooleanTimeout=$timeout(function(){scope.showBoolean=true},0)}else{if(valueSource==="template"){field.value=field.templateValue}scope.persistBooleanData(field.value,field)}}else if(field.type==='select'){if(scope.gridDesign){scope.showSingleSelect=false;field.selectedOption=[];if(valueSource==="default"){field.selectedOption.push(field.defaultValueId)}else if(valueSource==="template"){if(scope.datatabletype&&scope.datatabletype=="structdental"){}else{field.valueId=""}field.selectedOption.push(field.templateValueId)}scope.persistComboData(field.valueId,field);showSingleSelectTimeout=$timeout(function(){scope.showSingleSelect=true},0)}else{if(valueSource==="template"){field.value=field.templateValue;field.valueId=""}scope.persistComboData(field.valueId,field)}}else if(field.type==='multiselect'){if(scope.gridDesign){scope.activateMultiSelect=false;field.selectedOption=[];if(valueSource==="default"){field.selectedOption=stringToArray(field.defaultValueId,'multiselect')}else if(valueSource==="template"){if(scope.datatabletype&&scope.datatabletype=="structdental"){field.valueId=field.value;field.selectedOption=stringToArray(field.templateValueId,'multiselect')}else{field.valueId="";field.selectedOption=stringToArray(field.templateValue,'multiselect')}}scope.persistMultiComboStructureData(field);activateMultiSelectTimeout=$timeout(function(){scope.activateMultiSelect=true},0)}else{if(valueSource==="template"){field.value=field.templateValue;field.valueId=""}scope.lastAccessField=field;scope.persistStructureData(true)}}else if(field.type==='yearPicker'){scope.showYearPicker=false;field.selectedOption=[];if(valueSource==="default"){field.selectedOption.push(field.defaultValue)}else if(valueSource==="template"){field.selectedOption.push(field.templateValue);field.valueId="";field.value=field.templateValue}scope.persistGridYearPicker(field);$timeout(function(){scope.showYearPicker=true},0)}};scope.numberClicked=function(field,number){var temp=field.value;if(field.value){field.value=field.value+""+number}else{field.value=number}};scope.clearLastDigit=function(field){field.value=""};scope.openDatepicker=function(fieldDetailId){var inputClass=".dtPicker"+fieldDetailId;$(inputClass).datepicker("show")};scope.adjustNotesPopupPosition=function(parentElement,popupId,event){if(parentElement){if($("#TJellyDetailViewd").length>0){$(popupId).css({'left':parentElement.offset().left})}else{if(scope.datatabletype=='structDemographics'){$(popupId).css({'left':parentElement.offset().left-150})}else if(scope.datatabletype=='structReferralIncoming'||scope.datatabletype=='structReferralOutgoing'||scope.datatabletype=='structphysicalexam'||scope.datatabletype=='structExam'||scope.datatabletype=='structactions'){$(popupId).css({'left':parentElement.offset().left})}else{$(popupId).css({'left':parentElement.position().left+20})}}$(popupId).css({'top':parentElement.offset().top})}else{$(popupId).css({'left':event.pageX});$(popupId).css({'top':event.pageY})}};scope.adjustPopupPosition=function(parentElement,popupId,event){if(parentElement){var adjustPositionByOffsetSections=['structreferralincoming','structreferraloutgoing','structdemographics','structphysicalexam','structexam','structactions','structcareplandischargesummary','structdischargeinternalnotes','structdischargefinalplan','structinfirmary','structcasemanager','structcareplanencnotes','structmedicalhistory','structhpi','structprocedurespl','structsocialhistory','structgynhistory','structobhistory','structdisposition','structvisionexam','structpreventive','structfollowup','structapptbillingnotes'];if($("#TJellyDetailViewd").length>0){$(popupId).css({'left':parentElement.offset().left})}else{if(adjustPositionByOffsetSections.indexOf(scope.datatabletype.toLowerCase())>-1){$(popupId).css({'left':parentElement.offset().left})}else if(scope.datatabletype==='derm_structprocedures'&&parseInt(scope.encounterId,10)===0){$(popupId).css({'left':parentElement.offset().left})}else{$(popupId).css({'left':parentElement.position().left+20})}}$(popupId).css({'top':parentElement.offset().top})}else{$(popupId).css({'left':event.pageX});$(popupId).css({'top':event.pageY})}};scope.openNumPad=function(field,event){$("#dropboxNotes").addClass("hide-menu-item");scope.refNumValue=field;var oldValue=angular.copy(field);scope.numpadField=oldValue;scope.numpadField.value="";var inputId="#structurednumpad";$(inputId).addClass("hide-menu-item");var parentElement=$("#numpadinput"+oldValue.detailId);scope.adjustPopupPosition(parentElement,inputId,event);$(inputId).removeClass("hide-menu-item")};scope.closeNumPad=function(field){scope.broadcastStructChange();var temp=field.value;if(field.minValue!=""){if(parseFloat(field.minValue)>parseFloat(field.value)){alert("Value is less than the Minimum value.");field.value=temp}}if(field.maxValue!=""){if(parseFloat(field.maxValue)<parseFloat(field.value)){alert("Value is greater than the Maximum value.");field.value=temp}}if(field.value!=="")scope.refNumValue.value=field.value;var inputId="#structurednumpad";$(inputId).addClass("hide-menu-item")};var structNotesAllowClick=true;scope.openPopupNotes=function(field,event){hideSelectPopup();if(!structNotesAllowClick){return false}structNotesAllowClick=false;if(event){event.preventDefault();event.stopPropagation()}var initCustomData={structId:field.detailId,notes:field.notes,label:field.label,module:scope.datatabletype,theme:scope.theme,catId:scope.catId,itemId:scope.itemId,encounterId:scope.encounterId,patientId:patientId};var moduleName;var files;var structCustomUrl;var controller;if(scope.datatabletype==='derm_structprocedures'){moduleName="DermStructKeyword";files=['/mobiledoc/jsp/derm/exec/derm-struct-keyword.js'];structCustomUrl="/mobiledoc/jsp/derm/exec/derm-struct-keyword.jsp";controller='DermStructKeywordController'}else{moduleName="StructKeyword";files=['/mobiledoc/jsp/webemr/js/globalframeworkService.js','/mobiledoc/jsp/webemr/templates/struct-keyword.js','/mobiledoc/jsp/webemr/useruidefault/userdefaultservice.js'];structCustomUrl="/mobiledoc/jsp/webemr/templates/struct-keyword.jsp";controller='StructKeywordController'}$ocLazyLoad.load({name:moduleName,files:files,cache:true}).then(function(){var customStructModalInstance=$modal.open({templateUrl:makeURL(structCustomUrl),controller:controller,windowClass:'app-modal-window '+scope.theme,backdrop:"static",keyboard:false,resolve:{initCustomData:function(){return initCustomData},patientIdentifierData:function(){return scope.patientIdentifierData}}});customStructModalInstance.result.then(function(responseObj){},function(responseObj){structNotesAllowClick=true;if(responseObj.refresh){field.notes=responseObj.notes;scope.broadcastStructChange()}})},function(e){structNotesAllowClick=true;console.log(e)})};scope.cancelPopupNotes=function(){var inputId="#dropboxNotes";$(inputId).addClass("hide-menu-item")};scope.closePopupNotes=function(){scope.notespopupfield.notes=scope.notespopupfield.notes2;var inputId="#dropboxNotes";$(inputId).addClass("hide-menu-item")};scope.copyNote=function(field,option){if(field.notes2){if(field.delimeter){field.notes2=field.notes2+field.delimeter+" "+option}else{field.notes2=field.notes2+", "+option}}else{field.notes2=option}};scope.focusNotes=function(detailId){var fieldId="#notes"+scope.selectedFieldId;setTimeout(function(){var data=$(fieldId).val();if(data){$(fieldId).focus().val('').val(data.trim()+' ')}else{$(fieldId).focus()}},100)};scope.showStructuredForm=function(field){scope.getStructOptions(field);scope.selectedFieldId=field.detailId;scope.isGridVisible=false;scope.isFormVisible=true;scope.focusNotes(field.detailId);try{var element=$('#structuredDataGrid');var api=element.data('jsp');scope.yposition=api.getContentPositionY();scope.xposition=api.getContentPositionX()}catch(err){}scope.openStructuredForm()};scope.showStructuredGrid=function(){if(!validateStructDataFields()){return false}scope.persistStructureData(true);scope.isGridVisible=true;scope.isFormVisible=false;scope.openStructuredGrid();setTimeout(function(){scope.scrollToStructuredRow()},500)};scope.showPreviousField=function(){if(!validateStructDataFields()){return false}var selectedFieldFound=false;for(var keyIndex=scope.structuredEntities.fields.length-1;keyIndex>=0;keyIndex--){if(selectedFieldFound&&scope.structuredEntities.fields[keyIndex].visible){scope.selectedFieldId=scope.structuredEntities.fields[keyIndex].detailId;scope.getStructOptions(scope.structuredEntities.fields[keyIndex]);break}if(scope.structuredEntities.fields[keyIndex].detailId===scope.selectedFieldId){selectedFieldFound=true}if(keyIndex==0){keyIndex=scope.structuredEntities.fields.length}}scope.focusNotes()};scope.showNextField=function(){if(!validateStructDataFields()){return false}var selectedFieldFound=false;for(var keyIndex=0;keyIndex<scope.structuredEntities.fields.length;keyIndex++){if(selectedFieldFound&&scope.structuredEntities.fields[keyIndex].visible){scope.selectedFieldId=scope.structuredEntities.fields[keyIndex].detailId;scope.getStructOptions(scope.structuredEntities.fields[keyIndex]);break}if(scope.structuredEntities.fields[keyIndex].detailId===scope.selectedFieldId){selectedFieldFound=true}if(keyIndex==scope.structuredEntities.fields.length-1){keyIndex=-1}}scope.focusNotes()};scope.showNextItems=function(){for(var nextIndex in scope.structuredataoptions.notescategories){if(scope.structuredataoptions.notescategories[nextIndex].index>scope.structuredataoptions.currentindex){return true}}return false};scope.showPreviousItems=function(){for(var prevIndex in scope.structuredataoptions.notescategories){if(scope.structuredataoptions.notescategories[prevIndex].index<scope.structuredataoptions.currentindex){return true}}return false};scope.navigateToNotes=function(notescategory){if(!validateStructDataFields()){return}if(scope.mandatoryCheck()){scope.structuredataoptions.notescategory=notescategory;if(scope.structuredataoptions.lockObj){if(!isLockMine2(scope.structuredataoptions.lockObj)){scope.customnavigation();return}}scope.passFieldData();var xmlData=createStructureDataXML(scope.structuredEntities.fields,scope.currentlySelectedEye);scope.structuredataoptions.structuredxml=xmlData;var aPromise=postStructureData(xmlData,scope.encounterId,scope.catId,scope.itemId,scope.datatabletype,$http,'',scope.structuredataoptions.selectedWound.id,scope.structuredataoptions.currentlySelectedEye,scope.isSocialHxChanged);aPromise.then(function(object){scope.customnavigation()},function errorCallback(error){alert(error)})}};scope.navigateToNextNotes=function(){if(!validateStructDataFields()){return}if(scope.mandatoryCheck()){if(scope.structuredataoptions.lockObj){if(!isLockMine2(scope.structuredataoptions.lockObj)){scope.customNext();return}}scope.persistStructureData(false);scope.passFieldData();var xmlData=createStructureDataXML(scope.structuredEntities.fields,scope.currentlySelectedEye);scope.structuredataoptions.structuredxml=xmlData;var aPromise=postStructureData(xmlData,scope.encounterId,scope.catId,scope.itemId,scope.datatabletype,$http,'',scope.structuredataoptions.selectedWound.id,scope.structuredataoptions.currentlySelectedEye,scope.isSocialHxChanged);aPromise.then(function(object){scope.customNext()},function errorCallback(error){alert(error)})}};scope.navigateToPreviousNotes=function(){if(!validateStructDataFields()){return}if(scope.mandatoryCheck()){if(scope.structuredataoptions.lockObj){if(!isLockMine2(scope.structuredataoptions.lockObj)){scope.customPrevious();return}}scope.persistStructureData(false);scope.passFieldData();var xmlData=createStructureDataXML(scope.structuredEntities.fields,scope.currentlySelectedEye);scope.structuredataoptions.structuredxml=xmlData;var aPromise=postStructureData(xmlData,scope.encounterId,scope.catId,scope.itemId,scope.datatabletype,$http,'',scope.structuredataoptions.selectedWound.id,scope.structuredataoptions.currentlySelectedEye,scope.isSocialHxChanged);aPromise.then(function(object){scope.customPrevious()},function errorCallback(error){alert(error)})}};scope.openKeyword=function(field){scope.structuredataoptions.fieldRef=field;scope.customKeyword()};scope.getWoundData=function(obj,event){scope.structuredataoptions.donotcloseStructScreen=true;scope.saveStructureData(false,obj)};scope.openMonthYearPicker=function(field,event){scope.popupField=field;scope.mypicker={};var d=new Date;scope.mypicker.year=d.getFullYear()+"";var month=d.getMonth();month=month+1;if(month<10){scope.mypicker.month="0"+month+""}else{scope.mypicker.month=month+""}if(field.value.indexOf("-")>-1){var myArray=field.value.split("-");scope.mypicker.year=myArray[1];scope.mypicker.month=myArray[0]}else if(field.value.indexOf("/")>-1){var myArray=field.value.split("/");scope.mypicker.year=myArray[1];scope.mypicker.month=myArray[0]}var inputId="#mypicker_"+scope.datatabletype;var parentElement=$("#myinput"+field.detailId);scope.adjustPopupPosition(parentElement,inputId,event);$(inputId).removeClass("hide-menu-item")};scope.validateStructMaskDate=function(field){var regexp=/^(?=\d)(?:(?:(?:(?:(?:0?[13578]|1[02])(\/|-|\.)31)\1|(?:(?:0?[1,3-9]|1[0-2])(\/|-|\.)(?:29|30)\2))(?:(?:1[6-9]|[2-9]\d)?\d{2})|(?:0?2(\/|-|\.)29\3(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))|(?:(?:0?[1-9])|(?:1[0-2]))(\/|-|\.)(?:0?[1-9]|1\d|2[0-8])\4(?:(?:1[6-9]|[2-9]\d)?\d{2}))($|\ (?=\d)))?(((0?[1-9]|1[012])(:[0-5]\d){0,2}(\ [AP]M))|([01]\d|2[0-3])(:[0-5]\d){1,2})?$/;try{if(field.value!=""&&!regexp.test(field.value)){field.value=getCurrentDate()}}catch(err){field.value=getCurrentDate()}scope.broadcastStructChange()};var getCurrentDate=function(){var date=new Date;var formattedDate=('0'+date.getDate()).slice(-2);var formattedMonth=('0'+(date.getMonth()+1)).slice(-2);var formattedYear=date.getFullYear().toString().substr(2,2);var dateString=formattedMonth+'/'+formattedDate+'/'+formattedYear;return dateString};scope.closeMonthYearPicker=function(){scope.broadcastStructChange();scope.popupField.value=scope.mypicker.month+"-"+scope.mypicker.year;scope.cancelMonthYearPicker()};scope.cancelMonthYearPicker=function(){var inputId="#mypicker_"+scope.datatabletype;$(inputId).addClass("hide-menu-item")};scope.applyDefaultTemplate=function(type){var defaultValues=getDefaultTemplates();if(type=='all'){$("#structDefaultAll").removeClass("open");for(var keyIndex in scope.structuredEntities.fields){if(scope.structuredEntities.fields[keyIndex].visible){scope.structuredEntities.fields[keyIndex].checked=true}}scope.applyDefaultTemplateValues(defaultValues)}else if(type=='single'){$("#structDefault").removeClass("open");scope.applyDefaultTemplateValues(defaultValues)}hideSelectPopup()};scope.applyDefaultTemplateValues=function(defaultValues){if(!isAnyStructureFieldSelected()){ecwAlert("Please select one Structured Item");return}if(isAnyStructureFieldDocumented()){ecwConfirm("Are you sure you want to overwrite the changes?","Default Template",function(){scope.applyDefaultTemplateValuesHandler(defaultValues)})}else{scope.applyDefaultTemplateValuesHandler(defaultValues)}};scope.applyDefaultTemplateValuesHandler=function(defaultValues){scope.broadcastStructChange();for(var keyIndex in scope.structuredEntities.fields){if(scope.structuredEntities.fields[keyIndex].checked){if(scope.structuredEntities.fields[keyIndex].type==='text'){scope.structuredEntities.fields[keyIndex].templateValue=defaultValues.StTextDefault}else if(scope.structuredEntities.fields[keyIndex].type==='boolean'){scope.structuredEntities.fields[keyIndex].templateValue=defaultValues.BooleanDefault}else if(scope.structuredEntities.fields[keyIndex].type==='select'||scope.structuredEntities.fields[keyIndex].type==='multiselect'){scope.structuredEntities.fields[keyIndex].templateValue=defaultValues.StTextDefault;scope.structuredEntities.fields[keyIndex].templateValueId=defaultValues.StTextDefault;scope.structuredEntities.fields[keyIndex].value=defaultValues.StTextDefault}else if(scope.structuredEntities.fields[keyIndex].type==='number'){scope.structuredEntities.fields[keyIndex].value=defaultValues.NumericDefault}else if(scope.structuredEntities.fields[keyIndex].type==='datePicker'){scope.structuredEntities.fields[keyIndex].value=defaultValues.Date1Default}else if(scope.structuredEntities.fields[keyIndex].type==='monthYearPicker'){scope.structuredEntities.fields[keyIndex].value=defaultValues.Date2Default}else if(scope.structuredEntities.fields[keyIndex].type==='yearPicker'){scope.structuredEntities.fields[keyIndex].templateValue=defaultValues.Date3Default}scope.persistStructuredDataByType(scope.structuredEntities.fields[keyIndex],"template");scope.structuredEntities.fields[keyIndex].checked=false}}scope.$apply()};scope.loadPrevEncStructData=function(encId){var itemId=scope.structuredataoptions.itemId;var url='/mobiledoc/dental/dentalHistoryAnswer/getPrevEncDentalHistory';if(encId>0&&itemId>0){$http.get(url,{params:{encId:encId,itemId:itemId}}).then(function(response){if(response.data&&response.data.responseCode===1){var data=response.data.responseData;for(var structItemIndex in scope.structuredEntities.fields){scope.structuredEntities.fields[structItemIndex].prevEncValue='';scope.structuredEntities.fields[structItemIndex].prevEncValueId='';for(var i=0;i<data.length;i++){if(scope.structuredEntities.fields[structItemIndex].detailId==data[i].detailId){scope.structuredEntities.fields[structItemIndex].prevEncValue=data[i].value;scope.structuredEntities.fields[structItemIndex].prevEncValueId=data[i].valueId;break}}}}else{ecwAlert("Error occur while fetching previous encounter dental history.")}},function(response){var data=response.data,status=response.status,header=response.header,config=response.config;throw"Internal Error occured, Please try after some time"})}};scope.copyPrevEncValue=function(field){if(field.type==='select'||field.type==='multiselect'){scope.getStructOptions(field,scope.getStructOptionsCallBack)}else{scope.getStructOptions(field);scope.getStructOptionsCallBack(field)}};scope.getStructOptionsCallBack=function(field){field.value=field.prevEncValue;field.valueId=field.prevEncValueId;field.templateValue=field.prevEncValue;field.templateValueId=field.prevEncValueId;scope.persistStructuredDataByType(field,"template")};scope.copyPrevEncAllValues=function(){for(var structItemIndex in scope.structuredEntities.fields){scope.copyPrevEncValue(scope.structuredEntities.fields[structItemIndex])}};var saveStructuredDataBrodcast=scope.$on('saveStructureData',function(e,args){scope.saveStructureData()});scope.addItemToValueSource=function(field,detailId,name){if(detailId){var isItemExist=false;for(var optionIndex in field.valueSource){if(field.valueSource[optionIndex].detailId===detailId){isItemExist=true;break}}if(!isItemExist){var valueSrcObj={detailId:detailId,name:name+" "};field.valueSource.push(valueSrcObj)}}};scope.clearWizardNotes=function(field){field.notes=""};scope.showWizardStructKeyword=function(field){scope.openPopupNotes(field,null)};scope.spellChecking=function(field){scope.selectedWizardField=field;var htmlVal=$("#notes"+field.detailId).val();var val=htmlToPlainText(htmlVal);val=val.replace(/\s+/g,' ');scope.spellCheckObj={misSpelledText:val,correctedSpellText:""};scope.spellCheckFlag=true};scope.applySpellChecking=function(){scope.spellCheckFlag=false;if(scope.spellCheckObj.invalidWordAndSuggestionArray.length>0){var spellCheckArray=returnDataArray(scope.spellCheckObj.invalidWordAndSuggestionArray);var correctedHtml=replaceAllWordInHtml(scope.selectedWizardField.notes,spellCheckArray);scope.selectedWizardField.notes=correctedHtml}};scope.$on('$destroy',function(){saveStructuredDataBrodcast();if(effectiveDateTimeTimeout){$timeout.cancel(effectiveDateTimeTimeout)}if(showBooleanTimeout){$timeout.cancel(showBooleanTimeout)}if(showSingleSelectTimeout){$timeout.cancel(showSingleSelectTimeout)}if(activateMultiSelectTimeout){$timeout.cancel(activateMultiSelectTimeout)}removeScopePropertyAndMethod(scope)})}}});var getDefaultTemplates=function(){var defaultValues={StTextDefault:"[...]",BooleanDefault:"Yes/No",NumericDefault:"00",Date1Default:"01/01/1900",Date2Default:"01/1900",Date3Default:"1900"};var objItem={};getItemKeyValuePair("StTextDefault",objItem);if(objItem.isExists&&objItem.keyValue!=''){defaultValues.StTextDefault=objItem.keyValue}objItem={};getItemKeyValuePair("BooleanDefault",objItem);if(objItem.isExists&&objItem.keyValue!=''){defaultValues.BooleanDefault=objItem.keyValue}objItem={};getItemKeyValuePair("NumericDefault",objItem);if(objItem.isExists&&objItem.keyValue!=''){defaultValues.NumericDefault=objItem.keyValue}objItem={};getItemKeyValuePair("Date1Default",objItem);if(objItem.isExists&&objItem.keyValue!=''){defaultValues.Date1Default=objItem.keyValue}objItem={};getItemKeyValuePair("Date2Default",objItem);if(objItem.isExists&&objItem.keyValue!=''){defaultValues.Date2Default=objItem.keyValue}objItem={};getItemKeyValuePair("Date3Default",objItem);if(objItem.isExists&&objItem.keyValue!=''){defaultValues.Date3Default=objItem.keyValue}return defaultValues};var prepareStructuredNotes=function(scope,label,value,notes){if(value!==undefined&&value!==""||notes!==undefined&&notes!==""){if(scope.structuredataoptions.structurednotes){scope.structuredataoptions.structurednotes+=", "+label+" "+value+" "+notes}else{scope.structuredataoptions.structurednotes=label+" "+value+" "+notes}}};var loadStructuredData=function(scope,items,$http,$interval){scope.structuredEntities={name:"Structured Data",fields:prepareFieldData(items,scope)};scope.structuredataoptions.structuredItemsArray=scope.structuredEntities.fields;for(var structItemIndex in scope.structuredEntities.fields){scope.structuredEntities.fields[structItemIndex].prevEncValue='';scope.structuredEntities.fields[structItemIndex].prevEncValueId='';if(scope.structuredEntities.fields[structItemIndex].value!=""&&scope.structuredEntities.fields[structItemIndex].parentId>0){scope.expandedNodeIds.push(scope.structuredEntities.fields[structItemIndex].parentId)}}setTimeout(function(){$("#structuredDataTable").treetable('destroy');$("#structuredDataTable").treetable({expandable:true,onNodeCollapse:function rowCollapsed(){var i=scope.expandedNodeIds.indexOf(this.id);if(i!==-1){scope.expandedNodeIds.splice(i,1)}},onNodeExpand:function rowExpanded(){if(scope.expandedNodeIds.indexOf(this.id)===-1){scope.expandedNodeIds.push(this.id)}}});for(expandedNodeId in scope.expandedNodeIds){try{$("#structuredDataTable").treetable('expandNode',scope.expandedNodeIds[expandedNodeId])}catch(e){}}scope.initTreeTable=false},100);$interval(function(){scope.activateMultiSelect=true},100,50);if(scope.datatabletype==="structdental"||scope.datatabletype==="BH_historyStructureData")scope.loadPrevEncStructData(scope.prevEncId)};var getStructFieldByDetailId=function(scope,detailId){for(var structItemIndex in scope.structuredEntities.fields){if(scope.structuredEntities.fields[structItemIndex].detailId===detailId){return scope.structuredEntities.fields[structItemIndex]}}};var reloadStructureData=function(scope,encounterId,catId,itemId,datatabletype,defaultId,$http,$interval){scope.activateMultiSelect=false;scope.optionsIds=[];scope.initTreeTable=true;for(var structItemIndex in structItems){var structFieldObj=getStructFieldByDetailId(scope,structItems[structItemIndex].Id);if(structFieldObj){structItems[structItemIndex].value=structFieldObj.value;structItems[structItemIndex].valueId=structFieldObj.valueId;structItems[structItemIndex].notes=structFieldObj.notes}}loadStructuredData(scope,structItems,$http,$interval)};var getStructureData=function(scope,encounterId,catId,itemId,datatabletype,defaultId,$http,$interval,pmtPlanId,woundId,dataNotRequired){scope.activateMultiSelect=false;scope.optionsIds=[];scope.initTreeTable=true;var recurrActionHistId=0;if(scope.structuredataoptions.recurrActionHistId){recurrActionHistId=scope.structuredataoptions.recurrActionHistId}var currentlySelectedEye=scope.currentlySelectedEye;var aPromise=fetchStructureData(encounterId,catId,itemId,datatabletype,defaultId,$http,pmtPlanId,scope.structData,woundId,dataNotRequired,recurrActionHistId,currentlySelectedEye,scope);aPromise.then(function(object){var jsonData=xml2json(object);structItems=jsonData.Envelope.Body["return"].item;loadStructuredData(scope,structItems,$http,$interval)},function errorCallback(error){})};var parseInputType=function(item){var inputType="text";if(item.type==="3"){inputType="boolean"}else if(item.type==="2"){inputType="datePicker"}else if(item.type==="5"){inputType="yearPicker"}else if(item.type==="0"){if(item.multiSelect==="1"){inputType="multiselect"}else{inputType="select"}}else if(item.type==="1"){inputType="number"}else if(item.type==="4"){inputType="monthYearPicker"}return inputType};var parseInputTriggerFlag=function(item){if(item.itemtype==="3"){if(item.value.toLowerCase()==="yes"){return"1"}else if(item.value.toLowerCase()==="no"){return"0"}}if(item.itemtype==="0"){return item.valueId}return""};var parseInputTypeTriggerFlag=function(item){if(item.type==="3"){if(item.value.toLowerCase()==="yes"){return"1"}else if(item.value.toLowerCase()==="no"){return"0"}}if(item.type==="0"){return item.valueId}return""};var prepareValueSourceData=function(item,scope){if(item.type==="0"){scope.optionsIds.push(item.Id)}};var firstTimeLoad=true;var initialFieldDataMap={};var prepareFieldData=function(items,scope){fieldsArray=[];if(items!==undefined){if(items.length!==undefined){for(keyIndex in items){if(items[keyIndex].parentId==="0"){prepareStructuredNotes(scope,items[keyIndex].name,items[keyIndex].value,items[keyIndex].notes);fieldsArray.push({"detailId":items[keyIndex].Id,"level":items[keyIndex].nodeLevel,"parentId":items[keyIndex].parentId,"storedParentId":items[keyIndex].parentId,"type":parseInputType(items[keyIndex]),"itemtype":items[keyIndex].type,"name":items[keyIndex].name,"label":items[keyIndex].name,"required":items[keyIndex].mandatory,"value":items[keyIndex].value,"valueId":items[keyIndex].valueId,"valueSource":prepareValueSourceData(items[keyIndex],scope),"notes":items[keyIndex].notes,"defaultValue":items[keyIndex].defaultValue,"defaultValueId":items[keyIndex].defaultValueId,"checked":false,"visible":true,"triggerFlag":items[keyIndex].triggerFlag,"selectedOption":stringToArray(items[keyIndex].valueId,parseInputType(items[keyIndex]),items[keyIndex].value),"multitrigger":items[keyIndex].multitriggerFlag,"minValue":items[keyIndex].minValue,"maxValue":items[keyIndex].maxValue,"community":items[keyIndex].community,"woundid":scope.structuredataoptions.selectedWound.id,"isBehavioralRisk":items[keyIndex].isBehavioralRisk?items[keyIndex].isBehavioralRisk:""});prepareChildFieldData(items[keyIndex],items,fieldsArray,scope)}}}else{if(items.parentId==="0"){prepareStructuredNotes(scope,items.name,items.value,items.notes);fieldsArray.push({"detailId":items.Id,"level":items.nodeLevel,"parentId":items.parentId,"storedParentId":items.parentId,"type":parseInputType(items),"itemtype":items.type,"name":items.name,"label":items.name,"required":items.mandatory,"value":items.value,"valueId":items.valueId,"valueSource":prepareValueSourceData(items,scope),"notes":items.notes,"defaultValue":items.defaultValue,"defaultValueId":items.defaultValueId,"checked":false,"visible":true,"triggerFlag":items.triggerFlag,"selectedOption":stringToArray(items.valueId,parseInputType(items),items.value),"multitrigger":items.multitriggerFlag,"minValue":items.minValue,"maxValue":items.maxValue,"community":items.community,"woundid":scope.structuredataoptions.selectedWound.id,"isBehavioralRisk":items.isBehavioralRisk?items.isBehavioralRisk:""})}}}if(firstTimeLoad){var initialFieldData=angular.copy(fieldsArray);for(var index in initialFieldData){initialFieldDataMap[initialFieldData[index].detailId]=initialFieldData[index]}firstTimeLoad=false}return fieldsArray};var prepareChildFieldData=function(parentItem,childItems,fieldsArray,scope){for(var keyChildIndex=childItems.length-1;keyChildIndex>=0;keyChildIndex--){if(childItems[keyChildIndex].parentId>"0"&&childItems[keyChildIndex].parentId===parentItem.Id){var multitrigger=false;var enableMultiselectTrigger=getItemKeyValue("EnableMultiselectForStruct").toLowerCase()=='yes';if(enableMultiselectTrigger){if(childItems[keyChildIndex].multitriggerFlag&&childItems[keyChildIndex].multitriggerFlag.length>0){var res=childItems[keyChildIndex].multitriggerFlag.split(",");for(var m=0;m<res.length;m++){if(res[m].length>0&&parseInputTypeTriggerFlag(parentItem).indexOf(res[m])>-1){multitrigger=true;break}}}}if(parseInputTypeTriggerFlag(parentItem).indexOf(childItems[keyChildIndex].triggerFlag)>-1||multitrigger){prepareStructuredNotes(scope,childItems[keyChildIndex].name,childItems[keyChildIndex].value,childItems[keyChildIndex].notes);fieldsArray.push({"detailId":childItems[keyChildIndex].Id,"level":childItems[keyChildIndex].nodeLevel,"storedParentId":childItems[keyChildIndex].parentId,"parentId":childItems[keyChildIndex].parentId,"type":parseInputType(childItems[keyChildIndex]),"itemtype":childItems[keyChildIndex].type,"name":childItems[keyChildIndex].name,"label":childItems[keyChildIndex].name,"required":childItems[keyChildIndex].mandatory,"value":childItems[keyChildIndex].value,"valueId":childItems[keyChildIndex].valueId,"valueSource":prepareValueSourceData(childItems[keyChildIndex],scope),"notes":childItems[keyChildIndex].notes,"defaultValue":childItems[keyChildIndex].defaultValue,"defaultValueId":childItems[keyChildIndex].defaultValueId,"checked":false,"visible":true,"triggerFlag":childItems[keyChildIndex].triggerFlag,"selectedOption":stringToArray(childItems[keyChildIndex].valueId,parseInputType(childItems[keyChildIndex]),childItems[keyChildIndex].value),"multitrigger":childItems[keyChildIndex].multitriggerFlag,"minValue":childItems[keyChildIndex].minValue,"maxValue":childItems[keyChildIndex].maxValue,"community":childItems[keyChildIndex].community,"woundid":scope.structuredataoptions.selectedWound.id,"isBehavioralRisk":childItems[keyChildIndex].isBehavioralRisk?childItems[keyChildIndex].isBehavioralRisk:""});prepareChildFieldData(childItems[keyChildIndex],childItems,fieldsArray,scope)}else{fieldsArray.push({"detailId":childItems[keyChildIndex].Id,"level":childItems[keyChildIndex].nodeLevel,"storedParentId":childItems[keyChildIndex].parentId,"parentId":"","type":parseInputType(childItems[keyChildIndex]),"itemtype":childItems[keyChildIndex].type,"name":childItems[keyChildIndex].name,"label":childItems[keyChildIndex].name,"required":childItems[keyChildIndex].mandatory,"value":childItems[keyChildIndex].value,"valueId":childItems[keyChildIndex].valueId,"valueSource":prepareValueSourceData(childItems[keyChildIndex],scope),"notes":childItems[keyChildIndex].notes,"defaultValue":childItems[keyChildIndex].defaultValue,"defaultValueId":childItems[keyChildIndex].defaultValueId,"checked":false,"visible":false,"triggerFlag":childItems[keyChildIndex].triggerFlag,"selectedOption":stringToArray(childItems[keyChildIndex].valueId,parseInputType(childItems[keyChildIndex]),childItems[keyChildIndex].value),"multitrigger":childItems[keyChildIndex].multitriggerFlag,"minValue":childItems[keyChildIndex].minValue,"maxValue":childItems[keyChildIndex].maxValue,"community":childItems[keyChildIndex].community,"woundid":scope.structuredataoptions.selectedWound.id,"isBehavioralRisk":childItems[keyChildIndex].isBehavioralRisk?childItems[keyChildIndex].isBehavioralRisk:""});prepareChildFieldData(childItems[keyChildIndex],childItems,fieldsArray,scope)}}}};var stringToArray=function(valueIds,type,value){var temp=new Array;if(type==='yearPicker'||type==='boolean'){temp.push(value)}else if(type==='multiselect'||type==='select'){if(valueIds){if(valueIds.indexOf(",")>-1){temp=valueIds.split(",")}else{temp.push(valueIds)}}}return temp};var createDefaultStructureDataXML=function(items){var xw=new XMLWriter;startSoapPacket(xw);for(var itemIndex in items){xw.writeStartElement('item');xw.writeAttributeString('xsi:type','xsd:string');addElement(xw,'detailId',items[itemIndex].Id,'xsi:type','xsd:string');addElement(xw,'value',"<![CDATA["+items[itemIndex].defaultValue+"]]>",'xsi:type','xsd:string');addElement(xw,'valueId',items[itemIndex].defaultVlueId,'xsi:type','xsd:string');addElement(xw,'notes',"<![CDATA["+items[itemIndex].notes+"]]>",'xsi:type','xsd:string');xw.writeEndElement()}endSoapPacket(xw);return xw.flush()};function getAttributeLabels(selectedEye){var labels={"valueLabel":"value","notesLabel":"notes"};if(selectedEye){var prefix=selectedEye==='R Eye'?'right':'left';labels.valueLabel=prefix+'EyeObservations';labels.notesLabel=prefix+'EyeNotes'}return labels}var createStructureDataXML=function(fieldsArray,currentlySelectedEye,defaultId){var labels=getAttributeLabels(currentlySelectedEye);var xw=new XMLWriter;startSoapPacket(xw);if(defaultId){addElement(xw,'userDefaultId',defaultId,'xsi:type','xsd:string')}var isVisionExam=labels.valueLabel.indexOf('EyeObservations')>0;for(var keyIndex in fieldsArray){if(isVisionExam||fieldsArray[keyIndex].value!==undefined&&fieldsArray[keyIndex].value!==""||fieldsArray[keyIndex].notes!==undefined&&fieldsArray[keyIndex].notes!==""){xw.writeStartElement('item');xw.writeAttributeString('xsi:type','xsd:string');addElement(xw,'detailId',fieldsArray[keyIndex].detailId,'xsi:type','xsd:string');addElement(xw,labels.valueLabel,"<![CDATA["+fieldsArray[keyIndex].value+"]]>",'xsi:type','xsd:string');if(fieldsArray[keyIndex].notes){addElement(xw,labels.notesLabel,"<![CDATA["+fieldsArray[keyIndex].notes+"]]>",'xsi:type','xsd:string')}else{addElement(xw,labels.notesLabel,"",'xsi:type','xsd:string')}addElement(xw,'valueId',fieldsArray[keyIndex].valueId,'xsi:type','xsd:string');if(defaultId){addElement(xw,'defaultId',defaultId,'xsi:type','xsd:string')}xw.writeEndElement()}}endSoapPacket(xw);return xw.flush()};var postStructureData=function(xmlData,encounterId,catId,itemId,datatabletype,$http,structData,woundid,currentlySelectedEye,isHxChanged){var url='/mobiledoc/jsp/catalog/xml/setStructData.jsp?encId='+encounterId+'&catId='+catId+'&itemId='+itemId+'&table='+datatabletype;if(woundid)url=url+"&woundId="+woundid;if(currentlySelectedEye)url=url+"&selectedEye="+currentlySelectedEye;if(datatabletype==='structsocialhistory'&&!isHxChanged||datatabletype==='structmedicalhistory'&&!isHxChanged)url=url+'&updatedashboardenc=yes';url=makeURL(url);var xsrf=$.param({FormData:xmlData,StructData:structData});var aPromise=$http({headers:{'Content-Type':'application/x-www-form-urlencoded'},dataType:'text',method:'POST',url:url,data:xsrf}).then(function(response){var data=response.data,status=response.status,header=response.header,config=response.config;return data},function(response){var data=response.data,status=response.status,header=response.header,config=response.config;if(status!==499){throw"Internal Error occured, Please try after some time"}else{return response}});return aPromise};function createStructureDataJSON(fieldsArray){var ansData=[];var displayIndex=0;for(keyIndex in fieldsArray){displayIndex++;if(fieldsArray[keyIndex].value!==undefined&&fieldsArray[keyIndex].value!==""||fieldsArray[keyIndex].notes!==undefined&&fieldsArray[keyIndex].notes!==""){var item={detailId:fieldsArray[keyIndex].detailId,value:fieldsArray[keyIndex].value,valueId:fieldsArray[keyIndex].valueId,displayIndex:displayIndex};if(fieldsArray[keyIndex].notes){item.notes=fieldsArray[keyIndex].notes}else{item.notes=""}ansData.push(item)}}return{ansData:ansData}}function postStructureDataInJson(jsonData,encounterId,catId,itemId,datatabletype,$http,itemName,patientId,admissionId,isChartTab,isCopy,effectiveDateTime){var url='/mobiledoc/jsp/catalog/xml/setStructData.jsp?encId='+encounterId+'&catId='+catId+'&itemId='+itemId+'&table='+datatabletype;if(datatabletype=="structInfirmary"){effectiveDateTime=effectiveDateTime?effectiveDateTime:"";url=url+'&itemName='+itemName+'&patientId='+patientId+'&admissionId='+admissionId+'&isChartTab='+isChartTab+'&isCopy='+isCopy+'&effectiveDateTime='+effectiveDateTime}url=makeURL(url);var xsrf=$.param({FormData:JSON.stringify(jsonData)});var aPromise=$http({headers:{'Content-Type':'application/x-www-form-urlencoded'},dataType:'text',method:'POST',url:url,data:xsrf}).then(function(response){var data=response.data,status=response.status,header=response.header,config=response.config;return data},function(response){var data=response.data,status=response.status,header=response.header,config=response.config;throw"Internal Error occured, Please try after some time"});return aPromise}var fetchStructureData=function(encounterId,catId,itemId,datatabletype,defaultId,$http,pmtPlanId,structData,woundId,dataNotRequired,recurrActionHistId,currentlySelectedEye,scope){if(!woundId)woundId=1;var url='/mobiledoc/jsp/catalog/xml/getStructDataDetail.jsp?itemId='+itemId+'&catId='+catId+'&encId='+encounterId+'&dataTable='+datatabletype+'&community=yes&PmtPlanId='+pmtPlanId+'&woundId='+woundId;if(defaultId){url+='&savedDefId='+defaultId}if(dataNotRequired){url+='&data=no'}else{url+='&data=yes'}if(recurrActionHistId){url+='&addId='+recurrActionHistId}if(currentlySelectedEye.length>0){url+='&selectedEye='+currentlySelectedEye}url=makeURL(url);var xsrf=$.param({StructData:structData});var aPromise=$http({headers:{'Content-Type':'application/x-www-form-urlencoded'},dataType:'text',method:'POST',url:url,data:xsrf}).then(function(response){var data=response.data;if(scope!==undefined&&response.isUnicodeReplaced!==undefined){scope.structuredataoptions.isUnicodeReplaced=response.isUnicodeReplaced}return data},function(response){var data=response.data,status=response.status,header=response.header,config=response.config;throw"Internal Error occured, Please try after some time"});return aPromise};var getStructureDataOptions=function(scope,$http){var options="";for(var opIndex=0;opIndex<scope.optionsIds.length;opIndex++){options+=scope.optionsIds[opIndex]+","}if(options!==''){var url='/mobiledoc/jsp/webemr/model/getStructOptions.jsp';var payload=$.param({FormData:JSON.stringify(options)});try{var object=JSON.parse(urlPost(url,payload));for(var fieldIndex in scope.structuredEntities.fields){for(var optionsIndex in object.structoptions){if(scope.structuredEntities.fields[fieldIndex].detailId===optionsIndex){scope.structuredEntities.fields[fieldIndex].valueSource=object.structoptions[optionsIndex]}}}}catch(err){}}for(var fieldIndex in scope.structuredEntities.fields){if(scope.structuredEntities.fields[fieldIndex].type==="yearPicker"){scope.structuredEntities.fields[fieldIndex].valueSource=scope.years}else if(scope.structuredEntities.fields[fieldIndex].type==="boolean"){scope.structuredEntities.fields[fieldIndex].valueSource=scope.booleans;scope.addItemToValueSource(scope.structuredEntities.fields[fieldIndex],scope.structuredEntities.fields[fieldIndex].value,scope.structuredEntities.fields[fieldIndex].value)}else if(scope.structuredEntities.fields[fieldIndex].type==="select"){scope.addItemToValueSource(scope.structuredEntities.fields[fieldIndex],scope.structuredEntities.fields[fieldIndex].valueId,scope.structuredEntities.fields[fieldIndex].value)}else if(scope.structuredEntities.fields[fieldIndex].type==="multiselect"){var valuIdArray=stringToArray(scope.structuredEntities.fields[fieldIndex].valueId,'multiselect');var valueArray=stringToArray(scope.structuredEntities.fields[fieldIndex].value,'multiselect');for(var vIndex in valuIdArray){scope.addItemToValueSource(scope.structuredEntities.fields[fieldIndex],valuIdArray[vIndex],valueArray[vIndex])}}}};var validateStructData=function(fieldArrayFromScreen){if(fieldArrayFromScreen){fieldsArray=fieldArrayFromScreen}for(var keyIndex in fieldsArray){if(fieldsArray[keyIndex].type==="number"){if(!validateNumberRange(fieldsArray[keyIndex])){return false}}if(fieldsArray[keyIndex].visible&&fieldsArray[keyIndex].required==1&&(fieldsArray[keyIndex].value===undefined||fieldsArray[keyIndex].value==="")){ecwAlert("Please enter value for Structured Data '"+escapeHtml(fieldsArray[keyIndex].label)+"'.");return false}}return true};var validateNumberRange=function(field){if(field.minValue!==""){if(parseFloat(field.minValue)>parseFloat(field.value)){ecwAlert("Value is less than the Minimum value for Structured"+" Data '"+escapeHtml(field.label)+"'.");return false}}if(field.maxValue!==""){if(parseFloat(field.maxValue)<parseFloat(field.value)){ecwAlert("Value is greater than the Maximum value for Structured"+" Data '"+escapeHtml(field.label)+"'.");return false}}return true};var getStructNotes=function(fieldArrayFromScreen){var response="";if(fieldArrayFromScreen){fieldsArray=fieldArrayFromScreen}for(var keyIndex in fieldsArray){var label=fieldsArray[keyIndex].label;var value=fieldsArray[keyIndex].value;var notes=fieldsArray[keyIndex].notes;if(value!==""||notes!==""){if(response){response+=", "}response+=label;response+=value!==""?" "+value:"";response+=notes!==""?" "+notes:""}}return response};var getTrimmedArray=function(str){var arr=str.split(",");if(arr&&arr.length>0){for(var s=0;s<arr.length;s++){arr[s]=arr[s].trim()}}return arr};var updateAllStructuredChilds=function(structDetailId,structDataArray,trigger){var structChildArray=[];var multiselect=false;var multiTriggers="";var tempValue="";var mainTrigger="";var found=false;function recurse(structDetailId,structDataArray,topLevel,trigger){for(var fieldIndex in structDataArray){found=false;if(topLevel&&structDetailId===structDataArray[fieldIndex].detailId){if(structDataArray[fieldIndex].type==="multiselect")multiselect=true;mainTrigger=trigger}if(structDetailId===structDataArray[fieldIndex].storedParentId){if(multiselect){if(trigger!==""){var arr=getTrimmedArray(trigger);var temp=structDataArray[fieldIndex].storedParentId;if(structDataArray[fieldIndex].triggerFlag==="1")temp=temp+":"+"Yes";else if(structDataArray[fieldIndex].triggerFlag==="0")temp=temp+":"+"No";var arr1=getTrimmedArray(tempValue);if(structDataArray[fieldIndex].triggerFlag!=="1"&&structDataArray[fieldIndex].triggerFlag!=="0"&&arr.includes(structDataArray[fieldIndex].triggerFlag)||structDataArray[fieldIndex].triggerFlag==="1"&&arr1.includes(temp)||structDataArray[fieldIndex].triggerFlag==="0"&&arr1.includes(temp)){multiTriggers+=structDataArray[fieldIndex].detailId+",";tempValue=tempValue+structDataArray[fieldIndex].detailId+":"+structDataArray[fieldIndex].value+",";found=true}}if(!mainTrigger||mainTrigger.length===0)trigger="";else if(structDataArray[fieldIndex].selectedOption&&found){var j=0;if(trigger.length>0)trigger=trigger+",";for(j=0;j<structDataArray[fieldIndex].selectedOption.length;j++){trigger=trigger+structDataArray[fieldIndex].selectedOption[j]+","}if(structDataArray[fieldIndex].selectedOption.length>0)trigger=trigger.substring(0,trigger.length-1)}}recurse(structDataArray[fieldIndex].detailId,structDataArray,false,trigger);var multitrigger=false;if(structDataArray[fieldIndex].multitrigger&&structDataArray[fieldIndex].multitrigger.length>0){var res=structDataArray[fieldIndex].multitrigger.split(",");var arr=getTrimmedArray(trigger);for(var m=0;m<res.length;m++){if(res[m].length>0&&arr.includes(res[m])){multitrigger=true;break}}}if(!multiselect){var arr=getTrimmedArray(trigger);if(topLevel&&(arr.includes(structDataArray[fieldIndex].triggerFlag)||multitrigger)){structDataArray[fieldIndex].parentId=structDataArray[fieldIndex].storedParentId;structDataArray[fieldIndex].visible=true}else{structDataArray[fieldIndex].parentId="";structDataArray[fieldIndex].visible=false;structDataArray[fieldIndex].value="";structDataArray[fieldIndex].valueId="";structDataArray[fieldIndex].notes="";structDataArray[fieldIndex].selectedOption=[]}}else{var arr=getTrimmedArray(multiTriggers);if(arr.includes(structDataArray[fieldIndex].detailId)||multitrigger){structDataArray[fieldIndex].parentId=structDataArray[fieldIndex].storedParentId;structDataArray[fieldIndex].visible=true}else{structDataArray[fieldIndex].parentId="";structDataArray[fieldIndex].visible=false;structDataArray[fieldIndex].value="";structDataArray[fieldIndex].valueId="";structDataArray[fieldIndex].notes="";structDataArray[fieldIndex].selectedOption=[]}}structChildArray.push(structDataArray[fieldIndex])}}}recurse(structDetailId,structDataArray,true,trigger)};var hideSelectPopup=function(){try{$(".ms-drop").css({'display':'none'})}catch(err){}};