angular.module('prismaAppServiceModule',['prismaAppObservableServiceModule']).service("PrismaAppService",["$http","$q","$filter","PRISMA_CONSTANT",function($http,$q,$filter,PRISMA_CONSTANT){let tabData={};let errMessage="Something went wrong, please try again later.";let isPrismaInstanceOpen=false;let prismaTabFilters={};let recordsTabFilters={};let recordsTabFilterTemplates={};let isApplyRecordTabFilterDefaultTemplate=false;return{isPrismaPopupInstanceOpen:isPrismaPopupOpen,notifyPrismaPopupInstance:setPrismaPopupFlag,getPrismaUserProfileSetting:getPrismaUserProfileSetting,setPrismaUserProfileSetting:setPrismaUserProfileSetting,setPrismaDirtyCheck:setPrismaDirtyCheck,isPrismaDirtyCheck:isPrismaDirtyCheck,insertPrismaAuditLog:insertPrismaAuditLog,getPrismaRecords:getPrismaRecords,getSearchInsight:getSearchInsight,indexPatientPrismaDocuments:indexPatientPrismaDocuments,getSuggestionHistory:getSuggestionHistory,getSuggestions:getSuggestions,getRelatedKeywords:getRelatedKeywords,removeFromHistory:removeFromHistory,getExternalvisitRecordData:getExternalvisitRecordData,isPublishPortal:isPublishPortal,getRecordsToPublish:getRecordsToPublish,getLastPublishDetails:getLastPublishDetails,getGeneratedPDF:getGeneratedPDF,getPublishedDocXod:getPublishedDocXod,publishToPortal:publishToPortal,exportRecordsPdf:exportRecordsPdf,cleanupPublishedFiles:cleanupPublishedFiles,getRecordByDocId:getRecordByDocId,getAllSource:getAllSource,getCategories:getCategories,getToolList:getToolList,getMenuItems:getMenuItems,getTabData:getTabData,setTabData:setTabData,getIndexStatus:getIndexStatus,setIndexStatus:setIndexStatus,getFileNameForPDFViewer:getFileNameForPDFViewer,getSelectedPrismaRecordId:getSelectedPrismaRecordId,setSelectedPrismaRecordId:setSelectedPrismaRecordId,getAllRecords:getAllRecords,setAllRecords:setAllRecords,getSearchWord:getSearchWord,isBundleSearch:isBundleSearch,setBundleSearch:setBundleSearch,setBundleName:setBundleName,getBundleName:getBundleName,getBundleId:getBundleId,setBundleId:setBundleId,getBundleKeywordsMap:getBundleKeywordsMap,setBundleKeywordsMap:setBundleKeywordsMap,setSearchedWord:setSearchedWord,getSearchType:getSearchType,setSearchedType:setSearchedType,importDocuments:importDocuments,getHealowHubUrl:getHealowHubUrl,getProfileData:getProfileData,setProfileData:setProfileData,setPatientStatusActive:setPatientStatusActive,getDocumentMetadataPostIndexing:getDocumentMetadataPostIndexing,getConnectedUsers:getConnectedUsers,setCurrentTabName:setCurrentTabName,getRightViewerTypes:getRightViewerTypes,setPrismaDisclaimerDate:setPrismaDisclaimerDate,isAllRecordExpanded:isAllRecordExpanded,setCollapsed:setCollapsed,getPrismaFilterStatus:getPrismaFilterStatus,setPrismaFilterStatus:setPrismaFilterStatus,getRecordFilterStatus:getRecordFilterStatus,setRecordFilterStatus:setRecordFilterStatus,showTooltip:showTooltip,hideTooltip:hideTooltip,reset:reset,getPrismaEnableCheckPromise:getPrismaEnableCheckPromise,getPrismaTerms:getPrismaTerms,getServerVersion:getServerVersion,setUnicodeChar:setUnicodeChar,getUnicodeChar:getUnicodeChar,checkPatientAvailability:checkPatientAvailability,isADTModule:isADTModule,setADTModule:setADTModule,setPopupModelMessage:setPopupModelMessage,getPopupModelMessage:getPopupModelMessage,setRecordsWidth:setRecordsWidth,getRecordsWidth:getRecordsWidth,getPrismaWidth:getPrismaWidth,setPrismaWidth:setPrismaWidth,setPopupModelMessage:setPopupModelMessage,getPopupModelMessage:getPopupModelMessage,getPossiblePSACEnc:getPossiblePSACEnc,setPossiblePSACEnc:setPossiblePSACEnc,setBreakGlassReasonNo:setBreakGlassReasonNo,getBreakGlassReasonNo:getBreakGlassReasonNo,setPrismaPSACSetting:setPrismaPSACSetting,getPrismaPSACSetting:getPrismaPSACSetting,getPrismaFilterTabData:getPrismaFilterTabData,getPrismaTabFilters:getPrismaTabFilters,setPrismaTabFilters:setPrismaTabFilters,getRecordsTabFilters:getRecordsTabFilters,setRecordsTabFilters:setRecordsTabFilters,setRecordsTabFilterTemplates:setRecordsTabFilterTemplates,getRecordsTabFilterTemplates:getRecordsTabFilterTemplates,getApplyRecordTabFilterDefaultTemplate:getApplyRecordTabFilterDefaultTemplate,setApplyRecordTabFilterDefaultTemplate:setApplyRecordTabFilterDefaultTemplate,getPrismaContext:getPrismaContext,setPrismaContext:setPrismaContext,getCountForImportData:getCountForImportData,setSetCountForImportData:setSetCountForImportData,getCallingFrom:getCallingFrom,setCallingFrom:setCallingFrom,getErrorWord:getErrorWord,setErrorWord:setErrorWord,isDataImportable:isDataImportable,setDataImportable:setDataImportable,retrieveFHIRDoc:retrieveFHIRDoc,setPaidModelEnabled:setPaidModelEnabled,updateViewedToasterDate:updateViewedToasterDate,setShowSearchPage:setShowSearchPage,getShowSearchPage:getShowSearchPage,showExternalFilterSelected:null,adjustListOfRecordsHeight:adjustListOfRecordsHeight,adjustCIHeight:adjustCIHeight,adjustSummaryDetailsHeight:adjustSummaryDetailsHeight,changeRecordHgt:changeRecordHgt,isFromEnc:null,subTabName:null,isNewMIFetched:isNewMIFetched,assignColorToVisitType:assignColorToVisitType,saveFilterTemplate:saveFilterTemplate,deleteFilterTemplate:deleteFilterTemplate,updateTemplateDefault:updateTemplateDefault,getTemplatesForUser:getTemplatesForUser,getDependencyFiles:getDependencyFiles,summarize:summarize,summarizeFeedback:summarizeFeedback,removeStyleAndScriptTags:removeStyleAndScriptTags,showAIErrorMessage:showAIErrorMessage,hasAISummarizeRecordAccess:hasAISummarizeRecordAccess,isSummarizeFeatureEnabled:isSummarizeFeatureEnabled,getPtDocFileNameAndPath:getPtDocFileNameAndPath,showPrismaUnusableError:showPrismaUnusableError,isContext:isContext};function showAIErrorMessage(headerText,message){showAlertMessage("<div class='text-left mt-24'><i class='icon icon-ai-primary mr5'></i>&nbsp;<b>"+(!headerText?"Error":headerText)+"</b><br/></br>"+(!message?errMessage:message)+" </div>",'','ErrorMsg','','','400px;','ok','','showAlert','','','','',false)}function hasAISummarizeRecordAccess(){return hasSecurityPermission("AllowHighlights")}function hasSecurityPermission(permissionKey){var permission=false;$.ajax({type:"POST",url:"/mobiledoc/jsp/catalog/xml/security/getPermission.jsp","async":false,cache:false,data:{permission:permissionKey},success:function(response){permission=ehxDataTrimString(response);if(permission==true||permission=="true"){permission=true}else{permission=false}return false}});return permission}function isSummarizeFeatureEnabled(titleId,recordId,recordType,context){var isSummarizeFeatureEnabled=false;$.ajax({type:"POST",url:"/mobiledoc/prisma/summarization/isFeatureEnabled","async":false,cache:false,data:{titleId:titleId,recordId:recordId,recordType:recordType,context:context},success:function(response){isSummarizeFeatureEnabled=ehxDataTrimString(response);if(isSummarizeFeatureEnabled==true||isSummarizeFeatureEnabled=="true"){isSummarizeFeatureEnabled=true}else{isSummarizeFeatureEnabled=false}}});return isSummarizeFeatureEnabled}function summarize(patientId,recordId,recordType,titleId,refreshClicked){return $http({method:"POST",headers:{'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8'},url:'/mobiledoc/prisma/summarization/summarize',data:$.param({patientId:patientId,recordId:recordId,recordType:recordType,titleId:titleId,refreshClicked:refreshClicked})})}function summarizeFeedback(patientId,cachedResponseId,userId,feedback){return $http({method:"POST",headers:{'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8'},url:'/mobiledoc/prisma/summarization/summarizationFeedback',data:$.param({patientId:patientId,cachedResponseId:cachedResponseId,userId:userId,feedback:feedback})})}function setSetCountForImportData(countForProbList,countForAllergies,countForMedications,countForImmunization){this.countForProbList=countForProbList;this.countForAllergies=countForAllergies;this.countForMedications=countForMedications;this.countForImmunization=countForImmunization}function getCountForImportData(){return{countForProbList:this.countForProbList,countForAllergies:this.countForAllergies,countForMedications:this.countForMedications,countForImmunization:this.countForImmunization}}function setShowSearchPage(showSearchPage){this.showSearchPage=showSearchPage}function getShowSearchPage(){return this.showSearchPage}function setPrismaContext(context){this.context=context}function getPrismaContext(){return this.context}function getPrismaTabFilters(){return prismaTabFilters}function setPrismaTabFilters(prismaTabFiltersObj){prismaTabFilters=prismaTabFiltersObj}function getRecordsTabFilters(){return recordsTabFilters}function setRecordsTabFilters(recordsTabFiltersObj){recordsTabFilters=recordsTabFiltersObj}function setRecordsTabFilterTemplates(recordsTabFilterTemplatesObj){recordsTabFilterTemplates=recordsTabFilterTemplatesObj}function getRecordsTabFilterTemplates(){return recordsTabFilterTemplates}function setApplyRecordTabFilterDefaultTemplate(applyRecordTabFilterDefaultTemplate){isApplyRecordTabFilterDefaultTemplate=applyRecordTabFilterDefaultTemplate}function getApplyRecordTabFilterDefaultTemplate(){return isApplyRecordTabFilterDefaultTemplate}function setRecordsWidth(width){this.recordsWidth=width}function getRecordsWidth(){return this.recordsWidth}function setPrismaWidth(width){this.recordsWidth=width}function getPrismaWidth(){return this.recordsWidth}function setPopupModelMessage(message){this.message=message}function getPopupModelMessage(){return this.message}function getPossiblePSACEnc(){return this.possiblePSACEncs}function setPossiblePSACEnc(possiblePSACEncs){this.possiblePSACEncs=possiblePSACEncs}function setBreakGlassReasonNo(breakGlassReasonNo){this.breakGlassReasonNo=breakGlassReasonNo}function getBreakGlassReasonNo(){return this.breakGlassReasonNo}function setPrismaPSACSetting(prismaPSACSetting){this.prismaPSACSetting=prismaPSACSetting}function getPrismaPSACSetting(){return this.prismaPSACSetting}function isADTModule(){return isADTModule}function setADTModule(flag){if(flag){isADTModule=true;this.showExternalFilterSelected=true}else{isADTModule=false}}function isPrismaPopupOpen(){return isPrismaInstanceOpen}function setPrismaPopupFlag(flag){isPrismaInstanceOpen=flag?true:false}function showTooltip(recordArray,e){var tile=angular.element(e.target),indexToolTip=tile.attr("index"),tootTipEl=angular.element(".prismaview .facilityFilter-tooltip");tootTipEl.find(".no-popup-data").hide();tootTipEl.find(".location-exist").show();tootTipEl.find(".service-date-exist").show();if(recordArray[indexToolTip]['sourceAddress']&&!isEmptyOrNull(recordArray[indexToolTip]['sourceAddress'].trim())){tootTipEl.find(".location-text").text(recordArray[indexToolTip].sourceAddress)}else{tootTipEl.find(".location-text").text("N/A")}if(recordArray[indexToolTip]['lastVisited']&&!isEmptyOrNull(recordArray[indexToolTip]['lastVisited'].trim())){tootTipEl.find(".calendar-text").text('Last Visit: '+recordArray[indexToolTip].lastVisited)}else{tootTipEl.find(".calendar-text").text("N/A")}if(indexToolTip!=="0"){tootTipEl.show().animate({},100,function(){angular.element(this).position({of:tile,my:'left top+10',at:'left bottom',collision:"flipfit",within:".prismaview"}).animate({"opacity":1},100)})}return indexToolTip}function hideTooltip(){var tootTipEl=angular.element(".prismaview .facilityFilter-tooltip");tootTipEl.hide();return tootTipEl}function getAllSource(){return[{'id':0,'value':'All Sources','name':'All Sources'},{'id':1,'value':'External Records','name':'External Records'},{'id':2,'value':'Internal Records','name':'Internal Records'}]}function getCategories(){return[{id:0,name:'All'},{id:1,name:'Records'}]}function getToolList(){return[{'id':PRISMA_CONSTANT.SEARCH_TYPES.ALL,'value':'All Results','name':'All Results'},{'id':PRISMA_CONSTANT.SEARCH_TYPES.VERBATIM,'value':'Verbatim','name':'Verbatim'},{'id':PRISMA_CONSTANT.SEARCH_TYPES.SECTION,'value':'Section','name':'Section'}]}function getMenuItems(defaultLoadCI){let bActiveCI=defaultLoadCI;let bActiveRecords=!defaultLoadCI;return[{id:1,heading:'PRISMA',route:PRISMA_CONSTANT.TAB.PRISMA,active:false},{id:2,heading:'Clinical Insights',route:PRISMA_CONSTANT.TAB.CLINICALINSIGHTS,active:bActiveCI},{id:3,heading:'Records',route:PRISMA_CONSTANT.TAB.RECORDS,active:bActiveRecords},{id:4,heading:'Member Insights',route:PRISMA_CONSTANT.TAB.MEMBERINSIGHTS,active:false},{id:5,heading:'Healow Hub',route:PRISMA_CONSTANT.TAB.HEALOWHUB,active:false}]}function getRightViewerTypes(){return{"BLANK_VIEWER":0,"HTML_VIEWER":1,"PDF_VIEWER":2,"FILE_DOWNLOAD_VIEWER":4,"UNKNOWN_FILE_VIEWER":5,"ERROR_VIEWER":6}}function getTabData(){return this.tabData}function setTabData(key){if(undefined===tabData[""+key]){tabData[""+key]=getLatestUTCDateTime();this.tabData=tabData}}function setIndexStatus(status){this.status=status}function getLatestUTCDateTime(){return moment(new Date).utc().format('YYYY-MM-DD HH:mm:ss')}function getIndexStatus(){return this.status}function getSelectedPrismaRecordId(){return this.selectedPrismaRecordId}function setSelectedPrismaRecordId(selectedPrismaRecordId){this.selectedPrismaRecordId=selectedPrismaRecordId}function setAllRecords(records){this.records=records}function getAllRecords(){return this.records}function setSearchedWord(word){this.word=word}function getSearchWord(){return this.word}function isBundleSearch(){return this.bundleSearch}function setBundleSearch(bundleSearch){this.bundleSearch=bundleSearch}function setBundleName(bundleName){this.bundleName=bundleName}function getBundleName(){return this.bundleName}function getBundleId(){return this.bundleId}function setBundleId(bundleId){this.bundleId=bundleId}function getBundleKeywordsMap(){return this.bundleKeywordsMap}function setBundleKeywordsMap(bundleKeywordsMap){this.bundleKeywordsMap=bundleKeywordsMap}function setSearchedType(searchType){this.searchType=searchType}function getSearchType(){return this.searchType}function getProfileData(){return this.profileData}function setProfileData(data){this.profileData=data}function httpPost(url,data){return $http({method:"post",headers:{'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8'},url:makeURL(url),data:$.param(data)})}function httpPostRequestBody(url,data){return $http({method:"POST",url:makeURL(url),data:data})}function handleSuccessWithTrimResponseData(response){let res=$.trim(response);if(res){return $q.resolve(res)}}function handleSuccessWithResponseData(response){let res=response.data;if(res){return $q.resolve(res)}}function handleGetRecordByDocIdSuccess(response){if(response&&response.data&&response.data.status==='success'){return $q.resolve(response.data.result)}else{return $q.reject(errMessage)}}function handleInsertPrismaAuditLogResponseError(response){if(!angular.isObject(response.data)||!response.data.message){return $q.defer().reject("Error occurred while logging audit logs for Prisma.")}return $q.defer().reject(response.data.message)}function handleIndexPatientPrismaDocumentsError(response){if(!angular.isObject(response.data)||!response.data.message){return $q.defer().reject("Error occurred while indexing patient records.")}return $q.defer().reject(response.data.message)}function handleGetExternalvisitError(response){if(!angular.isObject(response.data)||!response.data.message){return $q.defer().reject("Error occurred while fetching records.")}return $q.defer().reject(response.data.message)}function handleCommonError(response){if(!angular.isObject(response.data)||!response.data.message){return $q.defer().reject(errMessage)}return $q.defer().reject(response.data.message)}function getPrismaUserProfileSetting(patientId){let data={uid:global.TrUserId,patientId:patientId};let request=httpPost('/mobiledoc/prisma/onload/init',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function setPrismaUserProfileSetting(userProfileData,isPrismaModalClosed){let data={uid:global.TrUserId,userProfileData:userProfileData,isPrismaModalClosed:isPrismaModalClosed};let request=httpPostRequestBody('/mobiledoc/prisma/onload/setPrismaUserProfileSetting',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function saveFilterTemplate(templateName,visitDateFilterName,titleId,recordCategoryId){let data={templateName:templateName,visitDateFilterName:visitDateFilterName,titleId:titleId,recordCategoryId:recordCategoryId};let request=httpPostRequestBody('/mobiledoc/prisma/template/saveFilterTemplate',JSON.stringify(data));return request.then(handleSuccessWithResponseData,handleCommonError)}function deleteFilterTemplate(templateId){let data={templateId:templateId};let request=httpPost('/mobiledoc/prisma/template/deleteFilterTemplate',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function updateTemplateDefault(defaultTId,defaultTemplate){let data={defaultTId:defaultTId,defaultTemplate:defaultTemplate};let request=httpPost('/mobiledoc/prisma/template/updateTemplateDefault',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function getTemplatesForUser(){let data={};let request=httpPost('/mobiledoc/prisma/template/getTemplatesForUser',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function setPrismaDirtyCheck(prismaDirtyCheck){this.prismaDirtyCheck=prismaDirtyCheck}function isPrismaDirtyCheck(){return this.prismaDirtyCheck}function insertPrismaAuditLog(patientId,userId,tab){let data={'patientId':patientId,'userId':userId,'tabData':JSON.stringify(tab)};let request=httpPost('/mobiledoc/prisma/index/insertPrismaAuditLogForTab',data);return request.then(handleSuccessWithResponseData,handleInsertPrismaAuditLogResponseError)}function indexPatientPrismaDocuments(patientId,isRequestForReIndex,prismaRecordTypeIds,breakGlassReasonNo){let request=httpPost('/mobiledoc/prisma/index/indexPatientDocuments',{patientId:patientId,isRequestForReIndex:isRequestForReIndex,prismaRecordTypeIds:prismaRecordTypeIds,breakGlassReasonNo:breakGlassReasonNo});return request.then(handleSuccessWithResponseData,handleCommonError)}function isNewMIFetched(patientId){let request=httpPost('/mobiledoc/jsp/healowInsights/MemberInsightController.jsp',{patientId:patientId,action:'isNewMIFetched'});return request.then(handleSuccessWithResponseData,handleCommonError)}function setPatientStatusActive(patientId){let request=httpPost('/mobiledoc/prisma/accesslog/setPatientStatusActive',{patientId:patientId});return request.then(handleSuccessWithTrimResponseData,handleIndexPatientPrismaDocumentsError)}function getSuggestionHistory(payload){let request=httpPost('/mobiledoc/prisma/suggestion/getSuggestionHistory',payload);return request.then(handleSuccessWithResponseData,handleCommonError)}function getRelatedKeywords(searchString){let request=httpPost('/mobiledoc/prisma/search/getRelatedKeywords',{searchString:searchString});return request.then(handleSuccessWithResponseData,handleCommonError)}function getSuggestions(patientId,searchString,searchType){let data={patientId:patientId,searchString:searchString,searchType:searchType,loggedUserId:global.TrUserId};let request=httpPost('/mobiledoc/prisma/suggestion/getSuggestions',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function getPrismaRecords(requestParam){requestParam.prismaSessionId=this.profileData.prismaSessionId;let request=httpPost('/mobiledoc/prisma/search/getPrismaRecords',requestParam);return request.then(handleSuccessWithResponseData,handleGetExternalvisitError)}function getSearchInsight(requestParam){requestParam.prismaSessionId=this.profileData.prismaSessionId;let request=httpPost('/mobiledoc/prisma/search/getSearchInsight',requestParam);return request.then(handleSuccessWithResponseData,handleGetExternalvisitError)}function isPublishPortal(patientId){let request=httpPost('/mobiledoc/prisma/export/isPublishPortal',{patientId:patientId});return request.then(handleSuccessWithResponseData,handleIndexPatientPrismaDocumentsError)}function getLastPublishDetails(patientId){let request=httpPost('/mobiledoc/prisma/export/pastPublishDetails',{patientId:patientId});return request.then(handleSuccessWithResponseData,handleCommonError)}function getRecordsToPublish(patientId,noOfMonth){let data={noOfMonth:noOfMonth,patientId:patientId};let request=httpPost('/mobiledoc/prisma/export/getRecordsToPublish',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function getGeneratedPDF(patientId,selectedRecords,timeStamp){let data={patientId:parseInt(patientId,10),selectedRecords:selectedRecords,timeStamp:timeStamp,loggedUserId:parseInt(global.TrUserId,10)};let request=httpPostRequestBody('/mobiledoc/prisma/export/getGeneratedPDF',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function getPublishedDocXod(downloadFileName,downloadFilePath,uploadFileName,fileType){let data={downloadFileName:downloadFileName,downloadFilePath:downloadFilePath,uploadFileName:uploadFileName,fileType:fileType};let request=httpPost('/mobiledoc/jsp/webemr/webEditor/downloadFtpFileToLocal.jsp',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function publishToPortal(patientId,noOfMonths,timeStamp,selectedRecords){let data={patientId:parseInt(patientId,10),selectedRecords:selectedRecords,noOfMonth:parseInt(noOfMonths,10),timeStamp:timeStamp,loggedUserId:parseInt(global.TrUserId,10)};let request=httpPostRequestBody('/mobiledoc/prisma/export/publishRecordsToPortal',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function exportRecordsPdf(patientId,noOfMonth){let data={noOfMonth:noOfMonth,patientId:patientId};let request=httpPost('/mobiledoc/prisma/export/publishRecordsToPortal',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function cleanupPublishedFiles(timeStamp){let request=httpPost('/mobiledoc/prisma/export/cleanupPublishFiles',{timeStamp:timeStamp});return request.then(handleSuccessWithResponseData,handleCommonError)}function getExternalvisitRecordData(data){let dataRecord={summaryDetail:{}};dataRecord.summaryDetailExpand=false;dataRecord.summaryDetail.state=false;dataRecord.searchResultLoader=false;dataRecord.isAllCollapsed=true;dataRecord.externalVisits=[];dataRecord.recordCount=0;if(data){if(data.hasOwnProperty('totalFilteredCount')){dataRecord.recordCount=data.totalFilteredCount}if(data.hasOwnProperty('arrExtVisit')){formatExternalVisitData(data);if(this.tabName==="prismatab"){for(let i=0;i<data.arrExtVisit.length;i++){let notes=data.arrExtVisit[i].notes;if(notes){let leftSection={};data.arrExtVisit[i].sectionOrder=JSON.parse(data.arrExtVisit[i].sectionOrder);for(let j=0;j<data.arrExtVisit[i].sectionOrder.length;j++){if(notes.hasOwnProperty(data.arrExtVisit[i].sectionOrder[j])){var matchedResultArr=notes[data.arrExtVisit[i].sectionOrder[j]];leftSection[data.arrExtVisit[i].sectionOrder[j]]=matchedResultArr}}data.arrExtVisit[i].leftSection=leftSection}}}dataRecord.externalVisits=[data.arrExtVisit]}if(data.hasOwnProperty('highlightedColumn')){dataRecord.highlightedColumn=data.highlightedColumn}if(data.hasOwnProperty('searchJson')){dataRecord.searchJson=data.searchJson}}return dataRecord}function formatExternalVisitData(data){angular.forEach(data.arrExtVisit,function(details){details["serviceIcon"]=details.recordCategory===PRISMA_CONSTANT.RECORD_CATEGORY.EXTERNAL?'icon-service':'icon-internal-doc';details["documentType"]=details.recordCategory===PRISMA_CONSTANT.RECORD_CATEGORY.EXTERNAL?'External Record':'Internal Record';if(details["recordType"]===PRISMA_CONSTANT.RECORD_TYPE.PATIENT_DOCUMENT){details["tabtitle"]='Scan Date ';details['dateTitle']='Scan Date'}else if(details.isPatientCentric){details["tabtitle"]='Creation Date ';details['dateTitle']='Creation Date'}else{details["tabtitle"]='Service Date ';details['dateTitle']='Service Date'}details["tabtitle"]+=details.serviceDate+(!$.trim(details.title)?'':': '+$.trim(details.title));details["tabHeaderTitle"]=details.documentType+": "+details.tabtitle+(!$.trim(details.source)?'':': '+$.trim(details.source));details.isCollapsed=true;if(details['Providers']&&details['Providers'].length>0){let providerNames=[];let providerSpeciality=[];angular.forEach(details['Providers'],function(provider){providerNames.push(provider.ProviderName);providerSpeciality.push(provider.providerSpeciality)});details['providerNames']=providerNames.join(', ');details['providerSpeciality']=providerSpeciality.join(', ')}else{details['providerSpeciality']='';details['providerNames']=''}details.year=details.serviceDate?details.serviceDate.substring(6,10):'';details.colorClass=assignColorToVisitType(details.titleId);let dataForCollapsed=false;switch(true){case details.Providers&&details.Providers.length>0:dataForCollapsed=true;break;case details.recordType===1&&details.admissionDate&&!details.isPatientCentric:dataForCollapsed=true;break;case details.recordType===1&&details.dischargeDate&&!details.isPatientCentric:dataForCollapsed=true;break;case details.recordType===2&&details.reasonForAppt:dataForCollapsed=true;break;case details.recordType===6&&details.documentName!=null:dataForCollapsed=true;break;case details.principalDiagnosis&&!details.isPatientCentric:dataForCollapsed=true;break}details['dataForCollapsed']=dataForCollapsed})}function assignColorToVisitType(typeId){let colorType='';if(!typeId)return;switch(typeId){case 1:colorType="external-pn";break;case 2:colorType="discharge-summary";break;case 3:colorType="patient-summary";break;case 4:colorType="unstructured";break;case 5:case 6:case 7:case 8:case 9:case 12:colorType="internal-pn";break;case 10:colorType="results";break;case 11:colorType="oasis";break;case 12:colorType="unstructured";break;default:colorType="default"}return colorType}function removeFromHistory(id){let request=httpPost('/mobiledoc/prisma/suggestion/removeSuggestionHistory',{suggestionId:id});return request.then(handleSuccessWithResponseData,handleCommonError)}function getRecordByDocId(prismaRecordId,searchString,bundleSearchString,context,searchTypeId){let data={prismaRecordId:prismaRecordId,searchString:searchString,bundleSearchString:bundleSearchString,context:context,searchTypeId:searchTypeId};let request=httpPost('/mobiledoc/prisma/index/getRecordByPrismaRecordId',data);return request.then(handleGetRecordByDocIdSuccess,handleCommonError)}function getFileNameForPDFViewer(prismaRecordId,context){let request=httpPost('/mobiledoc/prisma/document/getFileNameForPDFViewer',{prismaRecordId:prismaRecordId,context:context});return request.then(handleSuccessWithResponseData,handleErrorForGetFileNameForPDFViewer)}function handleErrorForGetFileNameForPDFViewer(response){if(!angular.isObject(response.data)||!response.data.message){return $q.reject(errMessage)}return $q.reject(response.data.message)}function getHealowHubUrl(patientId,userId,encId){let data={patientId:patientId,loggedUserId:userId,encId:encId};let request=httpPost('/mobiledoc/prisma/healowHub/getHealowHubUrl',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function importDocuments(recordId,patientId,recordTitle,section,recordType){let data={docid:recordId,patientId:patientId,docTitle:recordTitle,section:section,recordType:recordType};let request=httpPost('/mobiledoc/prisma/document/importCCDDocument',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function getDocumentMetadataPostIndexing(patientId){let request=httpPost('/mobiledoc/prisma/index/getDocumentMetadataPostIndexing',{patientId:patientId});return request.then(handleSuccessWithResponseData,handleCommonError)}function getConnectedUsers(patientId){let request=httpPost('/mobiledoc/prisma/index/getConnectedUsers',{TrUserId:global.TrUserId,patientId:patientId});return request.then(handleSuccessWithResponseData,handleCommonError)}function setCurrentTabName(tabName){this.tabName=tabName}function setPrismaDisclaimerDate(){let data={uid:global.TrUserId};let request=httpPost('/mobiledoc/prisma/onload/doNotShowPrismaDisclaimer',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function setCollapsed(isCollapsed){this.isCollapsed=isCollapsed}function isAllRecordExpanded(){return this.isCollapsed}function getPrismaFilterStatus(){return this.prismaFilterStatus}function setPrismaFilterStatus(prismaFilterStatus){this.prismaFilterStatus=prismaFilterStatus}function setRecordFilterStatus(recordFilterStatus){this.recordFilterStatus=recordFilterStatus}function getRecordFilterStatus(){return this.recordFilterStatus}function reset(){this.tabName=null;this.status=null;this.selectedPrismaRecordId=null;this.records=null;this.word=null;this.bundleSearch=null;this.bundleKeywordsMap=null;this.searchType=null;this.profileData=null;this.isCollapsed=null;this.prismaFilterStatus=null;this.recordFilterStatus=null;this.tabData={};tabData={};this.unicodeChar=null;this.patientId=null;this.userId=null;this.encounterId=null;this.isFromExe=null;this.showSearchPage=false;this.isFromEnc=null;this.module=null;this.isClassicTimeline=null;this.subTabName=null}function getPrismaEnableCheckPromise(patientId,isFromLabs){let request=httpPost('/mobiledoc/prisma/validation/prismaEnableCheck',{patientId:patientId,isFromLabs:isFromLabs});return request.then(handleSuccessWithResponseData,handleCommonError)}function getPrismaTerms(info,version,apuId){let request=httpPost('/mobiledoc/jsp/empi/ActivateEMessenger/getTermsAndConditions.jsp',{info:info,version:version,apuId:apuId});return request.then(handleSuccessWithResponseData,handleCommonError)}function getServerVersion(){let request=httpPost('/mobiledoc/jsp/catalog/xml/CheckServerVersion.jsp',{});return request.then(handleSuccessWithResponseData,handleCommonError)}function setUnicodeChar(unicodeChar){this.unicodeChar=unicodeChar}function getUnicodeChar(){return this.unicodeChar}function getDependencyFiles(module){let filesToLoad=['/mobiledoc/jsp/webemr/toppanel/prisma/css/prisma-style.css','/mobiledoc/jsp/webemr/toppanel/prisma/css/prisma-style-internal.css','/mobiledoc/jsp/webemr/progressnotes/physiciansdashboard/EncDetailsService.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/vendor/angular-filter.js','/mobiledoc/jsp/webemr/toppanel/prisma/css/prisma-timeline.css','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-disclaimer-controller.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-modal-controller.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-records-tab-controller.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/common-directive.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-search-controller.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-tab-controller.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-healow-hub-controller.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-overview-service.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-overview-controller.js','/mobiledoc/jsp/resources/jslib/angular-ui-bootstrap/dist/ui-bootstrap-tpls.js','/mobiledoc/jsp/webemr/ccm/userfacing/dashboard/enrollmentqueue/js/ccmPcmEnrollmentQueueService.js','/mobiledoc/jsp/webemr/phm/actionHub/js/actionHub-tpl.js','/mobiledoc/jsp/webemr/phm/actionHub/js/actionHubService.js'];if(module==='ci-si'){filesToLoad.push('/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-cisi-utils-service.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/lab-tile-service.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/labsTile.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/cumulativeLabsTile.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/proceduresTile.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/serviceTypeTile.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/medsTile.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/diagnosisTile.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/vitalsTile.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/referralsTile.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/duplicateMedsPopup.js')}filesToLoad.push('/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-clinical-insight-service.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-clinical-insight-controller.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/vendor/scroll/perfect-scrollbar.min.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-access-logs-modal-controller.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-access-logs-modal-service.js','/mobiledoc/jsp/webemr/toppanel/prisma/js/prisma-terms-controller.js','/mobiledoc/jsp/webemr/toppanel/prisma/css/perfect-scrollbar.min.css','/mobiledoc/jsp/interop/template/refresh-icon/refresh-icon-tpl.js','/mobiledoc/jsp/resources/jslib/angular-animate/angular-animate.min.js','/mobiledoc/jsp/webemr/menu/file/enterpriseDirectory/js/toaster.js','/mobiledoc/jsp/webemr/menu/file/enterpriseDirectory/css/toaster.css','/mobiledoc/jsp/webemr/toppanel/prisma/js/pami/directive/prismaImportDirective-tpl.js');filesToLoad=getHighchartsJS().concat(filesToLoad);return filesToLoad}function checkPatientAvailability(patientId){let request=httpPost('/mobiledoc/prisma/validation/checkPatientAvailability',{patientId:patientId});return request.then(handleSuccessWithResponseData,handleCommonError)}function getPrismaFilterTabData(isPrismaPaidModalEnabled){if(true===isPrismaPaidModalEnabled){return[{"name":PRISMA_CONSTANT.SUB_TAB.ALL,"active":true,"docCount":PRISMA_CONSTANT.DIGIT.ZERO,"visible":true,"isCountVisible":true},{"name":PRISMA_CONSTANT.SUB_TAB.SEARCH_INSIGHTS,"active":false,"docCount":PRISMA_CONSTANT.DIGIT.ZERO,"visible":getItemKeyValue('prismaEnableSearchInsights').toLowerCase()==='yes',"isCountVisible":true},{"name":PRISMA_CONSTANT.SUB_TAB.RECORDS,"active":false,"docCount":PRISMA_CONSTANT.DIGIT.ZERO,"visible":true,"isCountVisible":true}]}else{return[{"name":PRISMA_CONSTANT.SUB_TAB.ALL,"active":false,"docCount":PRISMA_CONSTANT.DIGIT.ZERO,"visible":false,"isCountVisible":false},{"name":PRISMA_CONSTANT.SUB_TAB.SEARCH_INSIGHTS,"active":false,"docCount":PRISMA_CONSTANT.DIGIT.ZERO,"visible":false,"isCountVisible":false},{"name":PRISMA_CONSTANT.SUB_TAB.RECORDS,"active":true,"docCount":PRISMA_CONSTANT.DIGIT.ZERO,"visible":true,"isCountVisible":true}]}}function getCallingFrom(){return this.module}function setCallingFrom(module){this.module=module}function getErrorWord(){return this.errorWord}function setErrorWord(errorWord){this.errorWord=errorWord}function isDataImportable(){return this.dataImportable}function setDataImportable(dataImportable){this.dataImportable=dataImportable}function setPaidModelEnabled(isEnabled){this.isPaidModelEnabled=isEnabled}function retrieveFHIRDoc(patientId){let data={patientId:patientId};let request=httpPost('/mobiledoc/prisma/document/retrieveFHIRDoc',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function updateViewedToasterDate(patientId){let data={patientId:patientId};let request=httpPost('/mobiledoc/prisma/onload/updateViewedToasterDate',data);return request.then(handleSuccessWithResponseData,handleCommonError)}function calculatePNHeight(requireHgt){var pnHeight=0;if(this.module&&this.module.toLowerCase()==="hinsights"){var pnFooter=isNaN(angular.element("#bottomPanelApp").outerHeight())?0:angular.element("#bottomPanelApp").height();var pnHeader=isNaN(angular.element(".hinsights-patient-identity").outerHeight())?0:angular.element(".hinsights-patient-identity").height();pnHeight=pnHeight+pnHeader+pnFooter;requireHgt=requireHgt-pnHeight}return requireHgt}function adjustListOfRecordsHeight(element){var requireHgt=0;var footerTile=0;var hgt=angular.element(".prismaview").outerHeight();var headerTile=isNaN(angular.element(".prismaview .header-tile").outerHeight())?0:angular.element(".header-tile").outerHeight();var searchTile=isNaN(angular.element(".prismaview .record-header").outerHeight())?0:angular.element(".record-header").outerHeight();if(this.subTabName!=="timeline"){footerTile=isNaN(angular.element(".prismaview .footer-tile").outerHeight())?0:angular.element(".footer-tile").outerHeight()}var filterTile=isNaN(angular.element(".prismaview .filter-tile").outerHeight())?0:angular.element(".filter-tile").outerHeight();requireHgt=hgt-(headerTile+searchTile+footerTile+filterTile);if(this.isFromExe){requireHgt=requireHgt-45}requireHgt=Math.floor(calculatePNHeight.call(this,requireHgt));element.attr('style','height: '+Math.floor(requireHgt)+"px !important");if(this.tabName==="recordstab"){this.recordsLeftViewHgt=requireHgt}else if(this.tabName==="prismatab"){this.prismaLeftViewHgt=requireHgt}}function changeRecordHgt(eleHgt,element){if(this.tabName==="recordstab"){this.recordsLeftViewHgt=this.recordsLeftViewHgt+eleHgt;element.css('height',Math.floor(this.recordsLeftViewHgt)+"px")}else if(this.tabName==="prismatab"){this.prismaLeftViewHgt=Math.floor(this.prismaLeftViewHgt)+eleHgt;element.css('height',this.prismaLeftViewHgt+"px")}}function adjustSummaryDetailsHeight(element){var requireHgt=0;var hgt=angular.element(".prismaview").outerHeight();var headerTile=isNaN(angular.element(".prismaview .header-tile").outerHeight())?0:angular.element(".header-tile").outerHeight();var searchTile=isNaN(angular.element(".prismaview .record-header").outerHeight())?0:angular.element(".record-header").outerHeight();var summaryHeader=isNaN(angular.element(".prismaview .header-wrapper ").outerHeight())?0:angular.element(".header-wrapper ").outerHeight();requireHgt=hgt-(headerTile+searchTile+summaryHeader+5);if(this.isFromExe){requireHgt=requireHgt-45}requireHgt=calculatePNHeight.call(this,requireHgt);element.css('height',Math.floor(requireHgt)+"px");element.attr('style','height: '+Math.floor(requireHgt)+"px !important");return this.summaryViewHeight=Math.floor(requireHgt)}function adjustCIHeight(element){var requireHgt=0;var hgt=angular.element(".prismaview").outerHeight();var searchTile=isNaN(angular.element(".prismaview .record-header").outerHeight())?0:angular.element(".prismaview .record-header").outerHeight();var header=isNaN(angular.element(".prismaview .header-tile").outerHeight())?0:angular.element(".prismaview .header-tile").outerHeight();requireHgt=hgt-searchTile-27-header;if(this.isFromExe){requireHgt=requireHgt-45}requireHgt=Math.floor(calculatePNHeight.call(this,requireHgt));element.attr('style','height: '+Math.floor(requireHgt)+"px !important")}function removeStyleAndScriptTags(element){['style','script','link'].forEach(tag=>{Array.from(element.getElementsByTagName(tag)).forEach(tagElement=>tagElement.remove())});return element.innerHTML}this.topPanelOffset=undefined;function getPtDocFileNameAndPath(prismaRecordId,context){let request=httpPost('/mobiledoc/prisma/document/getPatientDocFileNameAndPath',{prismaRecordId:prismaRecordId,context:context});return request.then(handleSuccessWithResponseData,handleErrorForGetFileNameForPDFViewer)}function showPrismaUnusableError(){showAlertMessage("<div class='text-left mt-24'><b>Healow Insights - Unable to Launch"+"</b><br/></br>The system encountered an unexpected error. Please contact eClinicalWorks support."+" </div>",'','CustomErrorMsg','','','400px;','ok','','showAlert','','','',true,false)}function isContext(context){if(context){this.context=context}return this.context}}]);