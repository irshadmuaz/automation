let healowInsightsWorklistCountApp=angular.module("healowInsightsWorklistCountModule",[]);healowInsightsWorklistCountApp.controller("healowInsightsWorklistCountController",['$scope',function($scope){$scope.isHCCEnabled=isItemKeyEnabled('HealowInsightsHCCListTab');$scope.isQMEnabled=isItemKeyEnabled('HealowInsightsQMAlertReportTab')||isItemKeyEnabled('HealowInsightsQMScheduleReportTab');$scope.initHIWorklistCountInfo=function(){resetCount();let ikWorklistCountConf=JSON.parse(get('hIWorklistCountConf'));if(global.loginUserType===1&&ikWorklistCountConf['allProvider']){ikWorklistCountConf=ikWorklistCountConf['allProvider']}else if(global.loginUserType===2&&ikWorklistCountConf['allStaff']){ikWorklistCountConf=ikWorklistCountConf['allStaff']}$scope.gicCountConfigValue='-1';$scope.pdxCountConfigValue='-1';$scope.mtmCountConfigValue='-1';$scope.hccReviewedCountConfigValue='-1';$scope.hccUnreviewedCountConfigValue='-1';$scope.hccInsufficientCountConfigValue='-1';$scope.qmOverdueCountConfigValue='-1';$scope.qmWarningCountConfigValue='-1';$scope.qmPendingCountConfigValue='-1';if(ikWorklistCountConf['giccount']){$scope.gicCountConfigValue=ikWorklistCountConf['giccount']}if(ikWorklistCountConf['pdxcount']){$scope.pdxCountConfigValue=ikWorklistCountConf['pdxcount']}if(ikWorklistCountConf['mtmcount']){$scope.mtmCountConfigValue=ikWorklistCountConf['mtmcount']}if($scope.isHCCEnabled&&ikWorklistCountConf['hcccount']){$scope.hccReviewedCountConfigValue=ikWorklistCountConf['hcccount']['reviewed'];$scope.hccUnreviewedCountConfigValue=ikWorklistCountConf['hcccount']['unreviewed'];$scope.hccInsufficientCountConfigValue=ikWorklistCountConf['hcccount']['insufficient']}if($scope.isQMEnabled&&ikWorklistCountConf['qmcount']){$scope.qmOverdueCountConfigValue=ikWorklistCountConf['qmcount']['overdue'];$scope.qmWarningCountConfigValue=ikWorklistCountConf['qmcount']['warning'];$scope.qmPendingCountConfigValue=ikWorklistCountConf['qmcount']['pending']}};const resetCount=function(){$scope.pdxCount=0;$scope.gicCount=0;$scope.mtmCount=0;$scope.hccUnreviewedCount=0;$scope.hccReviewedCount=0;$scope.hccInsufficientCount=0;$scope.qmOverdueCount=0;$scope.qmWarningCount=0;$scope.qmPendingCount=0;$scope.totalWorklistItemCount=0};$scope.updateHIWorklistCount=function(response){resetCount();if(response.pdxCount){$scope.pdxCount=response.pdxCount.toLocaleString('en-US');$scope.totalWorklistItemCount+=response.pdxCount}if(response.gicCount){$scope.gicCount=response.gicCount.toLocaleString('en-US');$scope.totalWorklistItemCount+=response.gicCount}if(response.mtmCount){$scope.mtmCount=response.mtmCount.toLocaleString('en-US');$scope.totalWorklistItemCount+=response.mtmCount}if(response.hccReviewedCount){$scope.hccReviewedCount=response.hccReviewedCount.toLocaleString('en-US');$scope.totalWorklistItemCount+=response.hccReviewedCount}if(response.hccUnreviewedCount){$scope.hccUnreviewedCount=response.hccUnreviewedCount.toLocaleString('en-US');$scope.totalWorklistItemCount+=response.hccUnreviewedCount}if(response.hccInsufficientCount){$scope.hccInsufficientCount=response.hccInsufficientCount.toLocaleString('en-US');$scope.totalWorklistItemCount+=response.hccInsufficientCount}if(response.qmOverdueCount){$scope.qmOverdueCount=response.qmOverdueCount.toLocaleString('en-US');$scope.totalWorklistItemCount+=response.qmOverdueCount}if(response.qmPendingCount){$scope.qmPendingCount=response.qmPendingCount.toLocaleString('en-US');$scope.totalWorklistItemCount+=response.qmPendingCount}if(response.qmWarningCount){$scope.qmWarningCount=response.qmWarningCount.toLocaleString('en-US');$scope.totalWorklistItemCount+=response.qmWarningCount}$scope.totalWorklistItemCount=$scope.totalWorklistItemCount.toLocaleString('en-US');$scope.$apply()};$scope.getHIWorklistConfValueToGetSubMenuData=function(configuredValue){let value='';if(configuredValue){let ikWorklistCountConf=JSON.parse(configuredValue);if(ikWorklistCountConf){if(global.loginUserType===1&&ikWorklistCountConf['allProvider']){ikWorklistCountConf=ikWorklistCountConf['allProvider']}else if(global.loginUserType===2&&ikWorklistCountConf['allStaff']){ikWorklistCountConf=ikWorklistCountConf['allStaff']}if(ikWorklistCountConf['giccount']&&ikWorklistCountConf['giccount']!=='-1'){value+=',gic'}if(ikWorklistCountConf['pdxcount']&&ikWorklistCountConf['pdxcount']!=='-1'){value+=',pdx'}if(ikWorklistCountConf['mtmcount']&&ikWorklistCountConf['mtmcount']!=='-1'){value+=',mtm'}if($scope.isHCCEnabled){if(ikWorklistCountConf['hcccount']&&ikWorklistCountConf['hcccount']['reviewed']&&ikWorklistCountConf['hcccount']['reviewed']!=='-1'){value+=',hcc_reviewed'}if(ikWorklistCountConf['hcccount']&&ikWorklistCountConf['hcccount']['unreviewed']&&ikWorklistCountConf['hcccount']['unreviewed']!=='-1'){value+=',hcc_unreviewed'}if(ikWorklistCountConf['hcccount']&&ikWorklistCountConf['hcccount']['insufficient']&&ikWorklistCountConf['hcccount']['insufficient']!=='-1'){value+=',hcc_insufficient'}}if($scope.isQMEnabled){if(ikWorklistCountConf['qmcount']&&ikWorklistCountConf['qmcount']['overdue']&&ikWorklistCountConf['qmcount']['overdue']!=='-1'){value+=',qm_overdue'}if(ikWorklistCountConf['qmcount']&&ikWorklistCountConf['qmcount']['warning']&&ikWorklistCountConf['qmcount']['warning']!=='-1'){value+=',qm_warning'}if(ikWorklistCountConf['qmcount']&&ikWorklistCountConf['qmcount']['pending']&&ikWorklistCountConf['qmcount']['pending']!=='-1'){value+=',qm_pending'}}}if(value.length>0){value=value.substring(1,value.length)}}return value};$scope.getHIWorklistCountAssignToConfValueToGetSubMenuData=function(configuredValue){let value='';let worklistCountAssignToConfValue=JSON.parse(configuredValue);if(worklistCountAssignToConfValue['assignToMe']==='1'){value+=',assigntome'}if(worklistCountAssignToConfValue['assignToMyProvider']==='1'){value+=',assigntomyprovider'}if(worklistCountAssignToConfValue['underMyCare']==='1'){value+=',undermycare'}if(value.length>0){value=value.substring(1,value.length)}return value};$scope.$on('$destroy',cleanUp);function cleanUp(){removeScopePropertyAndMethod($scope)}}]);