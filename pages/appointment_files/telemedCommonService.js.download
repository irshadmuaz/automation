(function(){var tm=angular.module("ecw.telemed.service",["ecw.service.EncDetailsService"]);if(!tm){return}tm.service("telemedAPIService",["$http",function($http){this.invokePost=function(url,data){return $http({method:"POST",url:makeURL(url),data:$.param(data),headers:{'Content-Type':'application/x-www-form-urlencoded'}})};this.invokePostAsBody=function(url,data){return $http({method:"POST",url:makeURL(url),data:data})}}]);tm.service("SunohService",function(){return{}});tm.service("telemedLoggingService",function(){this.log=function(msg){console.log(msg)};this.error=function(msg){console.error(msg)};this.debug=function(msg){console.debug(msg)}});tm.service("telemedCommonUtils",["telemedLoggingService",function(logService){let participantColorCodes={fontShade:[],backGround:[]};this.deepFreeze=function(o){try{if(o){Object.freeze(o);Object.getOwnPropertyNames(o).forEach(function(key,idx,array){if(o.hasOwnProperty(key)&&o[key]!==null&&!Object.isFrozen(o[key])){this.deepFreeze(o[key])}})}}catch(e){logService.log(e)}return o};this.escapeHtml=function(text){var map={'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#039;'};return text.replace(/[&<>"']/g,function(m){return map[m]})};this.showErrMsg=function(divId,divClass,msgTxtId,errTxt){$("#"+divId).removeClass();$("#"+divId).addClass(divClass).addClass('err-msg');$("#"+divId).find("#"+msgTxtId).text('');$("#"+divId).find("#"+msgTxtId).text(errTxt)};this.clockService=function(){var sec=-1,min=0,hour=0;var callTimer=null;var callBack=null;var format=function(val){return val>=10?val:"0"+val};var clearTimer=function(){if(callTimer){clearInterval(callTimer);callTimer=null}};function startTimer(_callBack){clearTimer();if(callBack==null){callBack=_callBack}callTimer=setInterval(function(){sec++;if(sec===60){sec=0;min+=1}if(min===60){min=0;hour+=1}var tmpTimer=hour>0?format(hour)+":"+format(min)+":"+format(sec):""+format(min)+":"+format(sec);if(typeof callBack==="function"){callBack(tmpTimer)}},1e3)}function stopTimer(){clearTimer();sec=-1;min=0;hour=0;callBack=null}return{start:startTimer,stop:stopTimer}};this.getRandomColorCodePair=function(){function rgb(){const r=Math.floor(Math.random()*100);const g=Math.floor(Math.random()*80);const b=Math.floor(Math.random()*50);return{"r":r,"g":g,"b":b}}function componentToHex(c){let hex=c.toString(16);return hex.length==1?"0"+hex:hex}let c=rgb();let r=c.r%256;let g=c.g%256;let b=c.b%256;let backGroundShade="";let fontShade="";let i=0;let jump=25;let breakLoop=false;do{r+=jump;g+=jump;b+=jump;if(i==0){fontShade="#"+componentToHex(r)+componentToHex(g)+componentToHex(b)}i++;if(r<=255&&g<=255&&b<=255&&(r!=253||g!=225||b!=210)){backGroundShade="#"+componentToHex(r)+componentToHex(g)+componentToHex(b)}else{breakLoop=true}}while(!breakLoop);return{"fontShade":fontShade,"backGround":backGroundShade}};this.buildPatientIdentifier=function(ptDetails,obj){try{if(obj.strPatientFullname.indexOf(',')!==-1){let lastName=obj.strPatientFullname.split(',')[0];if(lastName){let lastNameUP=obj.strPatientFullname.toUpperCase();ptDetails["fullname"]=obj.strPatientFullname.toUpperCase()}}else{ptDetails["fullname"]=obj.strPatientFullname}let dob=moment(obj.strPatientDob,['MM/DD/YYYY','YYYY-MM-DD']);let formattedDob=' ('+this.getAgeFromDob(dob)+' '+obj.strPtSex+')';ptDetails["dob"]=formattedDob}catch(e){logService.error(e)}};this.getAgeFromDob=function(dob){let DisplayLimit={DAYS:30,WEEKS:24,MONTHS:24};let formattedAge;let ageInDays=moment().diff(dob,'days');let ageInWeeks=moment().diff(dob,'weeks');let ageInMonths=moment().diff(dob,'months');if(ageInDays<=DisplayLimit.DAYS){formattedAge=ageInDays+' do'}else if(ageInWeeks<=DisplayLimit.WEEKS){formattedAge=ageInWeeks+' wo'}else if(ageInMonths<=DisplayLimit.MONTHS){formattedAge=ageInMonths+' mo'}else{formattedAge=moment().diff(dob,'years')+' yo'}return formattedAge};this.getColorCodePair=function(){let colorCodePair=this.getRandomColorCodePair();for(let i=0;i<5;i++){if(participantColorCodes['fontShade'].includes(colorCodePair.fontShade)||participantColorCodes['backGround'].includes(colorCodePair.backGround)){colorCodePair=this.getRandomColorCodePair()}else{break}}participantColorCodes['fontShade'].push(colorCodePair.fontShade);participantColorCodes['backGround'].push(colorCodePair.backGround);return colorCodePair}}]);tm.service("telemedSessionService",["telemedCommonUtils","telemedLoggingService",function(telemedCommonUtils,logService){var sessionObjects={};var events=telemedCommonUtils.deepFreeze({CONNECT:"connect",CONNECTION_CREATED:"connectionCreated",CONNECTION_DESTROYED:"connectionDestroyed",SESSION_CONNECTED:"sessionConnected",SESSION_DISCONNECTED:"sessionDisconnected",SESSION_RECONNECTING:"sessionReconnecting",SESSION_RECONNECTED:"sessionReconnected",STREAM_CREATED:"streamCreated",STREAM_DESTROYED:"streamDestroyed",STREAM_PROPERTY_CHANGED:"streamPropertyChanged",SIGNAL:"signal"});function SessionMetadata(){this.callbacks={};this.session=null;this.publisher={};this.subscribers={}}function SessionService(){var sessionMetadata=new SessionMetadata;function connect(apiKey,sessionId,token){if(sessionObjects.hasOwnProperty(sessionId)){throw new Error("Already Connected to Session");return}if(!metadataExists()){throw new Error("sessionMetadata is required");return}sessionMetadata.session=OT.initSession(apiKey,sessionId);sessionMetadata.session.connect(token,function(error){if(!error){sessionObjects[sessionId]=sessionMetadata}notify(events.CONNECT,[error])});sessionMetadata.session.on(events.CONNECTION_CREATED,function(event){notify(events.CONNECTION_CREATED,[event])});sessionMetadata.session.on(events.CONNECTION_DESTROYED,function(event){notify(events.CONNECTION_DESTROYED,[event])});sessionMetadata.session.on(events.SESSION_CONNECTED,function(event){notify(events.SESSION_CONNECTED,[event])});sessionMetadata.session.on(events.SESSION_DISCONNECTED,function(event){notify(events.SESSION_DISCONNECTED,[event])});sessionMetadata.session.on(events.SESSION_RECONNECTING,function(event){notify(events.SESSION_RECONNECTING,[event])});sessionMetadata.session.on(events.SESSION_RECONNECTED,function(event){notify(events.SESSION_RECONNECTED,[event])});sessionMetadata.session.on(events.STREAM_CREATED,function(event){notify(events.STREAM_CREATED,[event])});sessionMetadata.session.on(events.STREAM_DESTROYED,function(event){notify(events.STREAM_DESTROYED,[event])});sessionMetadata.session.on(events.STREAM_PROPERTY_CHANGED,function(event){notify(events.STREAM_PROPERTY_CHANGED,[event])});sessionMetadata.session.on(events.SIGNAL,function(event){notify(events.SIGNAL,[event]);if(event.type){notify(event.type,[event])}})}function disconnectSession(identifier,cb){if(sessionMetadata.session){sessionMetadata.session.off();sessionMetadata.session.disconnect();delete sessionObjects[sessionMetadata.session.sessionId]}else{cb("Session info not present")}}function disconnect(identifier,cb){try{if(!metadataExists()){return}destroyAllPublishers();unsubscribeAll();unregisterCallback(identifier,cb);disconnectSession();sessionMetadata=null}catch(e){logService.error(e)}}function notify(evt,params){try{if(!metadataExists()){return}$.each(sessionMetadata.callbacks,function(key,cbArr){$.each(cbArr,function(i,cb){if(cb&&cb.hasOwnProperty(evt)&&typeof cb[evt]==="function"){var eventParamForIdentifier=params||[];eventParamForIdentifier.splice(0,0,key);cb[evt].apply(this,eventParamForIdentifier)}})})}catch(e){logService.error(e)}}function registerCallback(identifier,cb){if(metadataExists()&&cb&&typeof cb==="object"&&Object.keys(cb).length>0){if(!sessionMetadata.callbacks.hasOwnProperty(identifier)){sessionMetadata.callbacks[identifier]=[]}sessionMetadata.callbacks[identifier].push(cb)}}function unregisterCallback(identifier,cb){if(metadataExists()&&sessionMetadata.callbacks.hasOwnProperty(identifier)){sessionMetadata.callbacks[identifier]=sessionMetadata.callbacks[identifier].filter(function(ele){return ele!==cb})}}function metadataExists(){return sessionMetadata!=null}function sendSignalTo(_to,_type,_data,callback){if(!metadataExists()){callback("session metadata doesn't exists");return}sessionMetadata.session.signal({to:_to,type:_type,data:_data},function(error){callback(error)})}function sendSignal(_type,_data,callback){if(!metadataExists()){callback("session metadata doesn't exists");return}sessionMetadata.session.signal({type:_type,data:_data},function(error){callback(error)})}function initPublisher(id,ele,options,callback){if(sessionMetadata.publisher[id]){callback("publisher object already exists with same id.");return}var pubObj=OT.initPublisher(ele,options,function(error){if(!error){sessionMetadata.publisher[id]={publisher:pubObj,publishing:false}}callback(error,pubObj)})}function publish(id,callback){if(!sessionMetadata.session){callback('Not connected to session.');return}if(!sessionMetadata.publisher[id]){callback("Publisher object doesn't exists for this id");return}if(sessionMetadata.publisher[id]["publishing"]===true){callback("This publisher is already published to this session");return}sessionMetadata.session.publish(sessionMetadata.publisher[id]["publisher"],function(error){if(!error){sessionMetadata.publisher[id]["publishing"]=true}callback(error)})}function muteUnmuteAudio(id,value,callback){if(!sessionMetadata.publisher[id]){callback("Publisher object doesn't exists for this id");return}sessionMetadata.publisher[id]["publisher"].publishAudio(value);callback(true)}function playPauseVideo(id,value,callback){if(!sessionMetadata.publisher[id]){callback("Publisher object doesn't exists for this id");return}sessionMetadata.publisher[id]["publisher"].publishVideo(value);callback(true)}function destroyAllPublishers(){if(sessionMetadata.session&&Object.keys(sessionMetadata.publisher).length>0){$.each(sessionMetadata.publisher,function(id,obj){destroyPublisher(id)})}}function destroyPublisher(id,callBack){try{if(sessionMetadata.session&&sessionMetadata.publisher[id]){var pubObj=sessionMetadata.publisher[id];if(!pubObj){callBack('publisher is already destroyed');return}if(pubObj.publishing===true){sessionMetadata.session.unpublish(pubObj.publisher)}pubObj.publisher.destroy();pubObj.publisher.off();delete sessionMetadata.publisher[id];if(callBack){callBack(null)}}}catch(e){callBack("Unable to destroy publisher at this moment.");logService.error(e)}}function subscribe(id,stream,ele,options,callback){if(!sessionMetadata.session){callback('Not connected to session.');return}var subscriber=sessionMetadata.session.subscribe(stream,ele,options,function(error){if(!error){if(!sessionMetadata.subscribers[id]){sessionMetadata.subscribers[id]=[]}sessionMetadata.subscribers[id].push(subscriber)}callback(error,subscriber)})}function unsubscribe(subObj){if(sessionMetadata.session&&subObj){sessionMetadata.session.unsubscribe(subObj);subObj.off();subObj=null}}function unsubscribeAll(){$.each(sessionMetadata.subscribers,function(streamId,subArray){$.each(subArray,function(k,v){unsubscribe(v)})});sessionMetadata.subscribers={}}function unsubscribeStream(id){let subArray=sessionMetadata.subscribers[id];if(subArray&&subArray.length>0){$.each(subArray,function(k,v){unsubscribe(v)});delete sessionMetadata.subscribers[id]}}function compatibilityOfScreenShare(){var isCompatible=true;try{var raw=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);if(!(raw&&raw.length>=3&&parseInt(raw[2],10)>=72)){isCompatible=false}}catch(e){isCompatible=false}return isCompatible}function checkScreenShareCompatibility(callBack){if(!compatibilityOfScreenShare()){callBack('This browser does not support screen sharing. Please use Google Chrome version 72+');return}OT.checkScreenSharingCapability(function(response){if(response.supported){callBack(null)}else{callBack('This browser does not support screen sharing. Please use Google Chrome version 72+')}})}function getSessionId(){return sessionMetadata&&sessionMetadata.session?sessionMetadata.session.sessionId:""}function switchVideoCamera(id,callback){if(!sessionMetadata.publisher[id]){callback("Publisher object doesn't exists for this id");return}sessionMetadata.publisher[id]["publisher"].cycleVideo().then(function(response){callback(response)},function(response){callback(response)})}function getVideoDevicesList(callback){OT.getDevices(function(err,devices){if(devices.length>0){var videoDevices=devices.filter(function(device){return device.kind==='videoInput'});callback(videoDevices)}else{callback([])}})}return{connect:connect,disconnect:disconnect,sendSignalTo:sendSignalTo,sendSignal:sendSignal,registerCallback:registerCallback,unregisterCallback:unregisterCallback,initPublisher:initPublisher,publish:publish,unPublish:destroyPublisher,subscribe:subscribe,unsubscribeAll:unsubscribeAll,unsubscribeStream:unsubscribeStream,muteUnmuteAudio:muteUnmuteAudio,playPauseVideo:playPauseVideo,checkScreenShareCompatibility:checkScreenShareCompatibility,getSessionId:getSessionId,switchVideoCamera:switchVideoCamera,getVideoDevicesList:getVideoDevicesList,disconnectSession:disconnectSession}}return{initSession:function(){return new SessionService},events:events}}]);tm.factory('telemedRosterPresenceService',function(){var presenceInfo={};function createIfNotExits(encId){if(!presenceInfo.hasOwnProperty(encId)){presenceInfo[encId]={callback:[],presence:false}}}function subscribe(encId,_callback,_subscriberCallback){if(typeof _callback==="function"&&typeof _subscriberCallback==="function"){createIfNotExits(encId);presenceInfo[encId]["callback"].push(_subscriberCallback);_callback(encId,presenceInfo[encId]["presence"])}}function unsubscribe(encId,_subscriberCallback){if(typeof _subscriberCallback==="function"&&presenceInfo.hasOwnProperty(encId)){presenceInfo[encId]["callback"]=presenceInfo[encId]["callback"].filter(function(ele){return ele!==_subscriberCallback})}}function notify(encId,presence){createIfNotExits(encId);var obj=presenceInfo[encId];obj["presence"]=presence;angular.forEach(obj["callback"],function(_cb,key){try{_cb(encId,presence)}catch(e){}})}return{subscribe:subscribe,unsubscribe:unsubscribe,notify:notify}});tm.factory("telemedCallRunningService",function(){var callRunning=false;var uniqueIdentifier=null;var sessionId=null;var subscriberList={};return{isCallRunning:function(){return callRunning},setCallRunning:function(_uniqueIdentifier,_sessionId){callRunning=true;uniqueIdentifier=_uniqueIdentifier;sessionId=_sessionId},clearCallRunning:function(){callRunning=false;uniqueIdentifier=null;sessionId=null;subscriberList={}},getCallRunningInfo:function(){if(callRunning){return{identifier:uniqueIdentifier,sessionId:sessionId}}return null},addSubscribePatientID:function(_uniqueIdentifier,patientID,streamID){if(subscriberList[_uniqueIdentifier]===undefined){subscriberList[_uniqueIdentifier]={}}if(subscriberList[_uniqueIdentifier][patientID]===undefined){subscriberList[_uniqueIdentifier][patientID]={}}subscriberList[_uniqueIdentifier][patientID]={streamId:streamID}},removeSubscribePatientID:function(_uniqueIdentifier,patientID){if(subscriberList[_uniqueIdentifier][patientID]&&subscriberList[_uniqueIdentifier][patientID].hasOwnProperty('streamId')){delete subscriberList[_uniqueIdentifier][patientID]}},isPatientAlreadySubscribed:function(_uniqueIdentifier,patientID){var isSubscribed=false;if(patientID){isSubscribed=subscriberList[_uniqueIdentifier][patientID]&&subscriberList[_uniqueIdentifier][patientID]['streamId']}return isSubscribed}}})})();