angular.module("patientMatchServicesModule",[]).factory('patientMatchService',function($http){return{linkPatient:function(param){try{return $http({method:"POST",url:makeURL("/mobiledoc/jsp/ereferralemr/linkPatient.jsp"),data:param,headers:{'Content-Type':'application/x-www-form-urlencoded'}})}catch(err){}},nhxPatientObj:{},nhxdetails:{nhxPatientId:0,nhxMpi:'',linkedLocalpatientId:'',reason:"",numberofmatches:"",patientmatchcriteriarevised:"",bPatientFoundEMR:false,nhxRefReqId:0,nhxPTInsName:"",nhxPTInsDetails:"",nhxPTSubscriberNo:"",nhxPTFullName:""},matchingPatientObj:{}}});angular.module("ptMatchModule",['oc.lazyLoad','patientMatchServicesModule','ecw.pojo']).controller('ptMatchController',function($scope,patientMatchService,$ocLazyLoad,$http,PatientFactory,$modal){$scope.patientMatchService=patientMatchService;$scope.nhxPtDetails="";var nhxPtDetailsJSON=patientSearch_nhxPtDetailsJSON;$scope.loadPtMatchDetails=function(){if(nhxPtDetailsJSON){nhxPtDetailsJSON=angular.fromJson(nhxPtDetailsJSON);$scope.setNhxPatientDetails(nhxPtDetailsJSON);if(nhxPtDetailsJSON.patientfound&&$.trim(nhxPtDetailsJSON.patientfound).length>0){$scope.setMatchedPatientDetails(nhxPtDetailsJSON)}if(nhxPtDetailsJSON.reason&&$.trim(nhxPtDetailsJSON.reason).length>0){$scope.patientMatchService.nhxdetails.reason=$.trim(nhxPtDetailsJSON.reason)}if(nhxPtDetailsJSON.numberofmatches&&$.trim(nhxPtDetailsJSON.numberofmatches).length>0){$scope.patientMatchService.nhxdetails.numberofmatches=parseInt($.trim(nhxPtDetailsJSON.numberofmatches))}if(nhxPtDetailsJSON.patientmatchcriteriarevised&&$.trim(nhxPtDetailsJSON.patientmatchcriteriarevised).length>0){$scope.patientMatchService.nhxdetails.patientmatchcriteriarevised=parseInt($.trim(nhxPtDetailsJSON.patientmatchcriteriarevised))}if(nhxPtDetailsJSON.refreqid&&$.trim(nhxPtDetailsJSON.refreqid).length>0){$scope.patientMatchService.nhxdetails.nhxRefReqId=$.trim(nhxPtDetailsJSON.refreqid)}$scope.$parent.patientSearchCriteria.searchBy="Name";if($scope.patientMatchService.nhxPatientObj.lastname.length>0){$scope.$parent.patientSearchCriteria.searchText=$scope.patientMatchService.nhxPatientObj.lastname}if($scope.patientMatchService.nhxPatientObj.firstname.length>0){$scope.$parent.patientSearchCriteria.firstName=$scope.patientMatchService.nhxPatientObj.firstname;$scope.$parent.patientSearchCriteria.lastName=$scope.patientMatchService.nhxPatientObj.lastname;if($scope.$parent.patientSearchCriteria.searchText.length>0){$scope.$parent.patientSearchCriteria.searchText=$.trim($scope.$parent.patientSearchCriteria.searchText)+","+$.trim($scope.patientMatchService.nhxPatientObj.firstname)}}if($scope.patientMatchService.nhxPatientObj.dob&&$scope.patientMatchService.nhxPatientObj.dob.length>0&&$scope.patientMatchService.nhxPatientObj.dob.toLowerCase().indexOf('na')==-1){var isValidDate=moment($scope.patientMatchService.nhxPatientObj.dob,"YYYY-MM-DD",true);if(isValidDate.isValid()){$scope.$parent.patientSearchCriteria.secondSearchValue=$.trim(moment($scope.patientMatchService.nhxPatientObj.dob,"YYYY-MM-DD").format("MM/DD/YYYY"))}else{$scope.$parent.patientSearchCriteria.secondSearchValue=$.trim($scope.patientMatchService.nhxPatientObj.dob)}$scope.$parent.patientSearchCriteria.secondSearchBy="DateOfBirth";$scope.$parent.patientSearchCriteria.disableSecondSearch=false;$scope.$parent.patientSearchCriteria.disableSecondSearchText=false}$scope.$parent.loadPatientList()}};$scope.setNhxPatientDetails=function(nhxPtDetailsJSON){$scope.patientMatchService.nhxdetails={nhxPatientId:nhxPtDetailsJSON.nhxpatientid,nhxMpi:nhxPtDetailsJSON.patientmpidx,nhxPTFName:nhxPtDetailsJSON.patientfname,nhxPTLName:nhxPtDetailsJSON.patientlname,linkedLocalpatientId:nhxPtDetailsJSON.patientlocalpid};if(nhxPtDetailsJSON.patientfound&&$.trim(nhxPtDetailsJSON.patientfound).length>0){$scope.patientMatchService.nhxdetails.bPatientFoundEMR=$.trim(nhxPtDetailsJSON.patientfound).toLowerCase()=="true"}if($.trim(nhxPtDetailsJSON.patientmpidx).length>0){$scope.patientMatchService.nhxdetails.nhxMpi=parseInt($.trim(nhxPtDetailsJSON.patientmpidx))}else{$scope.patientMatchService.nhxdetails.nhxMpi=0}if($.trim(nhxPtDetailsJSON.patientlocalpid).length>0){$scope.patientMatchService.nhxdetails.linkedLocalpatientId=parseInt($.trim(nhxPtDetailsJSON.patientlocalpid))}else{$scope.patientMatchService.nhxdetails.linkedLocalpatientId=0}if(nhxPtDetailsJSON.patientmatchcriteria&&$.trim(nhxPtDetailsJSON.patientmatchcriteria).length>0){$scope.patientMatchService.nhxdetails.nhxPTMatchCriteria="(matched using "+nhxPtDetailsJSON.patientmatchcriteria+")"}var phone,sex,dob,fname,lname,minitial;if(nhxPtDetailsJSON.patientphone&&$.trim(nhxPtDetailsJSON.patientphone).length>0){phone=$.trim(nhxPtDetailsJSON.patientphone)}else{phone="(NA)"}if(nhxPtDetailsJSON.patientdob&&$.trim(nhxPtDetailsJSON.patientdob).length>0){dob=$.trim(nhxPtDetailsJSON.patientdob)}else{dob="(NA)"}if(nhxPtDetailsJSON.patientsex&&$.trim(nhxPtDetailsJSON.patientsex).length>0){sex=$.trim(nhxPtDetailsJSON.patientsex).toLowerCase();if(sex==="male"||sex==="m"){sex="Male"}else if(sex==="female"||sex==="f"){sex="Female"}else if(sex==="unknown"){sex="Unknown"}else if(sex==="na"){sex="(NA)"}}else{sex="(NA)"}if(nhxPtDetailsJSON.patientlname&&$.trim(nhxPtDetailsJSON.patientlname).length>0){lname=$.trim(nhxPtDetailsJSON.patientlname)}if(nhxPtDetailsJSON.patientfname&&$.trim(nhxPtDetailsJSON.patientfname).length>0){fname=$.trim(nhxPtDetailsJSON.patientfname)}if(nhxPtDetailsJSON.patientminitial&&$.trim(nhxPtDetailsJSON.patientminitial).length>0){minitial=$.trim(nhxPtDetailsJSON.patientminitial)}$scope.patientMatchService.nhxPatientObj=new PatientFactory.Patient(0,fname,lname,minitial,"",dob,phone,sex,"");if($scope.patientMatchService.nhxPatientObj.fullname.length<=0){$scope.patientMatchService.nhxdetails.nhxPTFullName="(NA)"}else{$scope.patientMatchService.nhxdetails.nhxPTFullName=$scope.patientMatchService.nhxPatientObj.fullname}if(nhxPtDetailsJSON.patientinsname&&$.trim(nhxPtDetailsJSON.patientinsname).length>0){$scope.patientMatchService.nhxdetails.nhxPTInsName=$.trim(nhxPtDetailsJSON.patientinsname);$scope.patientMatchService.nhxdetails.nhxPTInsDetails=$.trim(nhxPtDetailsJSON.patientinsname);if(nhxPtDetailsJSON.patientinsadd&&$.trim(nhxPtDetailsJSON.patientinsadd).length>0){$scope.patientMatchService.nhxdetails.nhxPTInsDetails+=", "+$.trim(nhxPtDetailsJSON.patientinsadd)}if(nhxPtDetailsJSON.patientinsphone&&$.trim(nhxPtDetailsJSON.patientinsphone).length>0){$scope.patientMatchService.nhxdetails.nhxPTInsDetails+=", "+$.trim(nhxPtDetailsJSON.patientinsphone)}}if(nhxPtDetailsJSON.patientinssubscriberno&&$.trim(nhxPtDetailsJSON.patientinssubscriberno).length>0){$scope.patientMatchService.nhxdetails.nhxPTSubscriberNo=$.trim(nhxPtDetailsJSON.patientinssubscriberno)}};$scope.setMatchedPatientDetails=function(nhxPtDetailsJSON){var phone,sex,dob,fname,lname,minitial,patientfoundpid,patientpicimgsrc;if(nhxPtDetailsJSON.patientmatchphone&&$.trim(nhxPtDetailsJSON.patientmatchphone).length>0){phone=$.trim(nhxPtDetailsJSON.patientmatchphone)}else{phone="(NA)"}if(nhxPtDetailsJSON.patientmatchdob&&$.trim(nhxPtDetailsJSON.patientmatchdob).length>0){dob=$.trim(nhxPtDetailsJSON.patientmatchdob)}else{dob="(NA)"}if(nhxPtDetailsJSON.patientfoundpid&&$.trim(nhxPtDetailsJSON.patientfoundpid).length>0){patientfoundpid=parseInt($.trim(nhxPtDetailsJSON.patientfoundpid))}if(nhxPtDetailsJSON.patientmatchlname&&$.trim(nhxPtDetailsJSON.patientmatchlname).length>0){lname=$.trim(nhxPtDetailsJSON.patientmatchlname)}if(nhxPtDetailsJSON.patientmatchfname&&$.trim(nhxPtDetailsJSON.patientmatchfname).length>0){fname=$.trim(nhxPtDetailsJSON.patientmatchfname)}if(nhxPtDetailsJSON.patientmatchminitial&&$.trim(nhxPtDetailsJSON.patientmatchminitial).length>0){minitial=$.trim(nhxPtDetailsJSON.patientmatchminitial)}if(nhxPtDetailsJSON.patientmatchsex&&$.trim(nhxPtDetailsJSON.patientmatchsex).length>0){sex=$.trim(nhxPtDetailsJSON.patientmatchsex).toLowerCase();if(sex==="male"||sex==="m"){sex="Male"}else if(sex==="female"||sex==="f"){sex="Female"}else if(sex==="unknown"){sex="Unknown"}else if(sex==="na"){sex="(NA)"}}else{sex="(NA)"}if(nhxPtDetailsJSON.patientpicimgsrc&&$.trim(nhxPtDetailsJSON.patientpicimgsrc).length>0){patientpicimgsrc=$.trim(nhxPtDetailsJSON.patientpicimgsrc)}$scope.patientMatchService.matchingPatientObj=new PatientFactory.Patient(patientfoundpid,fname,lname,minitial,"",dob,phone,sex,patientpicimgsrc);if($scope.patientMatchService.matchingPatientObj.fullname.length<=0){$scope.patientMatchService.matchingPatientObj.fullname="(NA)"}};$scope.linkNHXPatientToEMRPtFunc=function(patientObj){var params={mpidx:$scope.patientMatchService.nhxdetails.nhxMpi,pid:patientObj.patientid};params=$.param(params);$scope.patientMatchService.linkPatient(params).success(function(data){data=xml2json(data);if(!angular.isUndefined(data.Envelope.Body["return"].status)&&data.Envelope.Body["return"].status=="success"){$scope.$parent.setP2PPatientDetails(patientObj)}else{ecwAlert("An error occurred while matching the patient.")}})};$scope.registerPatient=function(){$scope.ptDemographicsInfoUrl="";$ocLazyLoad.load({name:'NewInfo',files:['/mobiledoc/jsp/webemr/templates/savePrompt-tpl.js','/mobiledoc/jsp/webemr/toppanel/patientInfo/ptInfoController.js','/mobiledoc/jsp/webemr/toppanel/patientInfo/miscController.js']}).then(function(){var url=makeURL('/mobiledoc/jsp/webemr/toppanel/patientInfo/patient-demographics.jsp?ptMAtchFlag=true&NewExist=New&nhxpatientid='+$scope.patientMatchService.nhxdetails.nhxPatientId);$scope.ptDemographicsInfoUrl=url},function(e){console.log(e)})};$scope.matchAndSelectPtFound=function(doMatch){if($scope.patientMatchService.matchingPatientObj.patientid&&$scope.patientMatchService.matchingPatientObj.patientid>0){if(doMatch){let message='';if($scope.patientMatchService.nhxPatientObj.dob){message="Are you sure you want to match '"+$scope.patientMatchService.nhxPatientObj.fullname+" "+$scope.patientMatchService.nhxPatientObj.dob+"' to '"+$scope.patientMatchService.matchingPatientObj.fullname+" "+$scope.patientMatchService.matchingPatientObj.dob+"'?"}else{message="Are you sure you want to match '"+$scope.patientMatchService.nhxPatientObj.fullname+"' to '"+$scope.patientMatchService.matchingPatientObj.fullname+" "+$scope.patientMatchService.matchingPatientObj.dob+"'?"}loadConfimationPopup(message,'Match',false,'Matching the patient')}else{$scope.$parent.setP2PPatientDetails($scope.patientMatchService.matchingPatientObj)}}};function loadConfimationPopup(message,button,fromLookup,screenName){commonWarningPopup({screenName:screenName,screenTitle:'Confirmation',buttons:[{label:button,cssClass:'btn-blue',callbackEvent:function(){if(fromLookup){$scope.linkNHXPatientToEMRPtFunc($scope.ptObjFromLookup)}else{$scope.linkNHXPatientToEMRPtFunc($scope.patientMatchService.matchingPatientObj)}}},{label:'Cancel',cssClass:'btn-lgrey',callbackEvent:function(){}}],message:message,isConfirmPopup:true,isKeyboardClose:true},$ocLazyLoad,$modal)}$scope.matchAndSelectFromLookup=function(){var retVal;if($('#rule-table2 > tbody > tr.highlight').length>0){let message='';let button='Rematch';let screenName='Rematching the patient';if($scope.patientMatchService.nhxdetails.linkedLocalpatientId&&$scope.patientMatchService.nhxdetails.linkedLocalpatientId>0){if($scope.patientMatchService.nhxPatientObj.dob){message="'"+$scope.patientMatchService.nhxPatientObj.fullname+" "+$scope.patientMatchService.nhxPatientObj.dob+"' is already matched to '"+$scope.patientMatchService.matchingPatientObj.fullname+" "+$scope.patientMatchService.matchingPatientObj.dob+"'. Do you want to rematch with '"+$scope.$parent.patientSearch.selectedPatient.name+" "+$scope.$parent.patientSearch.selectedPatient.dob+"'?"}else{message="'"+$scope.patientMatchService.nhxPatientObj.fullname+"' is already matched to '"+$scope.patientMatchService.matchingPatientObj.fullname+" "+$scope.patientMatchService.matchingPatientObj.dob+"'. Do you want to rematch with '"+$scope.$parent.patientSearch.selectedPatient.name+" "+$scope.$parent.patientSearch.selectedPatient.dob+"'?"}}else{screenName='Matching the patient';message="Are you sure you want to match '"+$scope.patientMatchService.nhxPatientObj.fullname+" "+$scope.patientMatchService.nhxPatientObj.dob+"' to '"+$scope.$parent.patientSearch.selectedPatient.name+" "+$scope.$parent.patientSearch.selectedPatient.dob+"'?";button='Match'}$scope.ptObjFromLookup=new PatientFactory.Patient($scope.$parent.patientSearch.selectedPatient.id,$scope.$parent.patientSearch.selectedPatient.fname,$scope.$parent.patientSearch.selectedPatient.lname,"",$scope.$parent.patientSearch.selectedPatient.name,$scope.$parent.patientSearch.selectedPatient.dob,$scope.$parent.patientSearch.selectedPatient.sex,"");loadConfimationPopup(message,button,true,screenName)}};$scope.useMatchedPt=function(){$scope.$parent.setP2PPatientDetails($scope.patientMatchService.matchingPatientObj)};$scope.unlinkPatient=function(){commonWarningPopup({screenName:'Unlink the patient',screenTitle:'Confirmation',buttons:[{label:'Unlink',cssClass:'btn-blue',callbackEvent:function(){var params={mpidx:$scope.patientMatchService.nhxdetails.nhxMpi,action:"unlinkpatient"};params=$.param(params);$http({method:"POST",url:makeURL("/mobiledoc/jsp/ereferralemr/linkPatient.jsp"),data:params,headers:{'Content-Type':'application/x-www-form-urlencoded'}}).success(function(html){if(html&&html.indexOf("success")==-1){ecwAlert("Could not unlink patient due to error on server.")}$scope.refreshPtMatch()}).error(function(data){ecwAlert("Could not unlink patient due to connectivity issue.")})}},{label:'Cancel',cssClass:'btn-lgrey',callbackEvent:function(){}}],message:"Are you sure you want to unlink '"+$scope.patientMatchService.matchingPatientObj.fullname+" "+$scope.patientMatchService.matchingPatientObj.dob+"' and '"+$scope.patientMatchService.nhxPatientObj.fullname+" "+$scope.patientMatchService.nhxPatientObj.dob+"'?",isConfirmPopup:true,isKeyboardClose:true},$ocLazyLoad,$modal)};$scope.refreshPtMatch=function(){var params={returntype:2,type:21,refReqId:$scope.patientMatchService.nhxdetails.nhxRefReqId};params=$.param(params);$http({method:"POST",url:makeURL("/mobiledoc/jsp/ereferralemr/requestHandler.jsp"),data:params,headers:{'Content-Type':'application/x-www-form-urlencoded'}}).success(function(data){if(data){nhxPtDetailsJSON=data}$scope.loadPtMatchDetails()}).error(function(data){ecwAlert("Could not refresh patient match screen due to connectivity issue.")})}});