let fileSignature=function(){var signatureInstance;function init(){var signatureList={};var extensionList={};function getFileSignatureFromServer(extension){var requestData={action:'FileTypeDetails',extension:extension};return $.ajax({type:'POST',url:'/mobiledoc/jsp/filetransfer/fileTransferHandler.jsp',data:requestData})}function validateSignatureOnServer(signatureList){var requestData={action:'validateSignature',signatureList:JSON.stringify(signatureList)};return $.ajax({type:'POST',url:'/mobiledoc/jsp/filetransfer/fileTransferHandler.jsp',data:requestData})}function getExtensionList(){var requestData={action:'FileSignatureList'};return $.ajax({type:'POST',url:'/mobiledoc/jsp/filetransfer/fileTransferHandler.jsp',data:requestData,"async":false})}return{getFileSignature:function(extension){return $.Deferred(function(dfd){var returnData=null;if(signatureList.hasOwnProperty(extension)){dfd.resolve(signatureList[extension])}else{getFileSignatureFromServer(extension).success(function(returnData){if(returnData){signatureList[extension]=JSON.parse(returnData);dfd.resolve(signatureList[extension])}else{dfd.reject('Fail to validate file validation. Please try again or contact eClinicalWorks.')}}).error(function(error){dfd.reject('Fail to validate file validation. Please try again or contact eClinicalWorks.')})}})},getExtensionList:function(){return $.Deferred(function(dfd){getExtensionList().success(function(returnData){if(returnData){extensionList=JSON.parse(returnData)}else{dfd.reject('Fail to validate file validation. Please try again or contact eClinicalWorks.')}}).error(function(error){dfd.reject('Fail to validate file validation. Please try again or contact eClinicalWorks.')});dfd.resolve(extensionList)})},validateSignatureOnServer:function(signatureList){return $.Deferred(function(dfd){validateSignatureOnServer(signatureList).success(function(returnData){if(returnData){try{var parsedArray=JSON.parse(returnData).join(", ");if(parsedArray&&parsedArray.length>0){dfd.resolve(parsedArray)}else{dfd.reject('Fail to validate file validation. Please try again or contact eClinicalWorks.')}}catch(e){dfd.reject('Fail to validate file validation. Please try again or contact eClinicalWorks.')}}else{dfd.reject('Fail to validate file validation. Please try again or contact eClinicalWorks.')}}).error(function(error){dfd.reject('Fail to validate file validation. Please try again or contact eClinicalWorks.')})})}}}return{getInstance:function(){if(!signatureInstance){signatureInstance=init()}return signatureInstance}}}();let fileTransferValidation={validateFileName:function(filename){var patt=/[\w\-_\.\(\), ]+[\.][\w]+/g;if(!filename||filename.length>255){throw'File name is invalid. The file name must be less than 255 characters.'}var returnValue=filename.match(patt);if(!fileNameMatch(filename)||!returnValue||returnValue[0]!==filename){throw"File name is invalid. The file name must not contain the following characters: "+filename.replace(/[\w\-_\.\(\) ]+/g,"").split("").join(", ")}},validateFileSize:function(fileObject){var maxFileSize=getItemKeyValue("PracticeMaxDocSize");var uploadFileSize=fileObject.size/1024/1024;if(uploadFileSize<=0){throw"Fail to upload empty file."}if(uploadFileSize>maxFileSize){throw"File size exceeds "+maxFileSize+"MB."}},validateFileContent:function(fileObject,validExtensionByModules){var readBytesFromFile=function(fileSignatureObject){return $.Deferred(function(dfd){var reader=new FileReader;reader.onload=function(evt){if(evt.target.readyState==FileReader.DONE){var fileBytes=fileTransferUtility.convertBytesToHex(evt.target.result);var obj={SignatureOffSet:fileSignatureObject.SignatureOffSet,BytesToRead:fileSignatureObject.BytesToRead,FileBytes:fileBytes};dfd.resolve(obj)}};reader.onerror=function(evt){switch(evt.target.error.code){case evt.target.error.NOT_FOUND_ERR:dfd.reject('File Not Found!');break;case evt.target.error.NOT_READABLE_ERR:dfd.reject('File is not readable');break;case evt.target.error.ABORT_ERR:dfd.reject('file upload cancel by user');break;default:dfd.reject('An error occurred reading this file.')}};var blob=fileObject.slice(fileSignatureObject.SignatureOffSet,fileSignatureObject.SignatureOffSet+fileSignatureObject.BytesToRead);reader.readAsArrayBuffer(blob)})};var validateSignature=function(metaData,dfd){if(metaData){if(metaData.statusCode===1){if(metaData.result&&metaData.result.length){var fileSignatureObject=null;var offset,bytesToRead;var promiseArrayList=[];for(var fileSignatureIndex in metaData.result){fileSignatureObject=metaData.result[fileSignatureIndex];if(fileSignatureObject){if(bytesToRead==fileSignatureObject.BytesToRead&&offset==fileSignatureObject.SignatureOffSet){continue}else{bytesToRead=fileSignatureObject.BytesToRead;offset=fileSignatureObject.SignatureOffSet;promiseArrayList.push(readBytesFromFile(fileSignatureObject))}}}Promise.all(promiseArrayList).then(function(respone){var found=false;var foundSignatureList=[];for(var fileSignatureIndex in metaData.result){fileSignatureObject=metaData.result[fileSignatureIndex];var fileBytes=respone.filter(function(item){return item.BytesToRead===fileSignatureObject.BytesToRead&&item.SignatureOffSet===fileSignatureObject.SignatureOffSet});if(fileBytes&&fileBytes[0]){if(fileBytes[0].FileBytes===fileSignatureObject.FileSignature){found=true;break}if(foundSignatureList.indexOf(fileBytes[0].FileBytes)===-1){foundSignatureList.push(fileBytes[0].FileBytes)}}}if(found){dfd.resolve(fileObject)}else{if(foundSignatureList&&foundSignatureList.length>0){fileSignature.getInstance().validateSignatureOnServer(foundSignatureList).then(function(result){dfd.reject('File extension does not match file type. Possible extension can be '+result+'. Please change the file extension and then try again.')},function(){dfd.reject('File extension does not match file type.')})}else{dfd.reject('File extension does not match file type.')}}})["catch"](function(e){dfd.reject(e)})}else{dfd.reject('error while getting file meta data')}}else{dfd.reject(metaData.message)}}else{dfd.reject('error while getting file meta data')}};return $.Deferred(function(dfd){var extension=fileTransferUtility.getFileExtension(fileObject.name);if(!extension){dfd.reject('File type is not supported')}var isInvalid=false;if(validExtensionByModules&&Array.isArray(validExtensionByModules)){if($.inArray(extension.toUpperCase(),validExtensionByModules)<0){dfd.reject("File type is not supported. The acceptable file types are: "+validExtensionByModules.join(", ")+".");isInvalid=true}}if(!isInvalid){fileSignature.getInstance().getFileSignature(extension).then(function(metaData){validateSignature(metaData,dfd)},function(error){dfd.reject('Error while getting file type metadata')})}})},validateMatchingExtension:function(filename,uploadFileName){var extension=fileTransferUtility.getFileExtension(filename);var uploadFileExtension=fileTransferUtility.getFileExtension(uploadFileName);if(!uploadFileExtension||!extension){throw'File type is not supported'}if(extension!==uploadFileExtension){throw'Upload filename and selected file not of same type'}},validateFileExtension:function(fileObject){var extension=fileTransferUtility.getFileExtension(fileObject.name);var metaData=fileSignature.getInstance().getFileSignature(extension);if(metaData.statusCode===1){if(!metaData.list||!metaData.list.length){var extensionList=fileSignature.getInstance().getExtensionList();throw'File type is not supported. The acceptable file types are: '+extensionList.join()}}else{throw metaData.message}}};