var INDEXEDDB_VERSION=1;var INDEXEDDB_DATABASENAME="eCW";var isEmptyOrNull=function(string){if(string!=undefined&&string!=null&&string.length>0){return false}return true};if(typeof Promise==="undefined"||Promise.toString().indexOf("[native code]")===-1){var jsElm=document.createElement("script");jsElm.type="application/javascript";jsElm.src="/mobiledoc/jsp/webemr/js/vendor/polyfill.min.js";document.getElementsByTagName("head")[0].appendChild(jsElm)}function addTable(tableName,keycolumn,data){return $.Deferred(function(dfd){$.indexedDB(INDEXEDDB_DATABASENAME).getVersion().done(function(version){INDEXEDDB_VERSION=version+1;var jobj={};jobj["schema"]={};jobj.schema[INDEXEDDB_VERSION]=function(v){if(keycolumn){var objectStore=v.createObjectStore(tableName,{"autoIncrement":false,"keyPath":keycolumn})}else{var objectStore=v.createObjectStore(tableName,{"autoIncrement":true,"multiEntry":true})}};$.indexedDB(INDEXEDDB_DATABASENAME,jobj).done(function(){if(!isEmptyOrNull(data)){if(data.constructor===[].constructor){var requests=[];for(var i in data){requests.push($.indexedDB(INDEXEDDB_DATABASENAME).objectStore(tableName,true).add(angular.copy(data[i])))}Promise.all(requests).then(function(val){dfd.resolve(data)},function(e){dfd.reject(e);return})}else if(data.constructor==={}.constructor){$.indexedDB(INDEXEDDB_DATABASENAME).objectStore(tableName,true).add(angular.copy(data)).done(function(val){dfd.resolve(data)}).fail(function(e){dfd.reject(e);return})}}}).fail(function(){dfd.resolve(data)})}).fail(function(e){dfd.reject(e);console.log(e)})})}function deleteTable(tableName){return $.Deferred(function(dfd){$.indexedDB(INDEXEDDB_DATABASENAME).isExist(tableName).done(function(isTableExist){if(isTableExist){$.indexedDB(INDEXEDDB_DATABASENAME).getVersion().done(function(version){INDEXEDDB_VERSION=version+1;$.indexedDB(INDEXEDDB_DATABASENAME,INDEXEDDB_VERSION).fail(function(e){dfd.reject(e)}).progress(function(v){v.deleteObjectStore(tableName);console.info("Object Store deleted");dfd.resolve("success")})}).fail(function(e){dfd.reject(e)})}else{console.info("Try to delete Object that not exist");dfd.resolve("success")}})})}function addRecord(tableName,value){return $.indexedDB(INDEXEDDB_DATABASENAME).objectStore(tableName,true).add(angular.copy(value))}function updateRecord(tableName,value,key){return $.indexedDB(INDEXEDDB_DATABASENAME).objectStore(tableName,true).put(value,key)}function deleteRecord(tableName,key){return $.indexedDB(INDEXEDDB_DATABASENAME).objectStore(tableName,true)["delete"](key)}function getRecordByKey(tableName,key){return $.indexedDB(INDEXEDDB_DATABASENAME).objectStore(tableName).get(key)}function getAllRecords(tableName){return $.indexedDB(INDEXEDDB_DATABASENAME).getAllRecords(tableName)}function isTableExist(tableName){return $.indexedDB(INDEXEDDB_DATABASENAME).isExist(tableName)}function getTableData(tableName,serverUrl,keyColumn,xpath,type){return getTableDataByKey(undefined,tableName,serverUrl,keyColumn,xpath,type)}function getTableDataByKey(key,tableName,serverUrl,keyColumn,xpath,type,inputProcessCallback,outputProcessCallback){return $.Deferred(function(dfd){if(!tableName){dfd.reject("table name is empty");return}isTableExist(tableName).done(function(isExist){if(isExist){if(!key){getAllRecords(tableName).done(function(resolveData){call_CallbackFunction(resolveData,outputProcessCallback,dfd)}).fail(function(error){dfd.reject(error)})}else{getRecordByKey(tableName,key).done(function(resolveData){call_CallbackFunction(resolveData,outputProcessCallback,dfd)}).fail(function(error){dfd.reject(error)})}}else{if(!serverUrl){dfd.reject("serverUrl is empty and table data does not exist in IndexedDB");return}var data=getCachedServerData(serverUrl);if(data){try{if(inputProcessCallback){try{data=inputProcessCallback(data)}catch(error){dfd.reject(error)}}else{if(type&&type=="xml"){data=xml2json(data)}if(xpath){data=eval("data."+xpath)}}addTable(tableName,keyColumn,data).done(function(resolveData){if(!key){call_CallbackFunction(resolveData,outputProcessCallback,dfd)}else{if(data.constructor===[].constructor){for(var i=0;i<data.length;i++){if(data[i].hasOwnProperty(key)){resolveData=angular.copy(data[i][key]);break}}}else if(data.constructor==={}.constructor){if(data.hasOwnProperty(key)){resolveData=angular.copy(data[key])}else{resolveData={}}}call_CallbackFunction(resolveData,outputProcessCallback,dfd)}}).fail(function(e){dfd.reject(e)})}catch(e){dfd.reject("invalid xpath")}}else{dfd.reject("get empty data from server");return}}})})}function call_CallbackFunction(data,func,dfd){if(func){try{dfd.resolve(func(data))}catch(error){dfd.reject(error)}}else{dfd.resolve(data)}}function getIndexedDBDataUsingCallBackWithKey(key,tableName,serverUrl,keyColumn,inputProcessCallback,outputProcessCallback){return getTableDataByKey(key,tableName,serverUrl,keyColumn,undefined,undefined,inputProcessCallback,outputProcessCallback)}function getIndexedDBDataUsingCallBack(tableName,serverUrl,keyColumn,inputProcessCallback,outputProcessCallback){return getTableDataByKey(undefined,tableName,serverUrl,keyColumn,undefined,undefined,inputProcessCallback,outputProcessCallback)}function getFilteredDataFromExisting(data,query,pageNo,noOfResult){return $.indexedDB(INDEXEDDB_DATABASENAME).filterExistingRecords(data,query,pageNo,noOfResult)}