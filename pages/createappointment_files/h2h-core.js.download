(function(){var tm=angular.module("ecw.telemed");if(!tm){return}tm.factory("h2hCore",["h2hAjaxService","$ocLazyLoad",h2hCoreFactory]);tm.service('h2hAjaxService',["$http",h2hAjaxServiceFn]);var H2HConstants=_deepFreeze({CALL_VIEW:{NORMAL:"NORMAL",EVA:"EVA",EVA_DOCKED:"EVADOCKED"},INIT_CALL_RESPONSE_TYPE:{SHOW_UI:"SHOWUI",ENROLLMENT_SELECTION:"ENRLSELECTION"},CALL_STATUS:{INITIATED:1,INPROGRESS:2,AUDIO_CALL_COMPLETED:3,VIDEO_CALL_COMPLETED:4,UNABLE_TO_REACH_PATIENT:5,CALL_NOT_COMPLETED:6},CALL_ERROR_CODE:{C_3001:3001,C_3002:3002,C_3003:3003,C_3004:3004,C_3005:3005,C_3006:3006,C_3007:3007,C_3008:3008,C_3009:3009,C_3010:3010,C_3011:3011,C_3012:3012,C_3013:3013,C_3014:3014},CALL_TYPE:{AUDIO:1,VIDEO:2},USERTYPE:{PROVIDER:1,STAFF:2,PATIENT:3},VIDEO_VIEW_RESOLUTION:{MIN_HEIGHT:410,MIN_WIDTH:420},OT_STREAM:{PUBLISHER:"publisher",SUBSCRIBER:"subscriber"}});var h2hAjaxService=null;var ocLazyLoadService=null;var callInfo={};function h2hDebug(msg){try{if(window&&window.enableH2HDebug&&msg){if("test".constructor===msg.constructor){var log="H2H > { ";log+="ts : "+new Date+", ";log+="log : "+msg;log+=" }";console.log(log)}else{console.log(msg)}}}catch(e){}}function _deepFreeze(o){try{if(o){Object.freeze(o);Object.getOwnPropertyNames(o).forEach(function(key,idx,array){if(o.hasOwnProperty(key)&&o[key]!==null&&!Object.isFrozen(o[key])){_deepFreeze(o[key])}})}}catch(e){h2hDebug(e)}return o}var H2HButtonFunctions=function(){var started=false;var timer=null;var interval=2e3;var ptIdsToFetch=[];var keysToNotify=[];function start(){if(started||!started&&timer){return}timer=setTimeout(function(){if(!started&&ptIdsToFetch.length>0){started=true;var tmpData=ptIdsToFetch;var tmpKeysToNotify=keysToNotify;ptIdsToFetch=[];keysToNotify=[];h2hDebug("Fetching patient details > "+tmpData.toString());h2hAjaxService.postCall({action:'getDetailsOfPt',ptIds:tmpData.toString()}).success(function(result){try{started=false;clearTimer();if(result&&result.status===1){H2HButtonObserver.notify(tmpKeysToNotify,"onPtStatusSuccess",[result.data])}else{H2HButtonObserver.notify(tmpKeysToNotify,"onPtStatusFailed",[])}h2hDebug("Checking if more patients to fetch > "+ptIdsToFetch.toString());if(ptIdsToFetch.length>0){start()}}catch(e){h2hDebug(e);H2HButtonObserver.notify(tmpKeysToNotify,"onPtStatusFailed",[])}}).error(function(error){try{started=false;clearTimer();H2HButtonObserver.notify(tmpKeysToNotify,"onPtStatusFailed",[]);if(ptIdsToFetch.length>0){start()}}catch(e){h2hDebug(e);H2HButtonObserver.notify(tmpKeysToNotify,"onPtStatusFailed",[])}h2hDebug(error)})}},interval)}function push(btnSubscriber){if(ptIdsToFetch.indexOf(btnSubscriber.ptId)===-1){ptIdsToFetch.push(btnSubscriber.ptId)}keysToNotify.push(btnSubscriber.source+"_"+btnSubscriber.id+"_"+btnSubscriber.ptId);start()}function clearTimer(){if(timer){clearTimeout(timer);timer=null}}return{push:push}}();function H2HButtonSubscriber(id,ptId,source){this.id=id;this.ptId=ptId;this.source=source}var H2HButtonObserver=function(){var subscribers={};var subscribe=function(btnSubscriber){if(btnSubscriber&&btnSubscriber instanceof H2HButtonSubscriber){var key=btnSubscriber.source+"_"+btnSubscriber.id+"_"+btnSubscriber.ptId;subscribers[key]=btnSubscriber;if(btnSubscriber.source===H2HConstants.CALL_VIEW.NORMAL){H2HButtonFunctions.push(btnSubscriber)}h2hDebug("BTN OBSERVER SUBSCRIBED > source > "+btnSubscriber.source);h2hDebug(subscribers);return true}return false};var unsubscribe=function(btnSubscriber){var key=btnSubscriber.source+"_"+btnSubscriber.id+"_"+btnSubscriber.ptId;if(subscribers&&subscribers.hasOwnProperty(key)){delete subscribers[key];h2hDebug("BTN OBSERVER UN-SUBSCRIBED > source > "+btnSubscriber.source);h2hDebug(subscribers);return true}return false};var notify=function(keysList,funName,params){params=params||[];if(keysList&&keysList.length>0){$.each(keysList,function(key){if(subscribers&&keysList[key]&&subscribers.hasOwnProperty(keysList[key])){var tmpObj=subscribers[keysList[key]];if(funName&&funName!==''&&tmpObj.hasOwnProperty(funName)){tmpObj[funName].apply(this,params)}}})}else if(Object.keys(subscribers).length>0){$.each(subscribers,function(key,val){if(val&&funName&&funName!==''&&val.hasOwnProperty(funName)){val[funName].apply(this,params)}})}};return{subscribe:subscribe,unsubscribe:unsubscribe,notify:notify}}();function H2HCallViewSubscriber(source,parentSelector,scopeId){this.source=source;this.parentSelector=parentSelector;this.scopeId=scopeId}var H2HCallViewObserver=function(){var subscribers={};var subscribe=function(callViewSubscriber){if(callViewSubscriber&&callViewSubscriber instanceof H2HCallViewSubscriber){subscribers[callViewSubscriber.source]=callViewSubscriber;h2hDebug("CALLVIEW OBSERVER SUBSCRIBED > source > "+callViewSubscriber.source);h2hDebug(subscribers);return true}return false};var unsubscribe=function(callViewSubscriber){if(callViewSubscriber&&subscribers[callViewSubscriber.source]){delete subscribers[callViewSubscriber.source];h2hDebug("CALLVIEW OBSERVER UN-SUBSCRIBED > source > "+callViewSubscriber.source);h2hDebug(subscribers);return true}return false};var notify=function(callSource,funName,params){params=params||[];callSource=callSource||callInfo.source;params.splice(0,0,callInfo.source);if(callSource&&callSource===H2HConstants.CALL_VIEW.NORMAL&&subscribers.hasOwnProperty(H2HConstants.CALL_VIEW.NORMAL)){var tmpObj=subscribers[H2HConstants.CALL_VIEW.NORMAL];if(tmpObj&&tmpObj.hasOwnProperty(funName)){tmpObj[funName].apply(this,params)}}else{$.each(subscribers,function(key,val){if(val&&val.hasOwnProperty(funName)){val[funName].apply(this,params)}})}};return{subscribe:subscribe,unsubscribe:unsubscribe,notify:notify,getCallViewObservers:function(){return subscribers}}}();var H2HCallViewFunctions=function(){var callRingingTimer=null;var callAcceptanceTimer=null;var CALL_WAITING_TIMER_DURATION=6e4;var endCallClicked=false;var initCall=function(i){try{callInfo={};callInfo=i;h2hDebug("INIT CALL WITH > ");h2hDebug(callInfo);endCallClicked=false;_bindListeners();H2HCallViewObserver.notify(null,"onCallInitiated",[callInfo]);H2HButtonObserver.notify(null,"onCallInitiated",[callInfo.ptId]);_init()}catch(e){endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3012,e.message,false)}};var endCall=function(callStatus,errCode,errorDesc,isUIMsg){try{endCallClicked=true;errCode=errCode||0;errorDesc=errorDesc||"";_updateH2HCallLogDtl(callStatus,errCode,errorDesc);_unbindListeners();OTContainer.destroySession();H2HCallViewFunctions.cancelCallRingingTimer();H2HCallViewFunctions.cancelCallAcceptanceTimer();ClockTimer.stop()}catch(e){h2hDebug(e)}H2HCallViewObserver.notify(callInfo.source,"onCallEnded",[_getErrorMessage(callStatus,errCode,errorDesc,isUIMsg,callInfo.duration),callInfo.duration]);H2HButtonObserver.notify(null,"onCallEnded",[callInfo.ptId]);callInfo={}};var _getErrorMessage=function(callStatus,code,errorDesc,isUIMsg,callDuration){var msg="";if(isUIMsg){msg=errorDesc}else if(!callDuration||callDuration<=0){msg="There was a problem starting the call. Please try again later.";if(callStatus===H2HConstants.CALL_STATUS.UNABLE_TO_REACH_PATIENT){msg="There was a problem reaching the patient. Please try again later."}}return msg};var _init=function(){var _managedById=callInfo.hasOwnProperty("managedByHealowId")&&callInfo.managedByHealowId>0?callInfo.managedByHealowId:0;h2hAjaxService.postCall({action:'initCall',ptId:callInfo.ptId,ptName:callInfo.ptName,userType:global.loginUserType,callContext:callInfo.callContext,callType:callInfo.callType,managedById:_managedById}).success(function(responseData){try{if(endCallClicked){return}addEventData("initCall()",responseData?"Response status : "+responseData.status+" , Has error : "+responseData.data.hasError:"");if(responseData&&responseData.status===1){if(responseData.data.hasError){endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,0,responseData.data.errorMsg,true)}else if(responseData.data.isSingleUser||_managedById>0){if(!callInfo.hasOwnProperty("isManagedUser"))callInfo.isManagedUser=responseData.data.isManagedUser;if(!callInfo.hasOwnProperty("managedByHealowId"))callInfo.managedByHealowId=responseData.data.managedById;if(!callInfo.hasOwnProperty("managedByName"))callInfo.managedByName=responseData.data.managedByName;if(!callInfo.hasOwnProperty("managedByRelation"))callInfo.managedByRelation=responseData.data.relation;callInfo.callLogId=parseFloat(responseData.data.callLogId);callInfo.cts=parseFloat(responseData.data.cts);var apiKey=parseInt(responseData.data.apiKey,10);H2HCallViewObserver.notify(null,"onInitCallResponse",[H2HConstants.INIT_CALL_RESPONSE_TYPE.SHOW_UI,null]);OTContainer.connect(apiKey,responseData.data.videoSession,responseData.data.videoToken.replace(/(\r\n|\n|\r)/gm,""))}else if(responseData.data.enrollment_selection){H2HCallViewObserver.notify(null,"onInitCallResponse",[H2HConstants.INIT_CALL_RESPONSE_TYPE.ENROLLMENT_SELECTION,responseData.data.enrollment_selection])}else{endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3009,"Response type of initCall not determined",false)}}else{endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3009,"Response data is not valid",false)}}catch(error){h2hDebug(error);addEventData("initCall()",error);endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3010,error.message,false)}}).error(function(error){h2hDebug(error);endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3011,error,false)})};var _calculateCallDuration=function(){var d=0;try{if(callInfo.startTime){d=parseFloat((new Date-callInfo.startTime)/1e3);d=isNaN(d)?0:Math.abs(Math.round(d))}}catch(e){h2hDebug(e)}return d};var addEventData=function(eventName,data,id){try{var eventObj={};eventObj.ts=moment(new Date).format("YYYY-MM-DD HH:mm:ss");eventObj.type=eventName;eventObj.data=data;eventObj.identifier=id?id:"";if(callInfo&&Object.keys(callInfo).length>0){callInfo.eventData=callInfo.eventData||[];callInfo.eventData.push(eventObj)}}catch(e){h2hDebug(e)}};var changeStateHealowConnectBtn=function(){healowConnectBtnFunctions.setStarted(true);healowConnectBtnFunctions.getH2HCallPatientInfo()};var _updateH2HCallLogDtl=function(callStatus,errorCode,errorDesc){try{if(callInfo&&Object.keys(callInfo).length>0&&callInfo.hasOwnProperty("callLogId")&&callInfo.callLogId>0){callInfo.duration=_calculateCallDuration();var param={action:"updateH2HCallLog",callLogId:callInfo.callLogId,deviceType:callInfo.deviceType,deviceId:callInfo.deviceId,statusMsgType:callStatus,errorCode:errorCode,errorDesc:errorDesc,callDuration:callInfo.duration,_data:CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(callInfo.eventData?JSON.stringify(callInfo.eventData):""))};if(callInfo.browserRefresh){h2hAjaxService.syncPostCall(param).success(function(result){if(result&&result.status===1){changeStateHealowConnectBtn()}})}else{h2hAjaxService.postCall(param).success(function(result){if(result&&result.status===1){changeStateHealowConnectBtn()}})}}}catch(e){h2hDebug(e)}};var _bindListeners=function(){$(window).on('unload',function(){callInfo.browserRefresh=true;var status=_getEndCallStatus();endCall(status,0,null,false)})};var _unbindListeners=function(){$(window).off('unload')};var _getEndCallStatus=function(){var status;if(callInfo.patientCallConnectionId){status=callInfo.callType===H2HConstants.CALL_TYPE.AUDIO?H2HConstants.CALL_STATUS.AUDIO_CALL_COMPLETED:H2HConstants.CALL_STATUS.VIDEO_CALL_COMPLETED}else{status=H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED}return status};var startCallRingingTimer=function(){cancelCallRingingTimer();callRingingTimer=setTimeout(function(){endCall(H2HConstants.CALL_STATUS.UNABLE_TO_REACH_PATIENT,0,null,false)},CALL_WAITING_TIMER_DURATION)};var cancelCallRingingTimer=function(){if(callRingingTimer){clearTimeout(callRingingTimer);callRingingTimer=null}};var startCallAcceptanceTimer=function(){if(!callAcceptanceTimer){callAcceptanceTimer=setTimeout(function(){endCall(H2HConstants.CALL_STATUS.UNABLE_TO_REACH_PATIENT,H2HConstants.CALL_ERROR_CODE.C_3013,null,false)},CALL_WAITING_TIMER_DURATION)}};var cancelCallAcceptanceTimer=function(){if(callAcceptanceTimer){clearTimeout(callAcceptanceTimer);callAcceptanceTimer=null}};var sendH2HPush=function(){if(endCallClicked||!callInfo.callLogId){return}h2hAjaxService.postCall({action:'sendH2HDetailsToHealow',ptId:callInfo.ptId,managedByHealowId:callInfo.managedByHealowId,userType:global.loginUserType,callType:callInfo.callType,callLogId:callInfo.callLogId,cts:callInfo.cts}).success(function(data){try{if(endCallClicked){return}if(data.status===1){H2HCallViewObserver.notify(null,"onCallStatusMsg",["Calling"])}else{var msg="There was a problem reaching the patient. Please try again later.";var err_code=H2HConstants.CALL_ERROR_CODE.C_3013;if(data.data&&data.data.err_code&&data.data.err_desc){msg=data.data.err_desc;err_code=data.data.err_code}addEventData("sendH2HPush()",data.data?data.data:msg);H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.UNABLE_TO_REACH_PATIENT,err_code,msg,true)}}catch(e){addEventData("sendH2HPush()",e?e.message+" || "+e.stack:"Unexpected Exception");H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.UNABLE_TO_REACH_PATIENT,H2HConstants.CALL_ERROR_CODE.C_3013,e.message,false)}}).error(function(error){addEventData("sendH2HPush()",error);H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.UNABLE_TO_REACH_PATIENT,H2HConstants.CALL_ERROR_CODE.C_3014,error,false)})};var muteUnmuteMic=function(status){OTContainer.muteUnmuteMic(status);H2HCallViewObserver.notify(null,"onOTCallMicMuteUnmute",[status])};var enableDisableVideo=function(status){OTContainer.enableDisableVideo(status);H2HCallViewObserver.notify(null,"onOTCallEnableDisableVideo",[status])};var cleanupCallViewObjects=function(isCallEnded){if(!isCallEnded){H2HCallViewObserver.notify(H2HConstants.CALL_VIEW.NORMAL,"onPopoutViewShow",null)}OTContainer.cleanupOTCallViewObjects()};var formatCallDuration=function(time){time=Number(time);var h=Math.floor(time/3600);var m=Math.floor(time%3600/60);var s=Math.floor(time%3600%60);var hDisplay=h>0?h+"h ":"";var mDisplay=m>0?m+"m ":"";var sDisplay=s>0&&m===0?"< 1m":s+"s ";return hDisplay+mDisplay+sDisplay};var getDeviceType=function(data){if(data.toLowerCase()==='android'){return 2}else if(data.toLowerCase()==='ios'||data.toLowerCase()==='iphone'||data.toLowerCase()==='ipad'){return 1}else{return 0}};var getPatientNameIdentifier=function(ptName,ptAge,ptGender){var msg="";if(ptName){msg+=ptName}if(ptAge){msg+=", "+ptAge}if(ptGender){msg+=", "+ptGender}return msg};return{initCall:initCall,endCall:endCall,startCallRingingTimer:startCallRingingTimer,cancelCallRingingTimer:cancelCallRingingTimer,startCallAcceptanceTimer:startCallAcceptanceTimer,cancelCallAcceptanceTimer:cancelCallAcceptanceTimer,sendH2HPush:sendH2HPush,getEndCallStatus:_getEndCallStatus,endCallFromUI:function(){endCall(_getEndCallStatus(),0,null,false)},muteUnmuteMic:muteUnmuteMic,enableDisableVideo:enableDisableVideo,cleanupCallViewObjects:cleanupCallViewObjects,getDeviceType:getDeviceType,formatCallDuration:formatCallDuration,addEventData:addEventData,getPatientNameIdentifier:getPatientNameIdentifier}}();var OTContainer=function(){var sessionObj;var callStreams={};var invalidConnectionIdsArr=[];var startRingTimer=null;var clearRingTimer=function(){if(startRingTimer){clearTimeout(startRingTimer);startRingTimer=null}};var timerOfOTScript=null;function clearOTTimer(){clearTimeout(timerOfOTScript);timerOfOTScript=null}var verifyOTScript=function(apiKey,sessionId,token){if(typeof OT==="undefined"){timerOfOTScript=setTimeout(function(){H2HCallViewFunctions.addEventData("OT:undefined > exception","OT is not defined");H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3003,"OT is not defined",false)},6e4);ocLazyLoadService.load({files:[{type:'js',path:getItemKeyValue("opentoksdklocation")}]}).then(function(){clearOTTimer();bindOTListeners(apiKey,sessionId,token)},function(e){clearOTTimer();H2HCallViewFunctions.addEventData("OT:undefined > exception",e);h2hDebug(e);H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3003,e.message,false)})}else{bindOTListeners(apiKey,sessionId,token)}};var bindOTListeners=function(apiKey,sessionId,token){try{destroySession();h2hDebug("Connecting to OT session...");sessionObj=OT.initSession(apiKey,sessionId);sessionObj.connect(token,connectHandler);sessionObj.on("connectionCreated",connectionCreatedHandler);sessionObj.on("connectionDestroyed",connectionDestroyedHandler);sessionObj.on("streamCreated",streamCreatedHandler);if(callInfo.callType===H2HConstants.CALL_TYPE.VIDEO){sessionObj.on("streamPropertyChanged",streamPropertyChangedHandler)}}catch(e){H2HCallViewFunctions.addEventData("OT:connect() > exception",e);h2hDebug(e);H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3003,e.message,false)}};var connect=function(apiKey,sessionId,token){verifyOTScript(apiKey,sessionId,token)};var connectHandler=function(error){if(!error){clearRingTimer();startRingTimer=setTimeout(function(){H2HCallViewFunctions.startCallRingingTimer();H2HCallViewObserver.notify(null,"onCallStatusMsg",["Trying to reach the patient"]);H2HCallViewFunctions.sendH2HPush();clearRingTimer()},2e3)}else{H2HCallViewFunctions.addEventData("OT:connectHandler() > error",safeFormatJson(error));H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3004,safeFormatJson(error),false)}};var connectionCreatedHandler=function(event){try{var connectionData=JSON.parse(event.connection.data);if(connectionData){var nUserType=parseInt(connectionData.ut,10);var nFrom=parseInt(connectionData.from,10);var nTo=parseInt(connectionData.to,10);if(isNaN(nUserType)){throw"Unable to determine UserType."}if(isNaN(nFrom)){throw"Unable to determine Caller ID."}if(isNaN(nTo)){throw"Unable to determine Patient ID."}if(event.target.connection.connectionId!==event.connection.connectionId&&nUserType===H2HConstants.USERTYPE.PATIENT&&callInfo.ptId===nTo&&callInfo.callerId===nFrom){var nConnDataCTS=parseFloat(connectionData.cts);if(isNaN(nConnDataCTS)||nConnDataCTS!==callInfo.cts){H2HCallViewFunctions.addEventData("OT:connectionCreatedHandler() > cts error","cts is mismatched hence disconnecting the connection id",event.connection.connectionId);h2hDebug("Force disconnecting the connection as call timestamp is mismatched > conn id > "+event.connection.connectionId);if(sessionObj){sessionObj.forceDisconnect(event.connection.connectionId);invalidConnectionIdsArr=invalidConnectionIdsArr||[];invalidConnectionIdsArr.push(event.connection.connectionId)}return}H2HCallViewFunctions.addEventData("OT:connectionCreatedHandler() > valid connection",connectionData,event.connection.connectionId);H2HCallViewFunctions.cancelCallRingingTimer();callInfo.ptConnectionArr=callInfo.ptConnectionArr||[];callInfo.ptConnectionArr.push(event.connection);forceDisconnectConnection();if(!callInfo.patientCallConnectionId){H2HCallViewFunctions.startCallAcceptanceTimer()}}else if(nUserType!==H2HConstants.USERTYPE.PATIENT&&event.target.connection.connectionId!==event.connection.connectionId){if(nTo===callInfo.ptId){if(event.target.connection.creationTime>event.connection.creationTime){clearRingTimer();H2HCallViewFunctions.addEventData("OT:connectionCreatedHandler() > Simultaneous login case of EMR",event.connection.creationTime,event.connection.connectionId);H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3006,"Call has been already started from somewhere else. Please try again later.",true)}}}}else{if(sessionObj){H2HCallViewFunctions.addEventData("OT:connectionCreatedHandler() > invalid token data","Removing the connection as token data is invalid",event.connection.connectionId);sessionObj.forceDisconnect(event.connection.connectionId);invalidConnectionIdsArr=invalidConnectionIdsArr||[];invalidConnectionIdsArr.push(event.connection.connectionId)}}}catch(e){h2hDebug(e);H2HCallViewFunctions.addEventData("OT:connectionCreatedHandler() > exception",e?e.message+" || "+e.stack:"Unexpected Exception",event.connection.connectionId);H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3004,e.message,false)}};var connectionDestroyedHandler=function(event){try{if(sessionObj.connection.connectionId!==event.connection.connectionId){H2HCallViewFunctions.addEventData("OT:connectionDestroyedHandler() > reason: "+event.reason,connectionData,event.connection.connectionId);if(invalidConnectionIdsArr&&invalidConnectionIdsArr.indexOf(event.connection.connectionId)!==-1){var i=invalidConnectionIdsArr.indexOf(event.connection.connectionId);invalidConnectionIdsArr.splice(i,1);return}var connectionData=JSON.parse(event.connection.data);removeConnectionFromArray(event.connection.id);if(connectionData){var nUserType=parseInt(connectionData.ut,10);var nFrom=parseInt(connectionData.from,10);var nTo=parseInt(connectionData.to,10);if(isNaN(nUserType)){throw"Unable to determine UserType."}if(isNaN(nFrom)){throw"Unable to determine Caller ID."}if(isNaN(nTo)){throw"Unable to determine Patient ID."}if(callInfo.patientCallConnectionId){if(nUserType===H2HConstants.USERTYPE.PATIENT&&callInfo.ptId===nTo&&callInfo.callerId===nFrom&&callInfo.patientCallConnectionId===event.connection.connectionId){var patientIdentifier=callInfo.source===H2HConstants.CALL_VIEW.EVA?callInfo.ptName:H2HCallViewFunctions.getPatientNameIdentifier(callInfo.ptName,callInfo.ptAge,callInfo.ptGender);var msg=callInfo.isManagedUser?callInfo.managedByName+", "+callInfo.managedByRelation+", has ended the call to discuss patient "+patientIdentifier:patientIdentifier+" has ended the call.";H2HCallViewFunctions.endCall(H2HCallViewFunctions.getEndCallStatus(),0,msg,true)}}else if(nUserType===H2HConstants.USERTYPE.PATIENT){var patientIdentifier=callInfo.source===H2HConstants.CALL_VIEW.EVA?callInfo.ptName:H2HCallViewFunctions.getPatientNameIdentifier(callInfo.ptName,callInfo.ptAge,callInfo.ptGender);var msg=callInfo.isManagedUser?callInfo.managedByName+", "+callInfo.managedByRelation+", missed/declined the call to discuss patient "+patientIdentifier:patientIdentifier+" missed/declined the call.";H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,0,msg,true)}}}}catch(e){h2hDebug(e);H2HCallViewFunctions.addEventData("OT:connectionDestroyedHandler() > exception",e?e.message+" || "+e.stack:"Unexpected Exception",event.connection.connectionId);H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3004,e.message,false)}};var hasAtleastOneSubscriber=function(){Object.getOwnPropertyNames(callStreams).forEach(function(key,idx,array){if(callStreams[key]&&callStreams[key].hasOwnProperty(H2HConstants.OT_STREAM.SUBSCRIBER)){return true}});return false};var streamCreatedHandler=function(event){try{if(callInfo.patientCallConnectionId||hasAtleastOneSubscriber()){return}H2HCallViewFunctions.cancelCallAcceptanceTimer();callInfo.patientCallConnectionId=event.stream.connection.connectionId;H2HCallViewFunctions.addEventData("OT:streamCreatedHandler() > call accepted","Call accepted from this connection id",event.stream.connection.connectionId);forceDisconnectConnection();var connectionData=JSON.parse(event.stream.connection.data);callInfo.deviceType=H2HCallViewFunctions.getDeviceType(connectionData.dt);callInfo.deviceId=connectionData.devid;H2HCallViewFunctions.addEventData("OT:streamCreatedHandler()",connectionData,event.stream.id);_subscribeStreamForCall(event)}catch(e){h2hDebug(e);H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3004,e.message,false)}};var _subscribeStreamForCall=function(event){var subscriberOptions={};var subscriberIdentifier;if(callInfo.callType===H2HConstants.CALL_TYPE.AUDIO){subscriberOptions={subscribeToAudio:true,subscribeToVideo:false,insertMode:'append'};subscriberIdentifier="audioSubscriber"}else if(callInfo.callType===H2HConstants.CALL_TYPE.VIDEO){subscriberIdentifier="videoSubscriber";subscriberOptions={insertMode:"append",showControls:false,width:"100%",height:"100%"}}var callViewObservers=H2HCallViewObserver.getCallViewObservers();var callViewObserversLen=Object.keys(callViewObservers).length;var cnt=0;$.each(callViewObservers,function(key,val){if(callInfo.callType===H2HConstants.CALL_TYPE.AUDIO&&key!==H2HConstants.CALL_VIEW.NORMAL){return true}var ele=$("#"+val.parentSelector)?$("#"+val.parentSelector).find(" #"+subscriberIdentifier+"_"+val.scopeId)[0]:null;if(!ele){H2HCallViewFunctions.addEventData("_subscribeStreamForCall()","No DOM element found to subscribe for "+key);H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3004,"Failed to obtain subscriber element",false);return false}var subscriberObj=sessionObj.subscribe(event.stream,ele,subscriberOptions,function(error){if(!error){if(!sessionObj){H2HCallViewFunctions.addEventData("_subscribeStreamForCall() > session is null","Edge case handling when session id is null in between subscribe");H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3004,null,false);return false}if(!callStreams.hasOwnProperty(key)){callStreams[key]={}}callStreams[key][H2HConstants.OT_STREAM.SUBSCRIBER]=subscriberObj;cnt++;if(callInfo.callType===H2HConstants.CALL_TYPE.VIDEO&&key===H2HConstants.CALL_VIEW.NORMAL){_bindVideoEvents(subscriberObj)}if(callInfo.callType===H2HConstants.CALL_TYPE.AUDIO||cnt===callViewObserversLen){H2HCallViewObserver.notify(null,"onOTStreamCreated",null);callInfo.startTime=new Date;ClockTimer.start();publishSelfView()}H2HCallViewFunctions.addEventData("_subscribeStreamForCall()","Subscribed to Remote Stream for : "+key,event.stream.id);h2hDebug("Subscribed to Remote Stream > "+cnt);h2hDebug(subscriberObj)}else{H2HCallViewFunctions.addEventData("_subscribeStreamForCall() > error",safeFormatJson(error),safeFormatJson(event.stream.id));H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3004,safeFormatJson(error),false);return false}})})};var _bindVideoEvents=function(subscriberObj){var events=["videoDisabled","videoEnabled","videoDisableWarning","videoDisableWarningLifted"];events.forEach(function(event){subscriberObj.on(event,function(){H2HCallViewObserver.notify(null,"onVideoSpecificMsg",[event])})})};var publishSelfView=function(){try{var publisherIdentifier;var publisherOptions={};var callViewObservers=H2HCallViewObserver.getCallViewObservers();var callViewObserversLen=Object.keys(callViewObservers).length;var cnt=0;if(callInfo.callType===H2HConstants.CALL_TYPE.AUDIO){publisherIdentifier="audioPublisher_";publisherOptions={videoSource:null,insertMode:"append"}}else if(callInfo.callType===H2HConstants.CALL_TYPE.VIDEO){publisherIdentifier="videoPublisher_";publisherOptions={width:"100%",height:"100%",insertMode:"append",showControls:false,frameRate:30,resolution:'1280x720'}}$.each(callViewObservers,function(key,val){if(callInfo.callType===H2HConstants.CALL_TYPE.AUDIO&&key!==H2HConstants.CALL_VIEW.NORMAL){return true}var ele=$("#"+val.parentSelector)?$("#"+val.parentSelector).find(" #"+publisherIdentifier+val.scopeId)[0]:null;if(!ele){H2HCallViewFunctions.addEventData("OT:publishSelfView() > error","No DOM element to publish for "+key);H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3004,"Failed to obtain publisher element",false);return false}var pubObj=OT.initPublisher(ele,publisherOptions,function(error){if(error){var msg=safeFormatJson(error);var isUImsg=false;if(error.name==="OT_NO_DEVICES_FOUND"){msg="No voice or video input devices are available on this machine.";isUImsg=true}else if(error.name==="OT_USER_MEDIA_ACCESS_DENIED"){msg="Microphone/Camera permission denied by user. Please allow and try again.";isUImsg=true}H2HCallViewFunctions.addEventData("OT:publishSelfView() > error",safeFormatJson(error));H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3007,msg,isUImsg);return false}else{h2hDebug("Publisher Object initiated for > "+key);h2hDebug(pubObj);pubObj.publishAudio(key===H2HConstants.CALL_VIEW.NORMAL);callStreams[key][H2HConstants.OT_STREAM.PUBLISHER]=pubObj;cnt++;if(callInfo.callType===H2HConstants.CALL_TYPE.AUDIO||cnt===callViewObserversLen){h2hDebug("Publishing OT main call view publisher to session...");sessionObj.publish(callStreams[H2HConstants.CALL_VIEW.NORMAL][H2HConstants.OT_STREAM.PUBLISHER],function(error){if(!error){H2HCallViewFunctions.addEventData("OT:publishSelfView()","Published normal call self view to session");H2HCallViewObserver.notify(null,"onOTPublished",null)}else{H2HCallViewFunctions.addEventData("OT:publishSelfView() > error",safeFormatJson(error));H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3004,safeFormatJson(error),false);return false}})}}})})}catch(e){H2HCallViewFunctions.addEventData("OT:publishSelfView() > exception",e?e.message+" || "+e.stack:"Unexpected Exception");h2hDebug(e);H2HCallViewFunctions.endCall(H2HConstants.CALL_STATUS.CALL_NOT_COMPLETED,H2HConstants.CALL_ERROR_CODE.C_3008,e.message,false)}};var streamPropertyChangedHandler=function(event){if(event.changedProperty==='videoDimensions'){H2HCallViewObserver.notify(null,"onOTStreamPropertyChanged",null)}};var destroyPublisher=function(key,obj){try{if(!obj){return}h2hDebug("DESTROYING PUBLISHER FOR > "+key);if(key===H2HConstants.CALL_VIEW.NORMAL){if(sessionObj&&obj){sessionObj.unpublish(obj);obj.off();obj=null}}else{obj.off();obj.destroy();obj=null}}catch(e){h2hDebug(e)}};var destroySubscriber=function(key,obj){try{if(!obj){return}h2hDebug("DESTROYING SUBSCRIBER FOR IF ANY > "+key);if(sessionObj){sessionObj.unsubscribe(obj);obj.off();obj=null}}catch(e){h2hDebug(e)}return obj};var destroyCallStreams=function(isPopoutCallView){Object.getOwnPropertyNames(callStreams).forEach(function(key,idx,array){if(isPopoutCallView&&key===H2HConstants.CALL_VIEW.NORMAL){return true}destroyPublisher(key,callStreams[key][H2HConstants.OT_STREAM.PUBLISHER]);destroySubscriber(key,callStreams[key][H2HConstants.OT_STREAM.SUBSCRIBER]);delete callStreams[key]})};var destroySession=function(){try{invalidConnectionIdsArr=[];destroyCallStreams(false);if(sessionObj){h2hDebug("Disconnecting Session Obj...");sessionObj.disconnect();sessionObj.off();sessionObj=null}}catch(e){h2hDebug(e)}};var safeFormatJson=function(OTErrObj){try{var oTObjTestString="testString";var stringConstructor=oTObjTestString.constructor;if(!OTErrObj){return""}if(stringConstructor===OTErrObj.constructor){return OTErrObj}else{return JSON.stringify(OTErrObj)}}catch(e){return""}};var removeConnectionFromArray=function(connectionId){if(callInfo.ptConnectionArr&&callInfo.ptConnectionArr.length>0){for(var i=0;i<callInfo.ptConnectionArr.length;i++){var tmpConn=callInfo.ptConnectionArr[i];if(tmpConn.connectionId===connectionId){callInfo.ptConnectionArr.splice(i,1)}}}};var forceDisconnectConnection=function(){if(callInfo.ptConnectionArr&&callInfo.patientCallConnectionId){for(var i=0;i<callInfo.ptConnectionArr.length;i++){var tmpConn=callInfo.ptConnectionArr[i];if(tmpConn.connectionId!==callInfo.patientCallConnectionId){h2hDebug("Force Disconnecting conn id > "+tmpConn.connectionId);if(sessionObj){sessionObj.forceDisconnect(tmpConn.connectionId);H2HCallViewFunctions.addEventData("OT:forceDisconnectConnection()","Force disconnected connection...",tmpConn.connectionId)}}}}};var muteUnmuteMic=function(status){if(callStreams&&callStreams[H2HConstants.CALL_VIEW.NORMAL]&&callStreams[H2HConstants.CALL_VIEW.NORMAL][H2HConstants.OT_STREAM.PUBLISHER]){callStreams[H2HConstants.CALL_VIEW.NORMAL][H2HConstants.OT_STREAM.PUBLISHER].publishAudio(status)}};var enableDisableVideo=function(status){Object.getOwnPropertyNames(callStreams).forEach(function(key,idx,array){if(callStreams[key]&&callStreams[key][H2HConstants.OT_STREAM.PUBLISHER]){callStreams[key][H2HConstants.OT_STREAM.PUBLISHER].publishVideo(status)}})};return{connect:connect,destroySession:destroySession,muteUnmuteMic:muteUnmuteMic,enableDisableVideo:enableDisableVideo,cleanupOTCallViewObjects:function(){destroyCallStreams(true)}}}();var ClockTimer=function(){var sec=-1,min=0,hour=0;var callTimer=null;var format=function(val){if(val<10)return"0"+val;else return val};var start=function(){clearTimer();H2HCallViewObserver.notify(null,"onCallTimerTick",["00:00"]);callTimer=setInterval(function(){sec++;if(sec===60){sec=0;min+=1}if(min===60){min=0;hour+=1}var tmpTimer=hour>0?format(hour)+":"+format(min)+":"+format(sec):""+format(min)+":"+format(sec);H2HCallViewObserver.notify(null,"onCallTimerTick",[tmpTimer])},1e3)};var stop=function(){clearTimer();sec=-1;min=0;hour=0};var clearTimer=function(){if(callTimer){clearInterval(callTimer);callTimer=null}};return{start:start,stop:stop}}();function h2hCoreFactory(ajaxService,$ocLazyLoad){h2hAjaxService=ajaxService;ocLazyLoadService=$ocLazyLoad;return{"const":H2HConstants,H2HButtonSubscriber:H2HButtonSubscriber,btnSubscribe:H2HButtonObserver.subscribe,btnUnsubscribe:H2HButtonObserver.unsubscribe,H2HCallViewSubscriber:H2HCallViewSubscriber,callViewSubscribe:H2HCallViewObserver.subscribe,callViewUnsubscribe:H2HCallViewObserver.unsubscribe,initCall:H2HCallViewFunctions.initCall,endCallFromUI:H2HCallViewFunctions.endCallFromUI,muteUnmuteMic:H2HCallViewFunctions.muteUnmuteMic,enableDisableVideo:H2HCallViewFunctions.enableDisableVideo,cleanupCallViewObjects:H2HCallViewFunctions.cleanupCallViewObjects,h2hDebug:h2hDebug,formatCallDuration:H2HCallViewFunctions.formatCallDuration,getPatientNameIdentifier:H2HCallViewFunctions.getPatientNameIdentifier}}function h2hAjaxServiceFn($http){return{postCall:function(param){return $http({method:"POST",url:makeURL("/mobiledoc/jsp/webemr/telemed/h2h/h2hResponse.jsp"),data:$.param(param)})},syncPostCall:function(param){return $.ajax({method:"POST",url:makeURL("/mobiledoc/jsp/webemr/telemed/h2h/h2hResponse.jsp"),"async":false,data:$.param(param)})},getPatientPicturePath:function(ptId,ptPicName){return $http({dataType:'text',method:'GET',url:"/mobiledoc/jsp/webemr/toppanel/getPatientPicImgPath.jsp?patientId="+ptId+"&picFileName="+ptPicName})}}}})();